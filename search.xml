<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Shell</title>
      <link href="/2023/05/24/Shell/"/>
      <url>/2023/05/24/Shell/</url>
      
        <content type="html"><![CDATA[<div class="note info simple"><p>参考教程MIT公开课——The Missing Semester of Your CS Education</p></div><p><a href="https://missing-semester-cn.github.io/2020/course-shell/">课程公开笔记</a></p><h1 id="What-is-the-shell"><a href="#What-is-the-shell" class="headerlink" title="What is the shell?"></a>What is the shell?</h1><h2 id="why-we-need-shell"><a href="#why-we-need-shell" class="headerlink" title="why we need shell?"></a>why we need shell?</h2><p><code>These are great for 80% of use-cases(use GUI), but they are often fundamentally restricted in what they allow you to do — you cannot press a button that isn’t there or give a voice command that hasn’t been programmed.To take full advantage of the tools your computer provides, we have to go old-school and drop down to a textual interface: The Shell.</code></p><p>总而言之就是，图形化界面给我们提供了极大的便利，但由于将功能封装在一个个特定功能的按键等交互上，使得其灵活性大打折扣，而更加古老的命令行工具很大程度上能够解决这一问题。话说这结论我好像在哪听过，像是最近在读的<code>Orange&#39;s:一个操作系统的实现</code>里也有相似论点。</p><h1 id="Using-the-shell"><a href="#Using-the-shell" class="headerlink" title="Using the shell"></a>Using the shell</h1><p>在终端的命令提示符中输入想要执行的指令，这些命令会被<code>shell</code>所解析，以下是两个较为简单的命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~$ date</span><br><span class="line">2023年 05月 24日 星期三 20:22:36 CST</span><br><span class="line">frechen026@frechen026-virtual-machine:~$ echo hello</span><br><span class="line">hello</span><br><span class="line">frechen026@frechen026-virtual-machine:~$ echo &quot;hello world&quot;</span><br><span class="line">hello world</span><br><span class="line">frechen026@frechen026-virtual-machine:~$ echo hello\ world</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p><strong>传入的参数以空格分隔，一个多单词的参数，我们可以使用引号或者转义字符处理</strong></p><p><code>shell</code>借助环境变量<code>$PATH</code>知道某个程序存放的位置</p><p><code>shell</code>说白了也是一种程序设计语言，提示符中甚至可以有条件、循环等等语句</p><p>可以通过<code>echo $PATH</code>查看有哪些环境变量，同时使用<code>which</code>指令可以知晓某程序所在路径，可以发现将<code>echo</code>替换成<code>/usr/bin/echo</code>效果相同。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~$ echo $PATH</span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin</span><br><span class="line">frechen026@frechen026-virtual-machine:~$ which echo</span><br><span class="line">/usr/bin/echo</span><br><span class="line">frechen026@frechen026-virtual-machine:~$ /usr/bin/echo hello</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p><code>path</code>用以描述计算机中文件所在位置，<code>Linux</code>或<code>MacOS</code>起始路径都为根目录，位于整个文件系统的最顶层，<code>Windows</code>下每一个磁盘分区下都有一个根目录。<code>Linux</code>下可使用<code>pwd</code>指令打印出当前所在目录路径。</p><p>相对路径与绝对路径，<code>Linux</code>课程笔记中已有备注，不加以赘述。</p><p><code>.</code>和<code>..</code>是较为特殊两个目录，其实也都知道了，<code>.</code>表示当前目录，<code>..</code>表示当前目录的父目录。</p><p><code>cd</code>命令中两个较为特殊的符号<code>~</code>和<code>-</code>，<code>~</code>等价于<code>/home/username</code>，所以回到用户目录可以使用以下命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:/$ cd ~</span><br><span class="line">frechen026@frechen026-virtual-machine:~$ pwd</span><br><span class="line">/home/frechen026</span><br></pre></td></tr></table></figure><p>(其实直接<code>cd</code>不加任何参数也行)</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:/$ cd</span><br><span class="line">frechen026@frechen026-virtual-machine:~$ pwd</span><br><span class="line">/home/frechen026</span><br></pre></td></tr></table></figure><p>不过下列情形就有优势了</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~$ cd ~/Desktop/</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ pwd</span><br><span class="line">/home/frechen026/Desktop</span><br></pre></td></tr></table></figure><p><code>-</code>可以切换至上一次<code>cd</code>的目录，用于在两个目录之间跳转是极好的。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ cd -</span><br><span class="line">/home/frechen026</span><br><span class="line">frechen026@frechen026-virtual-machine:~$ cd -</span><br><span class="line">/home/frechen026/Desktop</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ cd -</span><br><span class="line">/home/frechen026</span><br><span class="line">frechen026@frechen026-virtual-machine:~$ cd -</span><br><span class="line">/home/frechen026/Desktop</span><br></pre></td></tr></table></figure><p>还有很多命令的讲解如<code>ls</code> <code>man</code> <code>move</code>…都与<code>Linux</code>相重复了，也就不加以赘述。</p><p>一个好用的快捷键<code>Ctrl + l</code>清屏操作，我居然还只会傻乎乎用<code>clear</code>指令，改天对快捷键也加以整理吧，无疑使用好快捷键可以大大提高效率。</p><h2 id="在程序间创建连接"><a href="#在程序间创建连接" class="headerlink" title="在程序间创建连接"></a>在程序间创建连接</h2><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>在 shell 中，程序有两个主要的“流”：它们的输入流和输出流。 当程序尝试读取信息时，它们会从输入流中进行读取，当程序打印信息时，它们会将信息输出到输出流中。 <strong>通常，一个程序的输入输出流都是您的终端。</strong>也就是，您的键盘作为输入，显示器作为输出。 <strong>但是，我们也可以重定向这些流</strong></p><p>最简单的重定向是 <code>&lt; file</code> 和 <code>&gt; file</code>。这两个命令可以将程序的输入输出流分别重定向到文件：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ echo hello &gt; hello.txt</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ cat hello.txt</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p>上述指令实现了将本应该输出到终端的<code>output stream</code>重定向到了<code>hello.txt</code>中</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ cat &lt; hello.txt</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p>上述指令实现了将<code>hello.txt</code>内容作为输入重定向到<code>cat</code>指令中，效果等同于<code>cat hello.txt</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ cat &lt; hello.txt &gt; world.txt</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ cat hello.txt </span><br><span class="line">hello</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ cat world.txt </span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p>上述指令实现了将<code>hello.txt</code>内容作为<code>input stream</code>重定向给<code>cat</code>指令作为输入，又将<code>cat</code>指令的输出重定向给<code>world.txt</code>作为输入。事实上<code>cat</code>指令并不知道重定向这回事，他只管接受属于他的<code>input stream</code>并输出它的<code>output stream</code>，重定向这回事是<code>shell</code>该干的事。</p><p>使用<code>&gt;&gt;</code>来向一个文件追加内容，注意，不单单是写入，而是追加：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ cat &lt; hello.txt &gt;&gt; world.txt</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ cat world.txt </span><br><span class="line">hello</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><h3 id="pipe"><a href="#pipe" class="headerlink" title="pipe"></a>pipe</h3><p><code>|</code>分隔两个程序，将左侧程序的输出作为右侧程序的输入，看jyy第一节课就用到这个玩意的，当时也没去多想，看似高深实际了解了好像也就那么回事。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ ls -l</span><br><span class="line">total 16</span><br><span class="line">-rw-rw-r-- 1 frechen026 frechen026    6 5月  24 21:15 hello.txt</span><br><span class="line">drwxrwxr-x 2 frechen026 frechen026 4096 5月  18 10:27 MakeTest</span><br><span class="line">drwxrwxr-x 7 frechen026 frechen026 4096 5月  23 18:55 OS</span><br><span class="line">-rw-rw-r-- 1 frechen026 frechen026   12 5月  24 21:38 world.txt</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ ls -l | tail -n1</span><br><span class="line">-rw-rw-r-- 1 frechen026 frechen026   12 5月  24 21:38 world.txt</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop$ ls -l | head -n1</span><br><span class="line">total 16</span><br></pre></td></tr></table></figure><p>照着教程敲了<code>tail</code>，猜了一下对应应该有<code>head</code>指令吧，还真有。嘿嘿，合理的命名确实易于理解和记忆。上述指令将<code>ls -l</code>所输出的文件作为输入传递给了后续程序。</p><p><code>ls</code>指令并不认识<code>tail</code>和<code>head</code>，反之亦是如此，并非刻意兼容，他们所知道的只有从输入读数据，写到输出中，连接他们的是<code>pipe</code></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OS</title>
      <link href="/2023/05/21/OS/"/>
      <url>/2023/05/21/OS/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>无论何时要放在一个大系统环境中去理解操作系统</p><h2 id="计算机系统组成"><a href="#计算机系统组成" class="headerlink" title="计算机系统组成"></a>计算机系统组成</h2><p>计算机系统：硬件子系统 + 软件子系统</p><p>硬件：各种物理部件的有机组合，系统工作实体</p><p>软件：各种程序和文件，用于指挥计算机系统按指定要求协同工作</p><p>软硬件协同，硬件抽象为文件、外部shell</p><p>结构复杂的软件：工程化、社会计算性、文化性，考虑综合效益</p><h3 id="用户视图"><a href="#用户视图" class="headerlink" title="用户视图"></a>用户视图</h3><p>用户、程序员、语言处理程序设计者、操作系统设计者的视图是不同的，越往下能够看到和专注的地方越底层，分层思想</p><h2 id="硬件系统"><a href="#硬件系统" class="headerlink" title="硬件系统"></a>硬件系统</h2><p>组成：中央处理器、主存、外围设备、总线</p><p>当今计算机硬件经典结构与主流组织方式：存储程序计算机。又称冯诺依曼计算机模型，现如今沿用的大得多还是该结构，由输入设备、存储器、控制器、运算器、输出设备五部分构成。</p><h3 id="总线"><a href="#总线" class="headerlink" title="总线"></a>总线</h3><p>总线（Bus）是计算机各种功能部件之间传送信息的公共通信干线，它是CPU、内存、输入输出设备传递息的公用通道</p><p>计算机的各个部件通过总线相连接，外围设备通过相应的接口电路再与总线相连接，从而形成了计算机硬件系统</p><h4 id="总线类型"><a href="#总线类型" class="headerlink" title="总线类型"></a>总线类型</h4><p>内部总线：CPU内部<br>系统总线：连接CPU、存储器和各种I&#x2F;O模块主要部件<br>通信总线：用于计算机系统之间通信</p><p>系统总线实例：南桥、北桥。还挺意外的，原来所谓北桥就是主存控制器，南桥为I&#x2F;O控制器</p><h2 id="软件系统"><a href="#软件系统" class="headerlink" title="软件系统"></a>软件系统</h2><p>组成：系统软件、支撑软件、应用软件</p><p>系统软件：操作系统、实用程序、语言处理程序、数据库管理系统</p><p>支撑软件：接口软件、工具软件、环境数据库，支持用户使用计算机的环境，提供开发工具，也可认为是系统软件的一部分</p><p>应用软件是用户按其需要自行编写的专用程序</p><h2 id="操作技术发展"><a href="#操作技术发展" class="headerlink" title="操作技术发展"></a>操作技术发展</h2><p>操作平台与操作系统</p><p>手工操作-&gt;装入程序引进-&gt;汇编语言引入-&gt;高级语言引入-&gt;简单批处理系统-&gt;操作系统与自动化操作</p><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><p>OS是计算机系统最基础的系统软件，管理软硬件资源、控制程序执行，改善人机界面，合理组织计算机工作流程，为用户使用计算机提供良好运行环境。</p><p>OS是计算机系统的公共软件基础设施，所有应用程序共用OS服务，且OS内核是反应式reactive机制（中断驱动的）</p><p>操作系统组成：进程调度子系统、进程通信子系统……</p><p>操作系统类型：多道批处理操作系统、分时操作系统、实时操作系统</p><p>操作系统应用领域分类：服务器、并行、网络、手机、嵌入式……</p><p><strong>计算无处不在，软件定义世界</strong>不过显然没有硬件加以匹配，这话也只能成为一句空话</p><h2 id="资源管理视角"><a href="#资源管理视角" class="headerlink" title="资源管理视角"></a>资源管理视角</h2><p>计算机系统资源：<br>硬件资源：处理器、内存、外设<br>信息资源：数据、程序</p><p>思考如何高效管理计算机的软硬件资源？<br>当底层的实现较为复杂时，显然就会有人帮我们做好抽象与屏蔽。驱动程序！<br>驱动程序：最底层的、直接控制和监视各类硬件资源的部分</p><p>资源的共享方式：<br>独占使用、并发使用</p><p>资源分配策略：</p><ul><li>静态分配：进程运行前一次拿到全部独占资源，资源使用效率低</li><li>动态分配：使用资源前临时申请，可能产生竞争资源的死锁</li><li>资源抢占：被抢夺资源进程需要回滚</li></ul><h2 id="程序控制执行视角"><a href="#程序控制执行视角" class="headerlink" title="程序控制执行视角"></a>程序控制执行视角</h2><p>由于CPU速度与I&#x2F;O速度不匹配的矛盾非常突出，只有让多道程序同时进入内存争抢CPU运行，才可以够使得CPU和外围设备充分并行，从而提高计算机系统的使用效率</p><p>多道程序设计：让多个程序同时进入计算机的主存储器进行计算</p><p>多道程序设计的特点：</p><ul><li>CPU与外部设备充分并行</li><li>外部设备之间充分并行</li><li>发挥CPU的使用效率</li><li>提高单位时间的算题量</li><li>单道程序运算时间会增加</li></ul><p>多道程序系统的实现：</p><ul><li>为进入内存执行的程序建立管理实体：进程</li><li>OS应能管理与控制进程程序的执行</li><li>OS协调管理各类资源在进程间的使用</li><li>处理器的管理和调度</li><li>主存储器的管理和调度</li><li>其他资源的管理和调度</li></ul><p>多道程序系统的实现要点：</p><ul><li>如何使用资源：调用操作系统提供的服务例程(如何陷入操作系统)</li><li>如何复用CPU：调度程序(在CPU空闲时让其他程序运行)</li><li>如何使CPU与I&#x2F;O设备充分并行：设备控制器与通道(专用的I&#x2F;O处理器)</li><li>如何让正在运行的程序让出CPU：中断(中断正在执行的程序，引入OS处理)</li></ul><h2 id="操作控制计算机视角"><a href="#操作控制计算机视角" class="headerlink" title="操作控制计算机视角"></a>操作控制计算机视角</h2><p>计算机系统操作方式</p><ul><li>OS规定了合理操作计算机的工作流程</li><li>OS的操作接口——系统程序<br>  OS提供给用户的功能级接口，为用户提供的解决操作计算机和计算共性问题的所有服务的集合</li><li>OS的两类作业级接口<ul><li>脱机作业控制方式：作业控制语言</li><li>联机作业控制方式：操作控制命令</li></ul></li></ul><p>命令解释程序：接受和执行一条用户提出的对作业的加工处理命令，好像就是命令行交互式吧</p><h2 id="人机交互视角"><a href="#人机交互视角" class="headerlink" title="人机交互视角"></a>人机交互视角</h2><p>操作系统的人机交互部分</p><ul><li>OS改善人机界面，为用户使用计算机提供良好的环境</li><li>人机交互设备包括传统的终端设备和新型的模式识别设备</li><li>OS的人机交互部分用于控制有关设备运行和理解执行设备传来的命令</li><li>人机交互功能是决定计算机系统友善性的重要因素，是当今OS研发热点</li></ul><p>“人而不是技术是人机交互的中心”，代表性成果：鼠标、菜单与窗口控制</p><h2 id="程序接口视角"><a href="#程序接口视角" class="headerlink" title="程序接口视角"></a>程序接口视角</h2><p>操作系统的程序接口</p><ul><li>操作系统的程序接口：操作系统为程序运行扩充的编程接口</li><li>系统调用：操作系统实现的完成某种特定功能的过程；为所有运行程序提供访问操作系统的接口</li><li>POSIX支持</li></ul><p>系统调用的实现机制</p><ul><li>陷入处理机制：计算机系统中控制和实现系统调用的机制</li><li>陷入指令：也称访管指令，或异常中断指令，计算机系统为实现系统调用而引起处理器中断的指令</li><li>每个系统调用都事先规定了编号，并在约定寄存器中规定了传递给内部处理程序的参数</li></ul><p>系统调用的实现要点</p><ul><li>编写系统调用处理程序</li><li>设计一张系统调用入口地址表，每个入口地址指向一个系统调用的处理程序，并包含系统调用自带参数的个数</li><li>陷入处理机制需开辟现场保护区，以保存发生系统调用时的处理器现场</li></ul><p>系统调用实现流程：<br>用户进程-&gt;系统调用功能号-&gt;进入内核-&gt;保护CPU现场-&gt;获取系统功能号、获取入口地址-&gt;系统调用处理子程序-&gt;结束处理、恢复现场</p><p>Linux系统调用执行流程：<br>应用程序-&gt;C库展开-&gt;中断处理-&gt;内核函数</p><h2 id="系统结构视角"><a href="#系统结构视角" class="headerlink" title="系统结构视角"></a>系统结构视角</h2><p>在计算机软件发展史上，OS是第一个大规模的软件系统</p><p>OS作为大型软件，结构设计是关键</p><p>操作系统软件的结构设计</p><ul><li>OS构件<br>  内核、进程、线程、管程等</li><li>设计概念<br>  模块化、层次式、虚拟化</li><li>内核设计是OS设计中最为复杂的部分</li></ul><p>操作系统内核：</p><ul><li>单内核：内核中各部件杂然混居的形态，始于1960年代，广泛使用；如Unix&#x2F;Linux，及Windows(自称采用混合内核的CS结构)</li><li>微内核：1980年代始，强调结构性部件与功能性部件的分离，大部分OS研究都集中在此</li><li>混合内核：微内核和单内核的折中，较多组件在核心态中运行，以获得更快的执行速度</li><li>外内核：尽可能减少内核的软件抽象化和传统微内核的消息传递机制，使得开发者专注于硬件的抽象化；部分嵌入式系统使用</li></ul><h1 id="处理器管理"><a href="#处理器管理" class="headerlink" title="处理器管理"></a>处理器管理</h1><h2 id="处理器与寄存器"><a href="#处理器与寄存器" class="headerlink" title="处理器与寄存器"></a>处理器与寄存器</h2><p>用户程序可见寄存器：</p><ul><li>可以使程序员减少访问主存储器的次数，提高指令执行的效率</li><li>所有程序可使用，包括应用程序和系统程序<ul><li>数据寄存器：通用寄存器</li><li>地址寄存器：索引、栈指针、段地址等寄存器</li></ul></li></ul><p>控制与状态寄存器：</p><ul><li>用于控制处理器的操作；主要被具有特权的操作系统程序使用，以控制程序的执行</li><li>程序计数器PC：存储将取指令的地址</li><li>指令寄存器IR：存储最近使用的指令</li><li>条件码CC：CPU为指令操作结果设置的位，标志正&#x2F;负&#x2F;零&#x2F;溢出等结果</li><li>标志位：中断位、中断允许位、中断屏蔽位、处理器模式位、内存保护位……</li></ul><h2 id="指令与处理器模式"><a href="#指令与处理器模式" class="headerlink" title="指令与处理器模式"></a>指令与处理器模式</h2><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><p>机器指令：</p><ul><li>机器指令是计算机系统执行的基本命令，是中央处理器执行的基本单位</li><li>指令由一个或多个字节组成，包括操作码字段、一个或多个操作数地址字段、以及一些表征机器状态的状态字以及特征码</li><li>指令完成各种算术逻辑运算、数据传输、控制流跳转</li></ul><p>指令执行过程：</p><ul><li>CPU根据PC取出指令，放入IR，并对指令译码，然后发出各种控制命令，执行微操作系列，从而完成一条指令的执行</li><li>一种指令执行步骤如下：<ul><li>取指：根据PC从存储器或高速缓冲存储器中取指令到IR</li><li>解码：解译IR中的指令来决定其执行行为</li><li>执行：连接到CPU部件，执行运算，产生结果并写回，同时在CC里设置运算结论标志；跳转指令操作PC，其他指令递增PC值</li></ul></li></ul><p>指令执行周期：包括取指、解码、执行过程</p><p>指令流水线：充分调度CPU</p><p>特权指令：只能被操作系统内核使用的指令<br>非特权指令：能够被所有程序使用的指令</p><h3 id="处理器模式"><a href="#处理器模式" class="headerlink" title="处理器模式"></a>处理器模式</h3><p>处理器模式：</p><ul><li>计算机通过设置处理器模式实现特权指令管理</li><li>计算机一般设置0、1、2、3等四种运行模式，建议分别对应：0操作系统内核、1系统调用、2共享库程序、3用户程序等保护级别</li><li>0模式可以执行全部指令；3模式只能执行非特权指令；其他每种运行模式可以规定执行的指令子集</li><li>一般来说，现代操作系统只使用0和3两种模式，对应于内核模式和用户模式</li></ul><p>处理器模式切换：</p><ul><li>包括“用户模式→内核模式”和“内核模式→用户模式”的转换</li><li>中断、异常或系统异常等事件导致用户程序向OS内核切换，触发：用户模式→内核模式<ul><li>程序请求操作系统服务</li><li>程序运行时发生异常</li><li>程序运行时发生并响应中断</li></ul></li><li>OS内核处理完成后，调用中断返回指令（如Intel的iret）触发：内核模式→用户模式</li></ul><h2 id="中断与中断源"><a href="#中断与中断源" class="headerlink" title="中断与中断源"></a>中断与中断源</h2><p>中断：中断是指程序执行过程中，遇到急需处理的事件时，暂时中止CPU上现行程序的运行，转去执行相应的事件处理程序，待处理完成后再<strong>返回原程序被中断处或调度其他程序</strong>执行的过程</p><p>操作系统是“中断驱动”的，换言之，中断是激活操作系统的唯一方式？此话何解，不过操作系统本身确实也是大型程序，在其上运行其他程序也必然需要中断吧。</p><p>中断、异常与系统异常：</p><ul><li>狭义的中断指来源于处理器之外的中断事件，即与当前运行指令无关的中断事件，如I&#x2F;O中断、时钟中断、外部信号中断等</li><li>异常指当前运行指令引起的中断事件，如地址异常、算术异常、处理器硬件故障等</li><li>系统异常指执行陷入指令而触发系统调用引起的中断事件，如请求设备、请求I&#x2F;O、创建进程等</li></ul><p>中断源：硬件故障中断事件、程序性中断事件、自愿性中断事件、I&#x2F;O中断事件、外部中断事件</p><h2 id="中断系统"><a href="#中断系统" class="headerlink" title="中断系统"></a>中断系统</h2><p>中断系统是计算机系统中响应和处理中断的系统，包括硬件子系统和软件子系统两部分<br>中断响应由硬件子系统完成<br>中断处理由软件子系统完成</p><p>中断响应过程：</p><ul><li>发现中断源，提出中断请求<ul><li>发现中断寄存器中记录的中断</li><li>决定这些中断是否应该屏蔽</li><li>当有多个要响应的中断源时，根据规定的优先级选择一个</li></ul></li><li>中断当前程序的执行<ul><li>保存当前程序的PSW&#x2F;PC到核心栈</li></ul></li><li>转向操作系统的中断处理程序</li></ul><p>中断的处理：</p><ul><li>中断处理程序<br>  操作系统处理中断事件的控制程序, 主要任务是处理中断事 件和恢复正常操作</li><li>中断处理过程<ul><li>保护未被硬件保护的处理器状态</li><li>通过分析被中断进程的PSW中断码字段，识别中断源</li><li>分别处理发生的中断事件</li><li>恢复正常操作</li></ul></li></ul><h2 id="多中断响应与处理"><a href="#多中断响应与处理" class="headerlink" title="多中断响应与处理"></a>多中断响应与处理</h2><p>中断屏蔽：当计算机检测到中断时, 中断装置通过中断屏蔽位决定是否响应已发生的中断，从而进行有选择的响应中断</p><p>中断优先级：当计算机同时检测到多个中断时, 中断装置响应中断的顺序，不同类型操作系统有不同中断优先级</p><p>中断嵌套处理：当计算机响应中断后，在中断处理过程中，可以再响应其他中断</p><p>多中断的响应与处理：</p><ul><li>决定中断处理次序的因素：<ul><li>中断屏蔽可以使中断装置不响应某些中断</li><li>中断优先级决定了中断装置响应中断的次序</li><li>中断可以嵌套处理, 但嵌套的层数应有限制</li><li>中断的嵌套处理改变了中断处理的次序</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Make</title>
      <link href="/2023/05/18/Make/"/>
      <url>/2023/05/18/Make/</url>
      
        <content type="html"><![CDATA[<div class="note info simple"><p>前言：前段时间写OS的Lab2时，就已经使用了<code>Makefile</code>，不过较为简单，也只是一知半解。(不过前段时间听他们群里的说法<code>Makefile</code>也是旧日荣光了？)</p></div><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="为什么要有Makefile？"><a href="#为什么要有Makefile？" class="headerlink" title="为什么要有Makefile？"></a>为什么要有<code>Makefile</code>？</h2><p>应对大型工程项目，<code>makefile</code>可以定义了整个编译流程以及各个目标文件与源文件之间的依赖关系，出现修改时，只会重新编译修改会影响的部分，从而降低了编译的时间，提升了编译的效率。</p><h2 id="Makefile究竟是什么？"><a href="#Makefile究竟是什么？" class="headerlink" title="Makefile究竟是什么？"></a><code>Makefile</code>究竟是什么？</h2><p><code>Makefile</code>是整个工程的编译原则，定义了一系列的规则来指定文件编译顺序</p><p><code>Makefile</code>给工程带来了“自动化编译”，一个<code>make</code>指令就可以使整个工程完全自动编译</p><h2 id="区分GNU-Make和Makefile"><a href="#区分GNU-Make和Makefile" class="headerlink" title="区分GNU Make和Makefile"></a>区分<code>GNU Make</code>和<code>Makefile</code></h2><p><code>GNU Make is a tool which controls the generation of executables and other non-source files of a program from the program&#39;s source files.</code></p><p><code>Make gets its knowledge of how to build your program from a file called the makefile, which lists each of the non-source files and how to compute it from other files.</code></p><p>上述是来自于<code>GNU</code>官网对于两者的定义，可以直观看出，<code>Make</code>是批处理的工具，而这个工具所仰仗的信息来源于<code>Makefile</code>，所以写好<code>Makefile</code>文件使我们能很好利用<code>Make</code>工具的重要前提。</p><h1 id="写Makefile"><a href="#写Makefile" class="headerlink" title="写Makefile"></a>写<code>Makefile</code></h1><h2 id="基本规则"><a href="#基本规则" class="headerlink" title="基本规则"></a>基本规则</h2><p>1.如果这个工程没有编译过，那么我们的所有c文件都要编译并被链接。<br>2.如果这个工程的某几个c文件被修改，那么我们只编译被修改的c文件，并链接目标程序。<br>3.如果这个工程的头文件被改变了，那么我们需要编译引用了这几个头文件的c文件，并链接目标程序。</p><p>默认情况下，<code>make</code>命令会在当前目录下按顺序寻找文件名为<code>GNUmakefile</code>、<code>makefile</code>、<code>Makefile</code>的文件，最好使用<code>Makefile</code>这个文件名，最好不要用<code>GNUmakefile</code>，因为这个文件只能由<code>GNU</code>去<code>make</code>。当然也可以使用别的文件名来书写<code>makefile</code>，不过需要加上<code>-f</code>可选项进行指定。</p><h2 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式"></a>基本格式</h2><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">target: prerequisites</span></span><br><span class="line">    recipe</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>结合上述基本规则，<code>Makefile</code>最核心的内容就是<code>prerequisites</code>中如果有一个以上的文件比<code>target</code>文件要新的话，<code>recipe</code>所定义的命令就会被执行。</p><h3 id="target"><a href="#target" class="headerlink" title="target"></a>target</h3><p>可以是<code>object file</code>，也可以是一个可执行文件，还可以是一个标签</p><h3 id="prerequisites"><a href="#prerequisites" class="headerlink" title="prerequisites"></a>prerequisites</h3><p>生成该<code>target</code>所要依赖的文件或其他<code>target</code></p><h3 id="recipe"><a href="#recipe" class="headerlink" title="recipe"></a>recipe</h3><p>该<code>target</code>要执行的命令，每行一定要以<code>Tab</code>开头</p><h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">main: a.o b.o</span></span><br><span class="line">gcc -o main a.o b.o</span><br><span class="line"></span><br><span class="line"><span class="section">a.o: a.c</span></span><br><span class="line">gcc -c a.c -o a.o</span><br><span class="line"></span><br><span class="line"><span class="section">b.o: b.c</span></span><br><span class="line">gcc -c b.c -o b.o</span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">rm -rf a.o b.o main</span><br></pre></td></tr></table></figure><p>使用上述<code>makefile</code>文件，目录结构为</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">a.c  b.c  makefile</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ make</span><br><span class="line">gcc -c a.c -o a.o</span><br><span class="line">gcc -c b.c -o b.o</span><br><span class="line">gcc -o main a.o b.o</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ ./main</span><br><span class="line">hello, a!</span><br><span class="line">hello, b!!</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ make</span><br><span class="line">gcc -c b.c -o b.o</span><br><span class="line">gcc -o main a.o b.o</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ ./main</span><br><span class="line">hello, a!</span><br><span class="line">hello, b!</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ make</span><br><span class="line">make: &#x27;main&#x27; is up to date.</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ ./main</span><br><span class="line">hello, a!</span><br><span class="line">hello, b!</span><br></pre></td></tr></table></figure><p>使用<code>make</code>指令可以看出执行了<code>main</code>这个<code>target</code>的内容，对<code>b.c</code>文件进行修改，发现只执行了<code>gcc -c b.c -o b.o</code>，未执行<code>gcc -c a.c -o a.o</code>，在不进行修改的情况下执行<code>make</code>，发现提示已是最新，无需更新。</p><h3 id="make指令"><a href="#make指令" class="headerlink" title="make指令"></a><code>make</code>指令</h3><p>默认的指令便是<code>make</code>，我们不需要在<code>makefile</code>文件中显式的指出(似乎也没法指出，毕竟<code>target</code>不能是个空吧)</p><p><code>make</code>指令的工作流程：<br>1.找寻当前目录下<code>Makefile</code>文件<br>2.默认使用第一个<code>target</code>，找寻第一条<code>target</code>的依赖<br>3.处理依赖文件的<code>target</code><br>4.根据目标<code>target</code>修改时间以及依赖的修改时间判断是否需要重新构建</p><p>参考教程<a href="https://seisman.github.io/how-to-write-makefile">跟我一起写Makefile</a>，这里的表述我认为是存在一定问题的，未先去处理依赖文件如何获知依赖文件的最后更新时间以及是否存在？时间逻辑的先后应该是先去递归处理依赖文件，最后才是返回来处理目标<code>target</code></p><p>官方的描述为：<br><code>In the example, this rule is for relinking edit; but before make can fully process this rule, it must process the rules for the files that edit depends on, which in this case are the object files. Each of these files is processed according to its own rule.</code></p><p>后续引入了其他<code>makefile</code>文件以及变量等概念后，<code>make</code>工作时的执行步骤为：<br>1.读入所有的Makefile<br>2.读入被include的其它Makefile<br>3.初始化文件中的变量<br>4.推导隐式规则，并分析所有规则<br>5.为所有的目标文件创建依赖关系链<br>6.根据依赖关系，决定哪些目标要重新生成<br>7.执行生成命令</p><h3 id="其他target指令"><a href="#其他target指令" class="headerlink" title="其他target指令"></a>其他<code>target</code>指令</h3><p><code>make</code>默认执行的就是第一个<code>target</code>以及其依赖的<code>target</code>，故无关联的<code>target</code>并不会进行执行，如我们所写<code>makefile</code>中的<code>clean</code>，但我们可以通过显式执行来执行<code>clean</code>，即<code>make clean</code>指令。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ make clean</span><br><span class="line">rm -rf a.o b.o main</span><br></pre></td></tr></table></figure><p>效果如上所示，故<code>make</code>指令也可以显式为<code>make</code>加上首条<code>target</code>，在此即为<code>make main</code>，效果如下所示</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ make main</span><br><span class="line">gcc -c a.c -o a.o</span><br><span class="line">gcc -c b.c -o b.o</span><br><span class="line">gcc -o main a.o b.o</span><br></pre></td></tr></table></figure><p>因此我们可以通过显式方法来执行其余<code>target</code>，其余<code>target</code>的工作流程也与<code>make</code>相同。</p><p>不难发现，有些<code>target</code>如上述的<code>clean</code>，并非是文件名。我们可以使用虚假的目标<code>PHONY</code>，将目标标记为不指向文件，当然<code>PHONY</code>同样适用于文件。</p><p>语法格式:</p><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: target1 target2 ...</span></span><br></pre></td></tr></table></figure><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">main: a.o b.o</span></span><br><span class="line">gcc -o main a.o b.o</span><br><span class="line"></span><br><span class="line"><span class="section">a.o: a.c</span></span><br><span class="line">gcc -c a.c -o a.o</span><br><span class="line"></span><br><span class="line"><span class="section">b.o: b.c</span></span><br><span class="line">gcc -c b.c -o b.o</span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">rm -rf a.o b.o main</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: main clean</span></span><br></pre></td></tr></table></figure><p>值得注意的一点是：<code>PHONY</code>目标总是被认为是过期的，因此将总是运行这些<code>target</code>的<code>recipe</code>，递归的也将总是运行包含<code>PHONY</code>依赖的<code>target</code></p><p>还是上述的<code>makefile</code>，每次执行<code>make</code>，发现都会执行<code>main</code>下的<code>recipe</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ make</span><br><span class="line">gcc -o main a.o b.o</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ make</span><br><span class="line">gcc -o main a.o b.o</span><br></pre></td></tr></table></figure><p>将<code>a.o</code>置为<code>PHONY</code>，取消<code>main</code>的<code>PHONY</code>，执行<code>make</code></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ make</span><br><span class="line">gcc -c a.c -o a.o</span><br><span class="line">gcc -o main a.o b.o</span><br><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ make</span><br><span class="line">gcc -c a.c -o a.o</span><br><span class="line">gcc -o main a.o b.o</span><br></pre></td></tr></table></figure><p>由于<code>main</code>的依赖<code>target</code>是<code>PHONY</code>的，不仅是<code>a.o</code>需要重编译，<code>main</code>受其牵连也要如此。</p><h3 id="清空目录的规则"><a href="#清空目录的规则" class="headerlink" title="清空目录的规则"></a>清空目录的规则</h3><p>每个<code>Makefile</code>中都应该写一个清空目标文件（ .o ）和可执行文件的规则，这不仅便于重编译，也很利于保持文件的清洁。这是一个“修养”。</p><p>确实如此！</p><h3 id="question"><a href="#question" class="headerlink" title="question"></a>question</h3><p><del>一个令我感到头疼的问题是所谓目标<code>target</code>和依赖更新时间的先后，如果目标<code>target</code>是文件，那这不难理解，文件都有最后一次写入时间。但若是目标<code>target</code>根本就不是文件或是一个根本不存在的文件，类似于上述的伪目录</del></p><p>处处透露出合理，却在某些时候想不通真是一件让人难过的事。这两天虽然看了看<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md">提问的智慧</a>，可当自己想描述一个问题时却发现还是十分困难，果然，提问是门艺术。</p><p>表述为不存在的文件或者伪目标应该都是“过期的”，而依赖也是在检测自己是否是“过期的”，如果过期则执行相关的重新编译。</p><h2 id="书写规范"><a href="#书写规范" class="headerlink" title="书写规范"></a>书写规范</h2><h3 id="变量使用"><a href="#变量使用" class="headerlink" title="变量使用"></a>变量使用</h3><p>将需要重复大段使用的内容整合为一个变量，便于修改以及复用</p><p>我们可以修改<code>makefile</code>文件，将<code>a.o b.o</code>列为变量</p><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">objects = a.o b.o</span><br><span class="line"></span><br><span class="line"><span class="section">main: <span class="variable">$(objects)</span></span></span><br><span class="line">gcc -o main a.o b.o</span><br><span class="line"></span><br><span class="line"><span class="section">a.o: a.c</span></span><br><span class="line">gcc -c a.c -o a.o</span><br><span class="line"></span><br><span class="line"><span class="section">b.o: b.c</span></span><br><span class="line">gcc -c b.c -o b.o</span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">rm -rf a.o b.o main</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean</span></span><br></pre></td></tr></table></figure><p>执行效果一样。</p><p>在<code>makefile</code>中定义的变量，声明时要给予初值，而在使用时要在变量名前加上<code>$</code>，最好使用<code>()</code>或者<code>&#123;&#125;</code>将变量名括起来。</p><h3 id="隐式规则"><a href="#隐式规则" class="headerlink" title="隐式规则"></a>隐式规则</h3><p>是一种惯例，让<code>make</code>自己去推导会发生什么，这些约定俗成的内容在我们不显式指出并规定时就会按照默认进行。</p><p>可以将上述<code>makefile</code>进一步精简</p><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">objects = a.o b.o</span><br><span class="line"></span><br><span class="line"><span class="section">main: <span class="variable">$(objects)</span></span></span><br><span class="line">gcc -o main a.o b.o</span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">rm -rf a.o b.o main</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean</span></span><br></pre></td></tr></table></figure><p>执行<code>make</code>指令发现</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">frechen026@frechen026-virtual-machine:~/Desktop/MakeTest$ make</span><br><span class="line">cc    -c -o a.o a.c</span><br><span class="line">cc    -c -o b.o b.c</span><br><span class="line">gcc -o main a.o b.o</span><br></pre></td></tr></table></figure><p><code>GNU Make</code>工具已经猜测出生成<code>a.o b.o</code>所需执行的指令</p><p>当然，还有很多隐式的一些规则，不加以罗列，但对于一些不是很清楚的隐式规则可能发生时，我们应该想方设法避免他，即使他真的十分简洁。</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>写好注释应该是每个好的程序员应该有的素养，<code>makefile</code>也可以书写注释，其注释采用<code>#</code>，一般编辑器下应该都可以使用快捷键<code>ctrl + /</code></p><h3 id="伪目标"><a href="#伪目标" class="headerlink" title="伪目标"></a>伪目标</h3><p>上面已经提及过相关内容，“伪目标”并不是一个文件，只是一个标签而已。为了避免“伪标签”和文件重名的情况，我们可以使用特使标记<code>.PHONY</code>来显式的指明一个目标是“伪目标”。</p><p>伪目标一般没有依赖的文件。但是，我们也可以为伪目标指定所依赖的文件。伪目标同样可以作为“默认目标”，只要将其放在第一个。一个示例就是，如果你的<code>Makefile</code>需要一口气生成若干个可执行文件，但你只想简单地敲一个<code>make</code>完事，并且，所有的目标文件都写在一个<code>Makefile</code>中，那么你可以使用“伪目标”这个特性。</p><p>所以我们可以借助“伪目标”简化<code>shell</code>命令，以简单的语句执行复杂的<code>shell</code>语句，前提是你的<code>makefile</code>写的足够好。</p><h1 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h1><p>当然，<code>makefile</code>还有很多细节值得去学习，例如函数、多文件等等，不过总感觉记录下来过于繁琐，也可能是不知道如何记录。所以碰到实际的问题还是要多参考参考下面的几篇教程……</p><p>参考教程：<br><a href="https://seisman.github.io/how-to-write-makefile">跟我一起写Makefile</a><br><a href="https://zhuanlan.zhihu.com/p/392780283">GUN make 入门到精通</a><br><a href="https://www.gnu.org/software/make/manual/make.html">GNU make</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机科学速成</title>
      <link href="/2023/05/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E9%80%9F%E6%88%90/"/>
      <url>/2023/05/08/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E9%80%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机早期历史"><a href="#计算机早期历史" class="headerlink" title="计算机早期历史"></a>计算机早期历史</h1><p>最早的计算设备：算盘，手动计算机，帮助进行加减运算，同时存储计算状态</p><p>更多计算设备诞生使得很多事情更简单，但这些设备都不是“计算机”</p><p>步进计算机：第一台可以做“加减乘除”的机器，耗时长</p><p>军队炮弹射程表</p><p>差分机、分析机的设想提出，其中分析机有了“通用计算机、自动计算机”的想法</p><p>Ada世上第一位程序员</p><p>计算机开始受到重视：美国人口普查、打孔制表机大大提高了效率，企业也开始意识到、IBM诞生</p><h1 id="电子计算机"><a href="#电子计算机" class="headerlink" title="电子计算机"></a>电子计算机</h1><p>20世纪上叶，各行各业快速发展，计算的需求急速提高</p><p>柜子大小的计算机变成房间大小，现在又变成巴掌大小了是吧，那时的计算机维护成本极高</p><p>哈佛马克一号，1秒能做3次加法或减法运算，一次乘法要花费6秒，除法要花费15秒，放眼现在还是有些难以想象的，庞大数量的原件也伴随着磨损，故障概率的提高</p><p>哈佛马克2在故障继电器中发现一只虫子，术语bug由此而来<br>“From then on,when anything went wrong with a computer,we said it had bugs in it”</p><p>真空管诞生，可以取代继电器的更精巧的设备诞生，计算机由机电设备转向电子</p><p>“巨人1号”大规模使用真空管，被认为是第一个可编程的电子计算机，完成的计算比全人类还要多！Amazing!</p><p>真空管仍然伴随着高故障率和较高成本，这时在贝尔实验室中诞生了晶体管，一个全新的计算机时代诞生了！更小更偏移的计算机可以诞生了，我们可以更快的控制电路的开闭</p><h1 id="布尔逻辑"><a href="#布尔逻辑" class="headerlink" title="布尔逻辑"></a>布尔逻辑</h1><p>机电设备一般十进制计数，而电子设备只用开关两种状态也可以代表信息——二进制（0，1&#x2F;true，false），同时可以控制通过电流的大小，由此也可以表示不同的状态，所以也有三进制、五进制计算机的存在</p><p>采用二进制的原因：</p><ul><li>状态越多越是难以区分信号</li><li>布尔代数（自学成才？）</li></ul><p>布尔代数：(NOT&#x2F;AND&#x2F;OR&#x2F;XOR)</p><p>貌似开始出现数据true&#x2F;false了，也可以用过逻辑电路进行一些简单的计算了，那那些复杂的计算是如何通过这些实现的呢？</p><h1 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h1><p>加位数即可像十进制一样表示更加庞大的数据，二进制的计算可以完全类比十进制</p><p>这里机组的知识可以发挥作用了</p><p>用二进制数表示出了整数、小数、用ASCII码规范将其表示范围进一步拓展到字符、标点</p><p>ASCII是为英语设计，所以对于不同语言，保存了一定的空位可以自己设计，但还是会出现乱码问题，Unicode由此诞生，统一编码标准</p><p>所有计算机和互联网上的信息包括声音、图像、操作系统归根结底都是一长串1和0，实现了表示和存储数字，但如何计算？实现有意义的处理数字？比如进行加减运算，算数逻辑单元！</p><h1 id="算数逻辑单元"><a href="#算数逻辑单元" class="headerlink" title="算数逻辑单元"></a>算数逻辑单元</h1><p>ALU，计算机的数学大脑，计算机里负责运算的组件，基本其他所有部件都用到了他</p><p>英特尔74181，第一个封装在单个芯片的完整ALU</p><p>使用两个逻辑门实现了一位的加法运算，称为半加器</p><p>进一步抽象，使用两个半加器实现全加器</p><p>更进一步抽象，使用半加器以及全加器即可制作多位数的加法器，最后一位有进位，则表示<code>overflow</code></p><p>由于计算进位有时间，提出了超前进位加法器</p><p>逻辑单元执行逻辑操作，都是一大堆逻辑门的组合</p><p>将ALU再进行抽象，得到两个输入和执行操作码，输出结果和一些标志位</p><p>附一个上学期记录的整数运算实现</p><h2 id="整数运算"><a href="#整数运算" class="headerlink" title="整数运算"></a>整数运算</h2><h3 id="算法逻辑单元（ALU）"><a href="#算法逻辑单元（ALU）" class="headerlink" title="算法逻辑单元（ALU）"></a>算法逻辑单元（ALU）</h3><p><img src="https://s2.loli.net/2023/05/07/ucXdbR9EnolSC1m.png" alt="ALU.png"></p><h3 id="全加器"><a href="#全加器" class="headerlink" title="全加器"></a>全加器</h3><p><img src="https://s2.loli.net/2023/05/07/ERuBDwZO17UMVdf.png" alt="全加器.png"></p><table><thead><tr><th align="left">Xi</th><th align="left">Yi</th><th align="left">Ci-1</th><th align="left">Ci</th><th align="left">Si</th></tr></thead><tbody><tr><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">0</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left">1</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td></tr></tbody></table><p>如上图所示，进位等于三个数两两做与运算后或运算的结果，而该位的数等于三个数做异或运算</p><p>此处引出了一个极为关键的延迟，如图所示，与门以及或门延迟均为<code>1ty</code>，异或门延迟为<code>3ty</code>。</p><p>由于三个与门操作可以同时进行，所以计算<code>Ci</code>的总延迟为<code>2ty</code>；</p><p>进行两次异或操作，延迟为<code>6ty</code>；</p><h3 id="进位加法器"><a href="#进位加法器" class="headerlink" title="进位加法器"></a>进位加法器</h3><h4 id="串行进位加法器"><a href="#串行进位加法器" class="headerlink" title="串行进位加法器"></a>串行进位加法器</h4><p><img src="https://s2.loli.net/2023/05/07/cQ2XyoKAa3e4mJY.png" alt="串行进位加法器.png"></p><h5 id="解释："><a href="#解释：" class="headerlink" title="解释："></a>解释：</h5><p><code>Cn = XnCn-1 + YnCn-1 + XnYn</code>，由于每一次都需要前一个<code>Cn-1</code>，故与运算和或运算的时间均不可省略，为<code>2*n ty = 2n ty</code></p><p><code>Sn = Xn^Yn^Cn-1</code>，由于<code>Cn-1</code>在<code>2（n-1）</code>时刻已经准备好，同样的Xn^Yn可以早早计算好，故而只需等待到<code>Cn-1</code>即可再做一次异或运算，时间为<code>2（n-1）+3=2n+1</code></p><p>特别的：发现<code>S1</code>计算时，<code>X1^Y1</code>花费<code>3ty</code>，<code>（X1^Y1）^C0</code>花费<code>3ty</code>，共花费<code>6ty</code>。<code>S2</code>计算时，得到<code>C1</code>需要<code>2ty</code>，得到<code>（X2^Y2）</code>需要<code>3ty</code>，等待<code>（X2^Y2）</code>结果，此时总共已经花费<code>3ty</code>，再做<code>（X2^Y2）^C1</code>又需要<code>3ty</code>，合计<code>6ty</code>。而按照公式计算所得结果<code>S1</code>应该延迟<code>3ty</code>，<code>S2</code>应该延迟<code>5ty</code>。why?</p><p><strong>公式成立的前提是，假设所有的<code>Xi^Yi</code>自开始起便全部得出结果，共需要<code>3ty</code>，所以<code>2（n-1）&gt;= 3</code>，即得出<code>n &gt;= 5/2</code>，所以不难理解为什么<code>S1</code>、<code>S2</code>不符合了</strong></p><h4 id="全先行进位加法器"><a href="#全先行进位加法器" class="headerlink" title="全先行进位加法器"></a>全先行进位加法器</h4><p>通过刚才的过程已经发现，串行进位加法器的延迟与运算位数呈现线性关系，效率较慢，有什么方法减少延迟呢？</p><p><img src="https://s2.loli.net/2023/05/07/9b3BXrCnodAFOiK.png" alt="全先行进位加法器.png"></p><p>展开到最后竟然惊奇地发现，计算<code>Cn</code>并不需要<code>Cn-1</code>，也就说，每一个<code>Cn</code>都可仅用<code>X</code>、<code>Y</code>、<code>C0</code>这些已知数，做与运算以及或运算直接得出，（共需要<code>2ty</code>，错）其中计算出所有的P、G需要<code>1ty</code>，再进行一次大的与运算以及或运算，需要<code>2ty</code>，共需要<code>3ty</code>。</p><p><img src="https://s2.loli.net/2023/05/07/vAaWmoRpCn7hJPw.png" alt="全先行进位加法器2.png"></p><p>又同时可以进行<code>Xi^Yi</code>的操作，共需<code>3ty</code>，所以执行完上述两个过程共需<code>3ty</code>（可同时进行），再进行<code>（Xi^Yi）^Ci-1</code>又需要<code>3ty</code>，所以总共需要<code>6ty</code></p><p>不难看出延迟大大降低，达到了常数。但，通常节省了时间，就不可避免要以空间的cost作为代价。多个与门，或门，结构复杂。</p><h4 id="部分先行进位加法器"><a href="#部分先行进位加法器" class="headerlink" title="部分先行进位加法器"></a>部分先行进位加法器</h4><p>既然上述两种方案都有其缺陷，有没有什么可以综合的地方？<strong>部分先行进位加法器</strong></p><p><img src="https://s2.loli.net/2023/05/07/d5MEYPAZkn8VRKB.png" alt="部分先行进位加法器.png"></p><p>计算所有的<code>P</code>、<code>G</code>需要<code>1ty</code>，计算<code>C1-C8</code>还需要<code>2ty</code>，完成第一个CLA中所有<code>C</code>的计算共花费<code>3ty</code>，由于所有<code>P</code>、<code>G</code>均在开始时计算得到，故二三四个CLA都只需要额外<code>2ty</code>延迟计算<code>Ci</code>，共需要<code>3+2+2+2=9ty</code>。同时，可以发现我们还没有考虑<code>Si</code>的计算。由于第四个进位加法器一定最后结束运算，得到<code>Ci</code>后，还需<code>3ty</code>做异或运算，其余CLA最迟也可以在同时计算<code>Si</code>，故一共还需要<code>3ty</code>延迟，共需<code>9+3=12ty</code>。</p><h3 id="整数加法"><a href="#整数加法" class="headerlink" title="整数加法"></a>整数加法</h3><p><img src="https://s2.loli.net/2023/05/07/hVlR2z1eBNKU7kI.png" alt="加法.png"></p><p><img src="https://s2.loli.net/2023/05/07/uIoGjNsHRc3Y4On.png" alt="加法1.png"></p><p>补码表示相加，直接按位对应进行进位加法器相关的操作。</p><p><strong>注意：什么情况下不适用？溢出！</strong></p><p>众所周知，<code>n</code>位最多表示<code>2^n</code>个不同的数，可表示的数进行加法运算也就可能超过可表示的范围，既然不能表示，那得到的所谓“结果”自然是错误的。</p><p><strong>什么时候会溢出？同号相加！</strong></p><p><code>c = a + b</code>，若<code>a</code>、<code>b</code>异号（假设<code>a+</code>,<code>b-</code>)，必然有 <code>a &gt; c &gt; b</code>，既然<code>a</code>、<code>b</code>均可表示，落在<code>a、b</code>之间的<code>c</code>自然可以表示</p><p><code>a、b</code>同号时，做加法，就以一个最简单的例子，<code>max+1</code>即溢出，<code>min+(-1）</code>即溢出</p><p><strong>溢出有什么特点？变号！</strong></p><p>即所谓的<code>Sn≠Xn,Yn</code>。</p><p><strong>为什么如此？</strong></p><p><code>min+min=-2^n</code></p><p><code>max+max=2^n-2</code></p><p>溢出部分范围：以四位举例</p><p><code>max+1~2*max</code> <code>1000~1110</code>，第四位为<code>1</code>，异号</p><p><code>min-1~2*min</code> <code>0111~0000</code>，第四位为<code>0</code>，异号</p><p>回顾补码表示导入的这张表（当然表中<code>0</code>所示位置上方数值应为<code>0</code>），此时不难理解为什么溢出之后符号位改变了，正数继续前进则进入负数的范围，负数倒退则步入正数的范围内。</p><p><img src="https://s2.loli.net/2023/05/07/BZWszEJrkVSKIhb.png" alt="补码表示.png"></p><p><img src="https://s2.loli.net/2023/05/07/C7mbvZBdzYXwAGH.png" alt="补码2.png"></p><h5 id="以下代码为整数加法运算的Java实现，但实现过程较为繁琐，依据全加器的原理，通过与运算、或运算、异或运算即可将全部情况进行计算。"><a href="#以下代码为整数加法运算的Java实现，但实现过程较为繁琐，依据全加器的原理，通过与运算、或运算、异或运算即可将全部情况进行计算。" class="headerlink" title="以下代码为整数加法运算的Java实现，但实现过程较为繁琐，依据全加器的原理，通过与运算、或运算、异或运算即可将全部情况进行计算。"></a>以下代码为整数加法运算的Java实现，但实现过程较为繁琐，依据全加器的原理，通过与运算、或运算、异或运算即可将全部情况进行计算。</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回两个二进制整数的和</span></span><br><span class="line"><span class="comment"> * dest + src</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> src  32-bits</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dest 32-bits</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 32-bits</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> DataType <span class="title function_">add</span><span class="params">(DataType src, DataType dest)</span> &#123;</span><br><span class="line">    <span class="comment">// TODO</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> src.toString();</span><br><span class="line">    <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> dest.toString();</span><br><span class="line">    <span class="type">char</span>[] result = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">32</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)&#123;</span><br><span class="line">        result[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">31</span> ; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s1.charAt(i) == <span class="string">&#x27;0&#x27;</span> &amp;&amp; s2.charAt(i) == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(result[i] == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                result[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                result[i] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s1.charAt(i) == <span class="string">&#x27;0&#x27;</span> &amp;&amp; s2.charAt(i) == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(result[i] == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                result[i] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(i != <span class="number">0</span>)&#123;</span><br><span class="line">                    result[i-<span class="number">1</span>] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                result[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (s1.charAt(i) == <span class="string">&#x27;1&#x27;</span> &amp;&amp; s2.charAt(i) == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(result[i] == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                result[i] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(i != <span class="number">0</span>)&#123;</span><br><span class="line">                    result[i-<span class="number">1</span>] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                result[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (result[i] != <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                result[i] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i != <span class="number">0</span>)&#123;</span><br><span class="line">                result[i-<span class="number">1</span>] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">String</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(result);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DataType</span>(out);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="整数减法"><a href="#整数减法" class="headerlink" title="整数减法"></a>整数减法</h3><p><img src="https://s2.loli.net/2023/05/07/h2InKWGdORuY9jH.png" alt="减法.png"></p><h5 id="减法不再加以赘述，理解为加法运算即可。"><a href="#减法不再加以赘述，理解为加法运算即可。" class="headerlink" title="减法不再加以赘述，理解为加法运算即可。"></a>减法不再加以赘述，理解为加法运算即可。</h5><h5 id="以下为整数减法实现的Java代码，所采取的是利用取反加一化为两数加法进行计算。"><a href="#以下为整数减法实现的Java代码，所采取的是利用取反加一化为两数加法进行计算。" class="headerlink" title="以下为整数减法实现的Java代码，所采取的是利用取反加一化为两数加法进行计算。"></a>以下为整数减法实现的Java代码，所采取的是利用取反加一化为两数加法进行计算。</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回两个二进制整数的差</span></span><br><span class="line"><span class="comment">     * dest - src</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> src  32-bits</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dest 32-bits</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 32-bits</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> DataType <span class="title function_">sub</span><span class="params">(DataType src, DataType dest)</span> &#123;</span><br><span class="line">        <span class="comment">// TODO</span></span><br><span class="line"><span class="comment">//        dest-src</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">src1</span> <span class="operator">=</span> src.toString();</span><br><span class="line">        <span class="type">char</span>[] src2 = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">32</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(src1.charAt(i) == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                src2[i] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                src2[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">src3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(src2);</span><br><span class="line">        <span class="type">DataType</span> <span class="variable">result1</span> <span class="operator">=</span> add(<span class="keyword">new</span> <span class="title class_">DataType</span>(src3), dest);</span><br><span class="line">        <span class="keyword">return</span> add(result1, <span class="keyword">new</span> <span class="title class_">DataType</span>(<span class="string">&quot;00000000000000000000000000000001&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="寄存器-amp-amp-内存"><a href="#寄存器-amp-amp-内存" class="headerlink" title="寄存器 &amp;&amp; 内存"></a>寄存器 &amp;&amp; 内存</h1><p>通过与门和或门可以制造出只存储<code>0和1</code>的电路来，将两个电路结合起来，形成锁存，Memory!</p><p>抽象上述概念，一个门锁包含输入和允许写入位，用以存储一位数据<code>0 or 1</code></p><p>一组锁存器就形成了寄存器，一个寄存器能存储多少位宽的数字就是多少位的寄存器<br>当然我们可以采用锁存器并排放置，这需要<code>2n+1</code>条线，而将其制造成网格结构可以大幅减少线的数量，这时需要<code>多路复用器</code>锁定需要存取的位置</p><p>对于底层的复杂概念，再次将其封装抽象，得到一个如<code>256bit</code>的内存，有八位地址，一条允许写入线，一条允许读取线，一条数据线用于读、写</p><p>将八个上述的存储结构并行排列起来，一次就可以读写<code>8</code>bit的数字，也就是所谓的一字节，也就能够存储<code>256</code>字节大小的内容</p><p>再次抽象，将上述每八个存储单元抽象为一个内存地址所代表的一个<code>8位</code>数字，我们就有了<code>256</code>个可以寻址的<code>8</code>位数字</p><h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><p>中央单元处理器，负责执行程序，程序由一个个操作组成，这些操作是一条条指令</p><p>取指令阶段-&gt;解码阶段-&gt;执行阶段</p><p>由不同逻辑电路解析不同指令，将这个整体抽象为一个控制单元</p><p>整合寄存器以及ALU就可以使得CPU取指、解码、执行对于内存，对于计算的操作了</p><p>引入<code>时钟</code>管理CPU节奏，时钟速度&#x2F;Hz</p><p>居然还讲到超频了，之前虽有耳闻，原理却是第一次了解，提高时钟频率，加快处理速度，获得更加强劲的性能</p><p>所以<code>CPU</code>大致等于<code>寄存器+控制单元+ALU+CLOCK</code></p><h1 id="指令和程序"><a href="#指令和程序" class="headerlink" title="指令和程序"></a>指令和程序</h1><p>CPU是可编程的</p><p>引入更加多的指令，就可以使CPU做更多的事</p><p>为了表示更多的指令，所想到的两个有效措施，一是增加用以表示指令的位数，二是使用可变长的指令长度</p><p>英特尔4004处理器不过只能支持<code>46</code>个指令，而如今（如果chatgpt没说胡话的话）x86架构的CPU已经支持<code>2000</code>多条指令集</p><h1 id="高级CPU设计"><a href="#高级CPU设计" class="headerlink" title="高级CPU设计"></a>高级CPU设计</h1><p>复杂度 vs 速度的平衡在计算机发展史上经常出现，确实</p><p>不断设计更为便捷的指令，同时兼容旧的指令</p><p>CPU处理速度与内存读取速度之间拉开差距（也就是机组中所讲的内存墙），在CPU内部引入<code>cache</code></p><p>进一步减少<code>CPU</code>空闲时间，使用流水线方式</p><p>在条件跳转指令可能等待大量时间时，采取分支预测，甚至如今已经有<code>90%</code>概率猜对将要选择的路径</p><p>多核、多CPU、超级计算机</p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FAT12镜像查看</title>
      <link href="/2023/04/25/FAT12%E9%95%9C%E5%83%8F%E6%9F%A5%E7%9C%8B/"/>
      <url>/2023/04/25/FAT12%E9%95%9C%E5%83%8F%E6%9F%A5%E7%9C%8B/</url>
      
        <content type="html"><![CDATA[<div class="note info simple"><p>前言：为了搞定OS的Lab2实验——实现一个FAT12镜像查看工具，还是耗费了较多的精力的，以此文记录下收获</p></div><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>工具：为了方便较为直观呈现效果，采用<code>vscode + Hex Editor插件</code></p><p>镜像文件：<code>a.img 1.44MB</code></p><p>镜像结构：</p><p><img src="https://s2.loli.net/2023/04/25/Wz7t6yrQEhn2CXT.png" alt="ls.png"></p><h1 id="FAT12文件系统"><a href="#FAT12文件系统" class="headerlink" title="FAT12文件系统"></a>FAT12文件系统</h1><h2 id="FAT"><a href="#FAT" class="headerlink" title="FAT"></a>FAT</h2><p>FAT（File Allocation Table）文件配置表。用于记录文件所在位置的表格。</p><p>在DOS v1.0时代就已引入，是最基本的文件系统之一。</p><p>FAT家族包括：FAT12、FAT16、FAT32、ExFAT、VFAT</p><h2 id="FAT12"><a href="#FAT12" class="headerlink" title="FAT12"></a>FAT12</h2><p>12位地址，故最大容量为16MB，软盘文件系统使用。</p><p>标准以FAT12组织的软盘包括以下设定：</p><ul><li>两磁头</li><li>每磁头80个磁道</li><li>每磁道18扇区</li><li>每扇区512字节</li></ul><p>故FAT12的标准软盘大小为<code>2 * 80 * 18 * 512 = 1.44MB</code>，故一个标准<code>1.44MB</code>的FAT12软盘共有<code>2 * 80 * 18 = 2880</code>扇区</p><p>文件系统为了方便组织与管理，会将磁盘分为若干层次：</p><ul><li>扇区：磁盘上最小数据单元</li><li>簇：一个或多个扇区，是数据存储的基本单位</li><li>分区：不同功能区</li></ul><p>上述<code>2880</code>扇区被分为如下<code>5</code>个不同的分区</p><p><img src="https://s2.loli.net/2023/04/25/uIOohpD6ql3jPUg.png" alt="FAT12.png"></p><p>由于根目录分区的大小不确定，数据区大小也不能够加以确定。</p><h3 id="MBR区"><a href="#MBR区" class="headerlink" title="MBR区"></a>MBR区</h3><p>引导扇区，占用一个扇区大小空间。</p><p>先前的学习中，我们了解到上电后Bios自检，会检测第<code>0</code>磁头、第<code>0</code>磁道、第<code>1</code>扇区是否以<code>0x55</code>和<code>0xaa</code>作结，以此判断该扇区是否为引导扇区。</p><p>从第<code>11</code>个字节开始的<code>25</code>个字节构成一个较为特殊的结构<code>BPB(Bios Parameter Block)</code></p><p>用一个结构体描述<code>BPB</code>的结构就可以表示为：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">BPB</span> &#123;</span><br><span class="line">    u16  BPB_BytsPerSec;<span class="comment">//每扇区字节数</span></span><br><span class="line">    u8   BPB_SecPerClus;<span class="comment">//每簇扇区数</span></span><br><span class="line">    u16  BPB_RsvdSecCnt;<span class="comment">//Boot记录占用的扇区数</span></span><br><span class="line">    u8   BPB_NumFATs;        <span class="comment">//FAT表个数</span></span><br><span class="line">    u16  BPB_RootEntCnt;<span class="comment">//根目录最大文件数</span></span><br><span class="line">    u16  BPB_TotSec16;<span class="comment">//扇区总数</span></span><br><span class="line">    u8   BPB_Media;             <span class="comment">//介质描述符</span></span><br><span class="line">    u16  BPB_FATSz16;        <span class="comment">//每个FAT表所占扇区数</span></span><br><span class="line">    u16  BPB_SecPerTrk;         <span class="comment">//每磁道扇区数（Sector/track）</span></span><br><span class="line">    u16  BPB_NumHeads;        <span class="comment">//磁头数（面数）</span></span><br><span class="line">    u32  BPB_HiddSec;        <span class="comment">//隐藏扇区数</span></span><br><span class="line">    u32  BPB_TotSec32;        <span class="comment">//如果BPB_ToSec16为0，该值为扇区数</span></span><br><span class="line">&#125; BPB;                          <span class="comment">//25字节</span></span><br></pre></td></tr></table></figure><p>可以看出<code>BPB</code>对于接下来许多操作都具有决定性作用，比如：</p><p><code>BPB_BytsPerSec * BPB_SecPerClus</code>，这就是一个簇的字节大小</p><p><code>BPB_RsvdSecCnt + BPB_FATSz16 * BPB_NumFATs</code>，这就是MBR区以及FAT表区所占扇区数，所对应扇区也是根目录区开始扇区号</p><p>查看以下<code>1.44MB</code>的<code>a.img</code>的第一个扇区<br><img src="https://s2.loli.net/2023/04/25/AiuM5L3hnzdpbWY.png" alt="BPB.png"></p><ul><li>扇区以<code>0x55</code> <code>0xAA</code>结尾</li><li>扇区第<code>11</code>到<code>35</code>字节为<code>00 02 01 01 00 02 E0 00 40 0B F0 09 00 12 00 02 00 00 00 00 00 00 00 00 00</code></li></ul><p>对应于<code>BPB</code>即有</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">BPB &#123;</span><br><span class="line">    u16  BPB_BytsPerSec = <span class="number">0x0200</span> = <span class="number">512</span>; <span class="comment">//每扇区字节数512</span></span><br><span class="line">    u8   BPB_SecPerClus = <span class="number">0x01</span> = <span class="number">1</span>;     <span class="comment">//每簇扇区数1</span></span><br><span class="line">    u16  BPB_RsvdSecCnt = <span class="number">0x0001</span> = <span class="number">1</span>;   <span class="comment">//Boot记录占用的扇区数1</span></span><br><span class="line">    u8   BPB_NumFATs = <span class="number">0x02</span> = <span class="number">2</span>;        <span class="comment">//FAT表个数2</span></span><br><span class="line">    u16  BPB_RootEntCnt = <span class="number">0x00E0</span> = <span class="number">224</span>; <span class="comment">//根目录最大文件数224</span></span><br><span class="line">    u16  BPB_TotSec16 = <span class="number">0x0B40</span> = <span class="number">2880</span>;  <span class="comment">//扇区总数2880</span></span><br><span class="line">    u8   BPB_Media = <span class="number">0XF0</span>;              <span class="comment">//介质描述符</span></span><br><span class="line">    u16  BPB_FATSz16 = <span class="number">0x0009</span> = <span class="number">9</span>;      <span class="comment">//每个FAT表所占扇区数9</span></span><br><span class="line">    u16  BPB_SecPerTrk = <span class="number">0x0012</span> = <span class="number">18</span>;   <span class="comment">//每磁道扇区数（Sector/track）18</span></span><br><span class="line">    u16  BPB_NumHeads = <span class="number">0x0002</span> = <span class="number">2</span>;     <span class="comment">//磁头数（面数）2</span></span><br><span class="line">    u32  BPB_HiddSec = <span class="number">0x00000000</span> = <span class="number">0</span>;  <span class="comment">//隐藏扇区数0</span></span><br><span class="line">    u32  BPB_TotSec32 = <span class="number">0x00000000</span> = <span class="number">0</span>; <span class="comment">//如果BPB_ToSec16为0，该值为扇区数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>符合先前</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">标准以FAT12组织的软盘包括以下设定：</span><br><span class="line"></span><br><span class="line">- 两磁头</span><br><span class="line">- 每磁头80个磁道（2880 / 2 / 18）</span><br><span class="line">- 每磁道18扇区</span><br><span class="line">- 每扇区512字节</span><br></pre></td></tr></table></figure><p>同时扇区划分，扇区总数，每个簇所对应扇区数，FAT表个数以及每个FAT表所占扇区数等数据均吻合。</p><h3 id="FAT表"><a href="#FAT表" class="headerlink" title="FAT表"></a>FAT表</h3><p><code>FAT1</code>与<code>FAT2</code>互为备份，所以理论上两张表是一样的。</p><p>FAT表被划分为紧密排列的若干表项，每个表项与数据区中一个簇对应，表项序号同时与簇号一一对应。</p><p><code>FAT12</code>每个表项由<code>12</code>位组成，故先前说其是<code>12</code>位地址，最大容量为<code>16MB</code>。</p><p>需要注意的是，由于<code>1.44MB</code>的软盘上<code>FAT12</code>前三个字节为固定的<code>0xF0</code>、<code>0xFF</code>、<code>0xFF</code>，用于表示这是一个<code>FAT12</code>文件系统，所以<code>3</code>字节，<code>24</code>位，<code>2</code>表项被占据，对应的<code>簇0</code> <code>簇1</code>就没有存在意义，故数据区起始不是<code>簇0</code>，而是<code>簇2</code>。</p><p>FAT表项的值的含义：</p><ul><li>通常情况下代表文件下一簇号</li><li>值<code>&gt;= 0xFF8</code>，该簇已经是文件最后一个簇</li><li>值<code>= 0xFF7</code>，表示一个坏簇</li></ul><h3 id="根目录区"><a href="#根目录区" class="headerlink" title="根目录区"></a>根目录区</h3><p>根目录区由根目录下的目录项&#x2F;文件构成，一个目录项占据<code>32</code>字节</p><p>类似的，每个目录项都有固定的结构，可用如下结构体进行模拟：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">RootEntry</span> &#123;</span><br><span class="line">    <span class="type">char</span> DIR_Name[<span class="number">11</span>];      <span class="comment">//长度名+扩展名</span></span><br><span class="line">    u8   DIR_Attr;          <span class="comment">//文件属性</span></span><br><span class="line">    <span class="type">char</span> reserved[<span class="number">10</span>];      <span class="comment">//保留位</span></span><br><span class="line">    u16  DIR_WrtTime;       <span class="comment">//最后一次写入时间</span></span><br><span class="line">    u16  DIR_WrtDate;       <span class="comment">//最后一次写入日期</span></span><br><span class="line">    u16  DIR_FstClus;    <span class="comment">//开始簇号</span></span><br><span class="line">    u32  DIR_FileSize;      <span class="comment">//文件大小</span></span><br><span class="line">&#125; RootEntry;                <span class="comment">//32字节</span></span><br></pre></td></tr></table></figure><p>通过查询根目录区即可得到文件&#x2F;目录开始簇号，也就可以去相应簇号读取。那么引入FAT表进行定位意义何在？<strong>大文件！</strong><br>上述方式只适用于文件大小小于一个簇的，鉴于文件的零散分布，就需要FAT表指示文件的下一部分所在簇号，方便加以定位，将散乱的文件整合起来。</p><p>由此，归结起来，FAT12访问文件的基本操作为：</p><ol><li>首先通过根目录文件查找文件名，确定是哪一个条目，接着在条目中访问DIR_FstClus对应的开始簇号</li><li>当一个簇号访问完后，通过FAT表项查询下一簇号，决定是结束还是继续访问下一簇号，重复第二条</li></ol><p>由上面区域划分可知，根目录区始于<code>19扇区</code>,即<code>19 * 512 = 2600h</code></p><p>先前又可知根目录区最大文件数为<code>224</code>，故根目录区所占扇区大小为<code>(32 * BPB_RootEntCnt + BPB_BytsPerSec - 1) / BPB_BytsPerSec = (32 * 224 + 512 - 1) / 512 = 14</code><br>加上<code>BPB_BytsPerSec-1</code>保证此公式在根目录区无法填满整个扇区时仍然能够成立</p><h3 id="数据区"><a href="#数据区" class="headerlink" title="数据区"></a>数据区</h3><p>数据存放区域，包括文件以及根目录下目录对应的文件信息，该信息同根目录区，使用<code>Entry</code>对目录加以存储。</p><p>由于根目录区占据<code>14</code>扇区，加上先前<code>MBR</code>以及<code>FAT</code>占据的<code>19</code>扇区，计算得出数据区起始于<code>33</code>扇区，即<code>33 * 512 = 4200h</code></p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>下面就实际的通过<code>FAT12</code>对文件进行查找</p><p>回顾步骤：</p><ol><li>首先通过根目录文件查找文件名，确定是哪一个条目，接着在条目中访问DIR_FstClus对应的开始簇号</li><li>当一个簇号访问完后，通过FAT表项查询下一簇号，决定是结束还是继续访问下一簇号，重复第二条</li></ol><p><img src="https://s2.loli.net/2023/04/26/GYWiKSqEuPMI7Fz.png" alt="流程.png"></p><p>大致流程也就如上图所示</p><p>再看一下目录结构</p><p><img src="https://s2.loli.net/2023/04/25/Wz7t6yrQEhn2CXT.png" alt="ls.png"></p><p>分别以一个目录和文件举例</p><h4 id="查看HOUSE目录"><a href="#查看HOUSE目录" class="headerlink" title="查看HOUSE目录"></a>查看<code>HOUSE</code>目录</h4><h5 id="step1-查看根目录目录项"><a href="#step1-查看根目录目录项" class="headerlink" title="step1:查看根目录目录项"></a>step1:查看根目录目录项</h5><p>定位到<code>2600h</code></p><p><img src="https://s2.loli.net/2023/04/26/dxAw42HvRIMneBY.png" alt="RootEntry.png"></p><p><code>HOUSE</code>目录具有以下结构</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">RootEntry HOUSE &#123;</span><br><span class="line">    <span class="type">char</span> DIR_Name[<span class="number">11</span>] = <span class="string">&quot;HOUSE      &quot;</span>;      <span class="comment">//长度名+扩展名</span></span><br><span class="line">    u8   DIR_Attr = <span class="number">0x10</span>;                   <span class="comment">//文件属性</span></span><br><span class="line">    <span class="type">char</span> reserved[<span class="number">10</span>];                      <span class="comment">//保留位</span></span><br><span class="line">    u16  DIR_WrtTime;                       <span class="comment">//最后一次写入时间</span></span><br><span class="line">    u16  DIR_WrtDate;                       <span class="comment">//最后一次写入日期</span></span><br><span class="line">    u16  DIR_FstClus = <span class="number">0x0004</span> = <span class="number">4</span>;    <span class="comment">//开始簇号</span></span><br><span class="line">    u32  DIR_FileSize = <span class="number">0x00000000</span> = <span class="number">0</span>;     <span class="comment">//文件大小</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>判断是文件还是目录，FAT12下文件属性常见如下:</p><ul><li>0x01：只读文件</li><li>0x02：隐藏文件</li><li>0x04：系统文件</li><li>0x08：卷标</li><li>0x10：子目录</li><li>0x20：存档文件</li></ul><p>根据<code>DIR_Attr = 0x10</code>也能判断出<code>HOUSE</code>为子目录类型</p><p><code>HOUSE</code>子目录下还有<code>ROOM</code>子目录，去数据区<code>HOUSE</code>开始簇号<code>4</code>查看</p><p>簇号<code>4</code>应该是定位到<code>(4 - 2) * 512 + 4200h = 0400h + 4200h = 4600h</code></p><p><img src="https://s2.loli.net/2023/04/26/PpvEj6mY4g8UBuZ.png" alt="HOUSE.png"></p><p>忽略<code>.</code>和<code>..</code>子目录，<code>ROOM</code>子目录具有以下结构：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">RootEntry ROOM &#123;</span><br><span class="line">    <span class="type">char</span> DIR_Name[<span class="number">11</span>] = <span class="string">&quot;ROOM       &quot;</span>;      <span class="comment">//长度名+扩展名</span></span><br><span class="line">    u8   DIR_Attr = <span class="number">0x10</span>;                   <span class="comment">//文件属性</span></span><br><span class="line">    <span class="type">char</span> reserved[<span class="number">10</span>];                      <span class="comment">//保留位</span></span><br><span class="line">    u16  DIR_WrtTime;                       <span class="comment">//最后一次写入时间</span></span><br><span class="line">    u16  DIR_WrtDate;                       <span class="comment">//最后一次写入日期</span></span><br><span class="line">    u16  DIR_FstClus = <span class="number">0x0006</span> = <span class="number">6</span>;    <span class="comment">//开始簇号</span></span><br><span class="line">    u32  DIR_FileSize = <span class="number">0x00000000</span> = <span class="number">0</span>;     <span class="comment">//文件大小</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>去对应的簇号<code>6(4A00h)</code>处</p><p><img src="https://s2.loli.net/2023/04/26/bWMJrtYZc8eaHPn.png" alt="ROOM.png"></p><p>查看到<code>ROOM</code>目录下的信息</p><h5 id="step2-查询FAT表"><a href="#step2-查询FAT表" class="headerlink" title="step2:查询FAT表"></a>step2:查询FAT表</h5><p><code>HOUSE</code>起始簇内容全部访问完了，紧接着我们就要去访问与簇号对应的FAT表了，FAT表对应表项为簇号<code>4</code></p><p><code>FAT1表</code>起始于<code>1</code>扇区，即<code>200h</code></p><p><img src="https://s2.loli.net/2023/04/26/1OyNFUGi2Dez7cn.png" alt="FAT表.png"></p><p>前三个字节为固定的<code>0xF0</code>、<code>0xFF</code>、<code>0xFF</code>，符合<code>FAT12</code></p><p>如何读取<code>12</code>位FAT表项取值？</p><p>可不是照着顺序<code>F0F</code> <code>FFF</code>这样，这就涉及到存储的方式了。以下是几张较为直观的示意图：</p><p><img src="https://s2.loli.net/2023/04/26/y8q7VU6P2l5WbjJ.png" alt="FAT表构成.png"></p><p><img src="https://s2.loli.net/2023/04/26/SvZ76dol5UuBGhj.png" alt="FAT表1.png"></p><p><img src="https://s2.loli.net/2023/04/26/RKCTLXW2eQAivoc.png" alt="FAT12结构.png"></p><p>以我的看法，由于是按字节<code>(8位)</code>进行存取的，<code>12</code>位的尴尬取值，就不得不由一个完整的字节与另一字节的一半拼接起来。</p><p>以<code>FAT(0)</code> 和 <code>FAT(1)</code>为例，依据低地址在大端，高地址在小端的顺序，构成的三个字节应该为<code>0xFF-FF-F0</code>，读取<code>12</code>字节划分应该为<code>0xFFF-FF0</code>，<code>FAT(0)</code>的高位<code>F</code>为<code>byte2</code>的低位，<code>FAT(1)</code>的低位<code>F</code>为<code>byte2</code>的高位<code>F</code>，真是奇怪的读取方式。</p><p>用<code>16</code>位存储关联两字节后获取这<code>12</code>位的<code>FAT表项</code>也就得分奇偶进行区分了。粗略有以下写法</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(奇数表项号)&#123;</span><br><span class="line">    <span class="comment">//去掉value低4位</span></span><br><span class="line">    value &gt;&gt; <span class="number">4</span>;<span class="comment">//FF-FF &gt;&gt; 4 = 0F-FF</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//去掉value高4位</span></span><br><span class="line">    value &lt;&lt; <span class="number">4</span>;<span class="comment">//FF-F0 &lt;&lt; 4 = FF-00</span></span><br><span class="line">    value &gt;&gt; <span class="number">4</span>;<span class="comment">//FF-00 &gt;&gt; 4 = 0F-F0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以簇号<code>4</code>对应<code>FAT表项</code>值为<code>0xFFF</code>，<code>&gt;0xFF8</code>，表明已是文件的最后一个簇(<code>HOUSE</code>作为目录，对应的首簇能放<code>512 / 32 = 16</code>条<code>entry</code>)</p><h4 id="查看-NJU-SOFTWARE-SE1-TXT"><a href="#查看-NJU-SOFTWARE-SE1-TXT" class="headerlink" title="查看/NJU/SOFTWARE/SE1.TXT"></a>查看<code>/NJU/SOFTWARE/SE1.TXT</code></h4><p>之所以选择该文件一是目录结构有点复杂，而是文件大小超过<code>512</code>字节，也就是<code>1</code>簇，便于理解<code>FAT表</code></p><h5 id="step1-查看根目录目录项-1"><a href="#step1-查看根目录目录项-1" class="headerlink" title="step1:查看根目录目录项"></a>step1:查看根目录目录项</h5><p><img src="https://s2.loli.net/2023/04/26/dxAw42HvRIMneBY.png" alt="RootEntry.png"></p><p>大致与上文一样，定位<code>NJU</code>目录开始簇号为<code>0x0005 = 5</code>，定位至<code>4800h</code></p><p><img src="https://s2.loli.net/2023/04/26/AdUiQ3EZxRJ1oWf.png" alt="NJU表项.png"></p><p>定位<code>SOFTWARE</code>目录开始簇号为<code>0x0008 = 8</code>，定位至<code>4E00h</code></p><p><img src="https://s2.loli.net/2023/04/26/7CbAlKhWOyTmwdf.png" alt="SOFTWARE表项.png"></p><p>定位<code>SE1.TXT</code>开始簇号为<code>0x000B = 11</code>，定位至<code>5400h</code></p><p><img src="https://s2.loli.net/2023/04/26/wcBSJdxQY16ZC8D.png" alt="SE1.png"></p><h5 id="step2-查询FAT表-1"><a href="#step2-查询FAT表-1" class="headerlink" title="step2:查询FAT表"></a>step2:查询FAT表</h5><p><img src="https://s2.loli.net/2023/04/26/1OyNFUGi2Dez7cn.png" alt="FAT表.png"></p><p>查询表项<code>FAT(11)</code>，为<code>0x00C = 12</code>,接着继续去簇<code>12</code>读取接下来内容，查询表项<code>FAT(12)</code>，为<code>0x00D = 13</code>，接着去簇<code>13</code>读取下一段内容，查询表项<code>FAT(13) = 0x00E = 14</code>，去簇<code>14</code>读取剩余内容，查询表项<code>FAT(14) = 0xFFF</code>，读取完毕。</p><p>所以簇<code>14</code>为最后一个簇，定位到<code>5A00h</code>，确实如此。</p><p><img src="https://s2.loli.net/2023/04/26/kG3RpO2qiSK9dsy.png" alt="SE1.2.png"></p><p>至此已完成了<code>FAT12</code>文件系统的了解，镜像查看工具的实现依据上面所说文件读取过程进行模拟即可。</p><p>参考文章：</p><p><a href="https://blog.csdn.net/qq_36393978/article/details/126305288">【实现操作系统 02】FAT12 文件系统（摆脱术语用实际例子介绍）</a></p><p><a href="https://blog.csdn.net/u012323667/article/details/79522783">linux之 引导扇区（一）</a></p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件系统 </tag>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库(中)</title>
      <link href="/2023/04/21/%E6%95%B0%E6%8D%AE%E5%BA%932/"/>
      <url>/2023/04/21/%E6%95%B0%E6%8D%AE%E5%BA%932/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL基本语法（补）"><a href="#MySQL基本语法（补）" class="headerlink" title="MySQL基本语法（补）"></a>MySQL基本语法（补）</h1><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>如果我们需要对读取的数据进行排序，我们就可以使用 MySQL 的 ORDER BY 子句来设定你想按哪个字段哪种方式来进行排序，再返回搜索结果。</p><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> field1, field2,...fieldN <span class="keyword">FROM</span> table_name1, table_name2...</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> field1 [<span class="keyword">ASC</span> [<span class="keyword">DESC</span>][默认 <span class="keyword">ASC</span>]], [field2...] [<span class="keyword">ASC</span> [<span class="keyword">DESC</span>][默认 <span class="keyword">ASC</span>]]</span><br></pre></td></tr></table></figure><p>你可以使用 ASC 或 DESC 关键字来设置查询结果是按升序或降序排列。 默认情况下，它是按升序排列。</p><p>可以设定多个字段来排序</p><p>这语法怎么感觉奇奇怪怪的？是需要table1和table2有具有相同属性的列才可以如此书写吧？</p><p>实例：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> runoob_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> python       <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-25</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> python       <span class="operator">|</span> RUNOOB        <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-26</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> runoob_tbl</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">5</span>, &quot;java&quot;, &quot;runoob&quot;, &quot;2020-10-10&quot;);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> runoob_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> python       <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-25</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> python       <span class="operator">|</span> RUNOOB        <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-26</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">5</span> <span class="operator">|</span> java         <span class="operator">|</span> runoob        <span class="operator">|</span> <span class="number">2020</span><span class="number">-10</span><span class="number">-10</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">ORDER</span> <span class="keyword">BY</span> submission_date <span class="keyword">ASC</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">5</span> <span class="operator">|</span> java         <span class="operator">|</span> runoob        <span class="operator">|</span> <span class="number">2020</span><span class="number">-10</span><span class="number">-10</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> python       <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-25</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> python       <span class="operator">|</span> RUNOOB        <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-26</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">ORDER</span> <span class="keyword">BY</span> submission_date <span class="keyword">DESC</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> python       <span class="operator">|</span> RUNOOB        <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-26</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> python       <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-25</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">5</span> <span class="operator">|</span> java         <span class="operator">|</span> runoob        <span class="operator">|</span> <span class="number">2020</span><span class="number">-10</span><span class="number">-10</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p>上面三种为默认情况下select以及升序，降序排列后的结果</p><h2 id="数据导入"><a href="#数据导入" class="headerlink" title="数据导入"></a>数据导入</h2><h3 id="source命令导入"><a href="#source命令导入" class="headerlink" title="source命令导入"></a>source命令导入</h3><p>基本流程：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> database abc;      # 创建数据库</span><br><span class="line">mysql<span class="operator">&gt;</span> use abc;                  # 使用已创建的数据库 </span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> names utf8;           # 设置编码</span><br><span class="line">mysql<span class="operator">&gt;</span> source <span class="operator">/</span>home<span class="operator">/</span>abc<span class="operator">/</span>abc.sql  # 导入备份数据库</span><br></pre></td></tr></table></figure><p>下面是一份.sql文件</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> NAMES utf8;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">--  Table structure for `employee_tbl`</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `employee_tbl`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `employee_tbl` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `name` <span class="type">char</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `<span class="type">date</span>` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `signin` tinyint(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;登录次数&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">--  Records of `employee_tbl`</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employee_tbl` <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;2016-04-22 15:25:33&#x27;</span>, <span class="string">&#x27;1&#x27;</span>), (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;小王&#x27;</span>, <span class="string">&#x27;2016-04-20 15:25:47&#x27;</span>, <span class="string">&#x27;3&#x27;</span>), (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;小丽&#x27;</span>, <span class="string">&#x27;2016-04-19 15:26:02&#x27;</span>, <span class="string">&#x27;2&#x27;</span>), (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;小王&#x27;</span>, <span class="string">&#x27;2016-04-07 15:26:14&#x27;</span>, <span class="string">&#x27;4&#x27;</span>), (<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;2016-04-11 15:26:40&#x27;</span>, <span class="string">&#x27;4&#x27;</span>), (<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;2016-04-04 15:26:54&#x27;</span>, <span class="string">&#x27;2&#x27;</span>);</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>导入数据</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> source <span class="operator">/</span>home<span class="operator">/</span>frechen026<span class="operator">/</span>桌面<span class="operator">/</span>writing<span class="operator">/</span>data1.sql</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> warning (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.009</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">6</span> <span class="keyword">rows</span> affected (<span class="number">0.001</span> sec)</span><br><span class="line">Records: <span class="number">6</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.002</span> sec)</span><br><span class="line"></span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_RUNOOB <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Websites         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> apps             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> employee_tbl     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> runoob_tbl       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> employee_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+---------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name   <span class="operator">|</span> <span class="type">date</span>                <span class="operator">|</span> signin <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+---------------------+--------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> 小明   <span class="operator">|</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-22</span> <span class="number">15</span>:<span class="number">25</span>:<span class="number">33</span> <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> 小王   <span class="operator">|</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-20</span> <span class="number">15</span>:<span class="number">25</span>:<span class="number">47</span> <span class="operator">|</span>      <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> 小丽   <span class="operator">|</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-19</span> <span class="number">15</span>:<span class="number">26</span>:<span class="number">02</span> <span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> 小王   <span class="operator">|</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-07</span> <span class="number">15</span>:<span class="number">26</span>:<span class="number">14</span> <span class="operator">|</span>      <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> 小明   <span class="operator">|</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-11</span> <span class="number">15</span>:<span class="number">26</span>:<span class="number">40</span> <span class="operator">|</span>      <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> 小明   <span class="operator">|</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-04</span> <span class="number">15</span>:<span class="number">26</span>:<span class="number">54</span> <span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+--------+---------------------+--------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><h2 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h2><h3 id="导出-SQL-格式的数据"><a href="#导出-SQL-格式的数据" class="headerlink" title="导出 SQL 格式的数据"></a>导出 SQL 格式的数据</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">frechen026@debian:~/桌面$ mysqldump -u root -p RUNOOB runoob_tbl &gt; /home/frechen026/桌面/writing/1.txt</span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure><p>写入后的文件内容(删去了一堆奇奇怪怪的注释，诸如&#x2F;*!40101 xxx)：</p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">-- MariaDB dump 10.19  Distrib 10.5.18-MariaDB, for debian-linux-gnu (x86_64)</span><br><span class="line">--</span><br><span class="line">-- Host: localhost    Database: RUNOOB</span><br><span class="line">-- ------------------------------------------------------</span><br><span class="line">-- Server version10.5.18-MariaDB-0+deb11u1</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- Table structure for table `runoob_tbl`</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `runoob_tbl`;</span><br><span class="line"></span><br><span class="line">CREATE TABLE `runoob_tbl` (</span><br><span class="line">  `runoob_id` int(10) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `runoob_title` varchar(100) NOT NULL,</span><br><span class="line">  `runoob_author` varchar(40) NOT NULL,</span><br><span class="line">  `submission_date` date DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`runoob_id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">-- Dumping data for table `runoob_tbl`</span><br><span class="line">--</span><br><span class="line"></span><br><span class="line">LOCK TABLES `runoob_tbl` WRITE;</span><br><span class="line"></span><br><span class="line">INSERT INTO `runoob_tbl` VALUES (1,&#x27;python&#x27;,&#x27;菜鸟教程&#x27;,&#x27;2023-03-25&#x27;),(2,&#x27;python&#x27;,&#x27;RUNOOB&#x27;,&#x27;2023-03-26&#x27;),(5,&#x27;java&#x27;,&#x27;runoob&#x27;,&#x27;2020-10-10&#x27;);</span><br><span class="line"></span><br><span class="line">UNLOCK TABLES;</span><br><span class="line"></span><br><span class="line">-- Dump completed on 2023-04-20 11:31:31</span><br></pre></td></tr></table></figure><h3 id="使用-SELECT-…-INTO-OUTFILE-语句导出数据"><a href="#使用-SELECT-…-INTO-OUTFILE-语句导出数据" class="headerlink" title="使用 SELECT … INTO OUTFILE 语句导出数据"></a>使用 SELECT … INTO OUTFILE 语句导出数据</h3><p>会报无读写文件权限，挺奇怪的，执行mysql时不都已经sudo了吗</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> runoob_tbl </span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">INTO</span> OUTFILE <span class="string">&#x27;/tmp/runoob.txt&#x27;</span>;</span><br></pre></td></tr></table></figure><p>写到tmp文件夹可行，看来还得好好了解了解linux，写入后数据如下</p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">1python菜鸟教程2023-03-25</span><br><span class="line">2pythonRUNOOB2023-03-26</span><br><span class="line">5javarunoob2020-10-10</span><br></pre></td></tr></table></figure><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><p>GROUP BY 语句根据一个或多个列对结果集进行分组。</p><p>通用语法</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name, <span class="keyword">function</span>(column_name)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name operator <span class="keyword">value</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> column_name;</span><br></pre></td></tr></table></figure><p>使用 GROUP BY 语句 将数据表按名字进行分组，并统计每个人有多少条记录：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> name, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> employee_tbl <span class="keyword">GROUP</span> <span class="keyword">BY</span> name;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> name   <span class="operator">|</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="operator">|</span> 小丽   <span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 小明   <span class="operator">|</span>        <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 小王   <span class="operator">|</span>        <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------+----------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p>划分的标准仅仅是名字是否相同吗？</p><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><p>使用 MySQL 的 JOIN 在两个或多个表中查询数据</p><ul><li><p>INNER JOIN（内连接,或等值连接）：获取两个表中字段匹配关系的记录。</p></li><li><p>LEFT JOIN（左连接）：获取左表所有记录，即使右表没有对应匹配的记录。</p></li><li><p>RIGHT JOIN（右连接）： 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。</p></li></ul><p>创建两张表加以验证</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tcount_tbl`(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `runoob_author` <span class="type">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `runoob_count` <span class="type">INT</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> )ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.012</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> tcount_tbl</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (&quot;菜鸟教程&quot;, <span class="number">10</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (&quot;RUNOOB.COM&quot;, <span class="number">20</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (&quot;Google&quot;, <span class="number">22</span>);</span><br><span class="line">Query OK, <span class="number">3</span> <span class="keyword">rows</span> affected (<span class="number">0.004</span> sec)</span><br><span class="line">Records: <span class="number">3</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `runoob_tbl`(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `runoob_id` <span class="type">INT</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `runoob_title` <span class="type">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `runoob_author` <span class="type">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `submission_date` <span class="type">DATE</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> )ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.010</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> runoob_tbl</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">1</span>, &quot;学习 PHP&quot;, &quot;菜鸟教程&quot;, <span class="string">&#x27;2017-04-12&#x27;</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">2</span>, &quot;学习 MySQL&quot;, &quot;菜鸟教程&quot;, <span class="string">&#x27;2017-04-12&#x27;</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">3</span>, &quot;学习 Java&quot;, &quot;RUNOOB.COM&quot;, <span class="string">&#x27;2015-05-01&#x27;</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">4</span>, &quot;学习 Python&quot;, &quot;RUNOOB.COM&quot;, <span class="string">&#x27;2016-03-06&#x27;</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">5</span>, &quot;学习 C&quot;, &quot;FK&quot;, <span class="string">&#x27;2017-04-05&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">5</span> <span class="keyword">rows</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line">Records: <span class="number">5</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tcount_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_author <span class="operator">|</span> runoob_count <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> 菜鸟教程      <span class="operator">|</span>           <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span>           <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Google        <span class="operator">|</span>           <span class="number">22</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> runoob_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title  <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> 学习 PHP      <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2017</span><span class="number">-04</span><span class="number">-12</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> 学习 MySQL    <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2017</span><span class="number">-04</span><span class="number">-12</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">3</span> <span class="operator">|</span> 学习 Java     <span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span> <span class="number">2015</span><span class="number">-05</span><span class="number">-01</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">4</span> <span class="operator">|</span> 学习 Python   <span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span> <span class="number">2016</span><span class="number">-03</span><span class="number">-06</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">5</span> <span class="operator">|</span> 学习 C        <span class="operator">|</span> FK            <span class="operator">|</span> <span class="number">2017</span><span class="number">-04</span><span class="number">-05</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+---------------+-----------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p><strong>注意：日期写法要加单引号，创建表格时表格名以及列名均用反引号括起来</strong></p><h3 id="INNER-JOIN"><a href="#INNER-JOIN" class="headerlink" title="INNER JOIN"></a>INNER JOIN</h3><p>table1和table2的交集</p><p>用MySQL的INNER JOIN(也可以省略 INNER 使用 JOIN，效果一样)来连接以上两张表来读取runoob_tbl表中所有runoob_author字段在tcount_tbl表对应的runoob_count字段值</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> a.runoob_id, a.runoob_author, b.runoob_count <span class="keyword">FROM</span> runoob_tbl a <span class="keyword">INNER</span> <span class="keyword">JOIN</span> tcount_tbl b <span class="keyword">ON</span> a.runoob_author <span class="operator">=</span> b.runoob_author;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_author <span class="operator">|</span> runoob_count <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span>           <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span>           <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">3</span> <span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span>           <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">4</span> <span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span>           <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+--------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><h3 id="LEFT-JOIN"><a href="#LEFT-JOIN" class="headerlink" title="LEFT JOIN"></a>LEFT JOIN</h3><p>table1</p><p>MySQL LEFT JOIN 会读取左边数据表的全部数据，即使右边表无对应数据。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> a.runoob_id, a.runoob_author, b.runoob_count <span class="keyword">FROM</span> runoob_tbl a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tcount_tbl b <span class="keyword">ON</span> a.runoob_author <span class="operator">=</span> b.runoob_author;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_author <span class="operator">|</span> runoob_count <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span>           <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span>           <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">3</span> <span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span>           <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">4</span> <span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span>           <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">5</span> <span class="operator">|</span> FK            <span class="operator">|</span>         <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+--------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><h3 id="RIGHT-JOIN"><a href="#RIGHT-JOIN" class="headerlink" title="RIGHT JOIN"></a>RIGHT JOIN</h3><p>table2</p><p>MySQL RIGHT JOIN 会读取右边数据表的全部数据，即使左边边表无对应数据。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> a.runoob_id, a.runoob_author, b.runoob_count <span class="keyword">FROM</span> runoob_tbl a <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> tcount_tbl b <span class="keyword">ON</span> a.runoob_author <span class="operator">=</span> b.runoob_author;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_author <span class="operator">|</span> runoob_count <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span>           <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span>           <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">3</span> <span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span>           <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">4</span> <span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span>           <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span>           <span class="number">22</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+---------------+--------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><h2 id="NULL处理"><a href="#NULL处理" class="headerlink" title="NULL处理"></a>NULL处理</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tcount_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_author <span class="operator">|</span> runoob_count <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> 菜鸟教程      <span class="operator">|</span>           <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span>           <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Google        <span class="operator">|</span>           <span class="number">22</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> tcount_tbl</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">values</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (&quot;frechen026&quot;, <span class="keyword">NULL</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tcount_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_author <span class="operator">|</span> runoob_count <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> 菜鸟教程      <span class="operator">|</span>           <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span>           <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Google        <span class="operator">|</span>           <span class="number">22</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> frechen026    <span class="operator">|</span>         <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实例：选出count取值非空的数据</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tcount_tbl <span class="keyword">where</span> runoob_count <span class="operator">!=</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p>发现使用 <code>!=</code> 无效</p><p>查找数据表中 runoob_test_tbl 列是否为 NULL，必须使用 IS NULL 和 IS NOT NULL，如下实例：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tcount_tbl <span class="keyword">where</span> runoob_count <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_author <span class="operator">|</span> runoob_count <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> 菜鸟教程      <span class="operator">|</span>           <span class="number">10</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> RUNOOB.COM    <span class="operator">|</span>           <span class="number">20</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Google        <span class="operator">|</span>           <span class="number">22</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>在前面的章节我们已经了解到MySQL可以通过 LIKE …% 来进行模糊匹配。</p><p>MySQL 同样也支持其他正则表达式的匹配， MySQL中使用 REGEXP 操作符来进行正则表达式匹配。</p><p>要用的时候对照表格即可，下面是以2017开头的数据通过正则表达式给出</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> runoob_tbl <span class="keyword">WHERE</span> submission_date  REGEXP <span class="string">&#x27;^2017&#x27;</span></span><br><span class="line">;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> 学习 PHP     <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2017</span><span class="number">-04</span><span class="number">-12</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> 学习 MySQL   <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2017</span><span class="number">-04</span><span class="number">-12</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">5</span> <span class="operator">|</span> 学习 C       <span class="operator">|</span> FK            <span class="operator">|</span> <span class="number">2017</span><span class="number">-04</span><span class="number">-05</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ALTER命令"><a href="#ALTER命令" class="headerlink" title="ALTER命令"></a>ALTER命令</h2><p>需要修改数据表名或者修改数据表字段时，就需要使用到MySQL ALTER命令。</p><p>可以使用<code>SHOW COLUMNS FROM table</code>查看数据表中各列的属性</p><p>先创建进行实验的数据表</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> testalter_tbl</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (i <span class="type">INT</span>, c <span class="type">CHAR</span>(<span class="number">1</span>));</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.011</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> testalter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type    <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> i     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> c     <span class="operator">|</span> <span class="type">char</span>(<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="删除表字段"><a href="#删除表字段" class="headerlink" title="删除表字段"></a>删除表字段</h3><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">DROP</span> column_name;</span><br></pre></td></tr></table></figure><p>实例：</p><p>删除i字段</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl <span class="keyword">DROP</span> i;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.008</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> testalter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type    <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> c     <span class="operator">|</span> <span class="type">char</span>(<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>如果数据表中只剩余一个字段则无法使用DROP来删除字段。</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl <span class="keyword">DROP</span> c;</span><br><span class="line">ERROR <span class="number">1090</span> (<span class="number">42000</span>): You can<span class="string">&#x27;t delete all columns with ALTER TABLE; use DROP TABLE instead</span></span><br></pre></td></tr></table></figure><h3 id="增加表字段"><a href="#增加表字段" class="headerlink" title="增加表字段"></a>增加表字段</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">ADD</span> column_name type [<span class="keyword">NOT</span> <span class="keyword">NULL</span>];</span><br></pre></td></tr></table></figure><p>实例：<br>重新添加i表字段且将其置为NOT NULL，将自动添加到数据表字段的末尾</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl <span class="keyword">ADD</span> i <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.007</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> testalter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type    <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> c     <span class="operator">|</span> <span class="type">char</span>(<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> i     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="指定添加的位置"><a href="#指定添加的位置" class="headerlink" title="指定添加的位置"></a>指定添加的位置</h4><p>如果你需要指定新增字段的位置，可以使用MySQL提供的关键字 FIRST (设定位第一列)， AFTER 字段名（设定位于某个字段之后）</p><p>实例：添加A字段到首位，将B字段添加到其后</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl <span class="keyword">ADD</span> A <span class="type">INT</span> <span class="keyword">FIRST</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.006</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl <span class="keyword">ADD</span> B <span class="type">INT</span> AFTER A;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.006</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> testalter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type    <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> A     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> B     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> c     <span class="operator">|</span> <span class="type">char</span>(<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> i     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure><p>FIRST 和 AFTER 关键字可用于 ADD 与 MODIFY 子句，所以如果你想重置数据表字段的位置就需要先使用 DROP 删除字段然后使用 ADD 来添加字段并设置位置。</p><h3 id="修改字段"><a href="#修改字段" class="headerlink" title="修改字段"></a>修改字段</h3><p>如果需要修改字段类型及名称, 你可以在ALTER命令中使用 MODIFY 或 CHANGE 子句 。</p><p>实例：把字段 c 的类型从 CHAR(1) 改为 CHAR(10)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl MODIFY c <span class="type">CHAR</span>(<span class="number">10</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.025</span> sec)              </span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> testalter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+----------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type     <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+----------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> A     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)  <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> B     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)  <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> c     <span class="operator">|</span> <span class="type">char</span>(<span class="number">10</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> i     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+----------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure><p>似乎按照MODIFY的语法只能改变字段的类型？</p><p>使用 CHANGE 子句, 语法有很大的不同。 在 CHANGE 关键字之后，紧跟着的是你要修改的字段名，然后指定新字段名及类型。</p><p>实例：将c的类型改回chat(1)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl CHANGE c c <span class="type">CHAR</span>(<span class="number">1</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.024</span> sec)              </span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> testalter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type    <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> A     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> B     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> c     <span class="operator">|</span> <span class="type">char</span>(<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> i     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure><h3 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h3><p>如果需要修改数据表的名称，可以在 ALTER TABLE 语句中使用 RENAME 子句来实现。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl RENAME <span class="keyword">TO</span> alter_tbl;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.006</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_RUNOOB <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Websites         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> alter_tbl        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> apps             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> runoob_tbl       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tcount_tbl       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="普通索引"><a href="#普通索引" class="headerlink" title="普通索引"></a>普通索引</h3><h4 id="基本做法"><a href="#基本做法" class="headerlink" title="基本做法"></a>基本做法</h4><h5 id="添加索引"><a href="#添加索引" class="headerlink" title="添加索引"></a>添加索引</h5><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> INDEX indexName <span class="keyword">ON</span> table_name (column_name)</span><br></pre></td></tr></table></figure><p>实例：为alter_tbl表中的c添加索引</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> INDEX index_test <span class="keyword">ON</span> alter_tbl (c);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.008</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> alter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type    <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> A     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> B     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> c     <span class="operator">|</span> <span class="type">char</span>(<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span> MUL <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> i     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure><p><strong>以下错误</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> INDEX index <span class="keyword">ON</span> alter_tbl (c);</span><br><span class="line">ERROR <span class="number">1064</span> (<span class="number">42000</span>): You have an error <span class="keyword">in</span> your <span class="keyword">SQL</span> syntax; <span class="keyword">check</span> the manual that corresponds <span class="keyword">to</span> your MariaDB server version <span class="keyword">for</span> the <span class="keyword">right</span> syntax <span class="keyword">to</span> use near <span class="string">&#x27;index ON alter_tbl (c)&#x27;</span> <span class="keyword">at</span> line <span class="number">1</span></span><br></pre></td></tr></table></figure><p>mysql对于语法是不在意大小写的，所以添加名为index的索引，与关键字冲突，错误！</p><h5 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h5><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> INDEX indexName <span class="keyword">ON</span> <span class="keyword">table</span>;</span><br></pre></td></tr></table></figure><p>实例：删除刚刚创建的索引</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">drop</span> index index_test <span class="keyword">on</span> alter_tbl;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.008</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="ALTER语句"><a href="#ALTER语句" class="headerlink" title="ALTER语句"></a>ALTER语句</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">table</span> tableName <span class="keyword">ADD</span> INDEX indexName(columnName)</span><br></pre></td></tr></table></figure><p>实例：为alter_tbl表中的c添加索引</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">table</span> alter_tbl <span class="keyword">ADD</span> INDEX index_test(c);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.012</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> alter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type    <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> A     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> B     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> c     <span class="operator">|</span> <span class="type">char</span>(<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span> MUL <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> i     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure><h4 id="创建表格时指定"><a href="#创建表格时指定" class="headerlink" title="创建表格时指定"></a>创建表格时指定</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> mytable(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ID <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> username <span class="type">VARCHAR</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> INDEX (username)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.015</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> mytable;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field    <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> ID       <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">16</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> MUL <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.003</span> sec)</span><br></pre></td></tr></table></figure><h3 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h3><p>它与前面的普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值。如果是组合索引，则列值的组合必须唯一。它有以下几种创建方式：</p><h4 id="基本做法-1"><a href="#基本做法-1" class="headerlink" title="基本做法"></a>基本做法</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX indexName <span class="keyword">ON</span> table_name (column_name)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> INDEX index_test <span class="keyword">ON</span> alter_tbl (c);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.009</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> alter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type    <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> A     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> B     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> c     <span class="operator">|</span> <span class="type">char</span>(<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span> UNI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> i     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure><h4 id="ALTER语句-1"><a href="#ALTER语句-1" class="headerlink" title="ALTER语句"></a>ALTER语句</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> alter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type    <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> A     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> B     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> c     <span class="operator">|</span> <span class="type">char</span>(<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span> UNI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> i     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">table</span> alter_tbl <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> INDEX index_test(i);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.028</span> sec)</span><br><span class="line">Records: <span class="number">0</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> alter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field <span class="operator">|</span> Type    <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> A     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> B     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> c     <span class="operator">|</span> <span class="type">char</span>(<span class="number">1</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> i     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+---------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>c直接被取代了吗？</p><h4 id="创建表格时指定-1"><a href="#创建表格时指定-1" class="headerlink" title="创建表格时指定"></a>创建表格时指定</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">DROP</span> <span class="keyword">table</span> mytable;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.006</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> mytable(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> ID <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> username <span class="type">VARCHAR</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">UNIQUE</span> INDEX (username)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> );</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.010</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> mytable;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field    <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> ID       <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">16</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.002</span> sec)</span><br></pre></td></tr></table></figure><p>key的PRI莫非是主键的意思？看了下创建表时指定主键的表的列属性，确实如此</p><p>奇怪了，上面还是UNI呢，这里怎么直接转成PRI了，留个坑</p><p>哦，好像似乎NOT NULL的就是PRI,NULL的就是UNI,看来还挺符合主键的要求的</p><h3 id="使用ALTER-命令添加和删除索引"><a href="#使用ALTER-命令添加和删除索引" class="headerlink" title="使用ALTER 命令添加和删除索引"></a>使用ALTER 命令添加和删除索引</h3><ul><li>ALTER TABLE tbl_name ADD PRIMARY KEY (column_list): 该语句添加一个主键，这意味着索引值必须是唯一的，且不能为NULL。</li><li>ALTER TABLE tbl_name ADD UNIQUE index_name (column_list): 这条语句创建索引的值必须是唯一的（除了NULL外，NULL可能会出现多次）。</li><li>ALTER TABLE tbl_name ADD INDEX index_name (column_list): 添加普通索引，索引值可出现多次。</li><li>ALTER TABLE tbl_name ADD FULLTEXT index_name (column_list):该语句指定了索引为 FULLTEXT ，用于全文索引。</li></ul><h3 id="使用-ALTER-命令添加和删除主键"><a href="#使用-ALTER-命令添加和删除主键" class="headerlink" title="使用 ALTER 命令添加和删除主键"></a>使用 ALTER 命令添加和删除主键</h3><p>主键作用于列上（可以一个列或多个列联合主键），添加主键索引时，你需要确保该主键默认不为空（NOT NULL）。实例如下</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl MODIFY i <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl <span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY (i);</span><br></pre></td></tr></table></figure><p>也可以使用 ALTER 命令删除主键：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl <span class="keyword">DROP</span> <span class="keyword">PRIMARY</span> KEY;</span><br></pre></td></tr></table></figure><p>删除主键时只需指定PRIMARY KEY，但在删除索引时，你必须知道索引名。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> employee_tbl <span class="keyword">DROP</span> <span class="keyword">PRIMARY</span> KEY;</span><br><span class="line">Query OK, <span class="number">6</span> <span class="keyword">rows</span> affected (<span class="number">0.026</span> sec)              </span><br><span class="line">Records: <span class="number">6</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="显示索引信息"><a href="#显示索引信息" class="headerlink" title="显示索引信息"></a>显示索引信息</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> INDEX <span class="keyword">FROM</span> table_name\G</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> INDEX <span class="keyword">FROM</span> alter_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">Table</span>     <span class="operator">|</span> Non_unique <span class="operator">|</span> Key_name   <span class="operator">|</span> Seq_in_index <span class="operator">|</span> Column_name <span class="operator">|</span> <span class="keyword">Collation</span> <span class="operator">|</span> <span class="keyword">Cardinality</span> <span class="operator">|</span> Sub_part <span class="operator">|</span> Packed <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Index_type <span class="operator">|</span> Comment <span class="operator">|</span> Index_comment <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line"><span class="operator">|</span> alter_tbl <span class="operator">|</span>          <span class="number">0</span> <span class="operator">|</span> index_test <span class="operator">|</span>            <span class="number">1</span> <span class="operator">|</span> i           <span class="operator">|</span> A         <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span>     <span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NULL</span>   <span class="operator">|</span>      <span class="operator">|</span> BTREE      <span class="operator">|</span>         <span class="operator">|</span>               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> INDEX <span class="keyword">FROM</span> alter_tbl\G;</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">        <span class="keyword">Table</span>: alter_tbl</span><br><span class="line">   Non_unique: <span class="number">0</span></span><br><span class="line">     Key_name: index_test</span><br><span class="line"> Seq_in_index: <span class="number">1</span></span><br><span class="line">  Column_name: i</span><br><span class="line">    <span class="keyword">Collation</span>: A</span><br><span class="line">  <span class="keyword">Cardinality</span>: <span class="number">0</span></span><br><span class="line">     Sub_part: <span class="keyword">NULL</span></span><br><span class="line">       Packed: <span class="keyword">NULL</span></span><br><span class="line">         <span class="keyword">Null</span>: </span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      Comment: </span><br><span class="line">Index_comment: </span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p>窗口不够的话上面那种看着确实不舒服。</p>]]></content>
      
      
      <categories>
          
          <category> 数据管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
            <tag> MariaDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编</title>
      <link href="/2023/04/15/%E6%B1%87%E7%BC%96/"/>
      <url>/2023/04/15/%E6%B1%87%E7%BC%96/</url>
      
        <content type="html"><![CDATA[<h1 id="nasm汇编"><a href="#nasm汇编" class="headerlink" title="nasm汇编"></a>nasm汇编</h1><div class="note info simple"><p>鉴于操作系统该门课程的放纵教学，企图用一两个小时使学生掌握繁多的汇编语言，也就浅浅记录一下汇编语言的学习吧</p></div><h2 id="nasm基础"><a href="#nasm基础" class="headerlink" title="nasm基础"></a>nasm基础</h2><p>入门的一些小案例我觉得<a href="https://cloudy1225.github.io/blog/nasm/tutorial1.html">这里</a>就很好，不知是往年哪位学长&#x2F;学姐整理的，感谢万分。</p><h3 id="SECTION"><a href="#SECTION" class="headerlink" title="SECTION"></a>SECTION</h3><p>.data——有初始值的量，使用dX来申请空间大小</p><p>.bss——无初始值的量，使用resX来申请空间大小</p><p>.text——方法区，_start:相当于main()，没有call&#x2F;ret&#x2F;跳转语句默认向下执行</p><table><thead><tr><th>X</th><th>Meaning</th><th>size&#x2F;bytes</th></tr></thead><tbody><tr><td>b</td><td>byte</td><td>1</td></tr><tr><td>w</td><td>word</td><td>2</td></tr><tr><td>d</td><td>double word</td><td>4</td></tr><tr><td>q</td><td>quad word</td><td>8</td></tr><tr><td>t</td><td>ten word</td><td>20</td></tr></tbody></table><p>鉴于int是32位，即4bytes，因此我们可以用dd和resd为其申请空间</p><h3 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h3><p><img src="https://s2.loli.net/2023/04/17/zKJ1lij65AZnGFT.png" alt="寄存器.png"></p><p>汇编语言中最为常见的怕不就是寄存器之间的操作了，根据寄存器的大小合理存放数据即可，当然如果寄存器中还存在有用数据时，记住push和pop也就行。</p><h4 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h4><p>系统调用对于指定寄存器以及其对应的值是有要求的，不过也因此固定且使用方便。</p><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">call    quit</span><br><span class="line"></span><br><span class="line">quit:</span><br><span class="line">    mov     ebx, 0; exit时返回状态0 - &#x27;No Errors&#x27;</span><br><span class="line">    mov     eax, 1; 调用SYS_EXIT（OPCODE是1）</span><br><span class="line">    int     80h</span><br><span class="line">    ret</span><br></pre></td></tr></table></figure><p>调用时call，一定要在调用结束时ret，段错误大多数是因为函数没有能够正确ret导致的</p><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>结合判断的条件语句进行跳转，每次跳转至loop开始初，从而实现循环，大多数如i++的，可以用ecx等作为计数器<br>例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    mov     ecx, 0  ; to count</span><br><span class="line">    xor     eax, eax</span><br><span class="line">.loop0:</span><br><span class="line">    mov     al, byte[input+ecx]</span><br><span class="line">    cmp     al, 32</span><br><span class="line">    je      getlen1</span><br><span class="line">    mov     byte[input1+ecx], al</span><br><span class="line">    inc     ecx</span><br><span class="line">    jmp     .loop0</span><br></pre></td></tr></table></figure><h3 id="解引用"><a href="#解引用" class="headerlink" title="解引用"></a>解引用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">store:</span><br><span class="line">    mov     ecx, 0  ; use ecx to count</span><br><span class="line">    </span><br><span class="line">.loop1:</span><br><span class="line">    cmp     ecx, dword[len1]</span><br><span class="line">    je      .L1</span><br><span class="line">    mov     ebx, dword[len1]</span><br><span class="line">    sub     ebx, ecx</span><br><span class="line">    sub     ebx, 1      </span><br><span class="line">    movzx   eax, byte[input1+ebx]</span><br><span class="line">    sub     eax, &#x27;0&#x27;</span><br><span class="line">    xor     ebx, ebx</span><br><span class="line">    mov     dword[dividend+ecx*4], eax</span><br><span class="line">    inc     ecx</span><br><span class="line">    jmp     .loop1</span><br></pre></td></tr></table></figure><p>使用[]进行解引用，前面加上dword等标明大小，[]内为需要解引用的地址，注意根据所占位数的不同，地址偏移量是不同的，如上面的byte[input1+ebx]和dword[dividend+ecx*4]</p><h2 id="nasm实现大数除法"><a href="#nasm实现大数除法" class="headerlink" title="nasm实现大数除法"></a>nasm实现大数除法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; file name:main.asm</span><br><span class="line">; nasm -f elf main.asm</span><br><span class="line">; ld -m elf_i386 main.o -o main</span><br><span class="line">; ./main</span><br><span class="line">; BigIntDiv</span><br><span class="line"></span><br><span class="line">%include    &#x27;function.asm&#x27;</span><br><span class="line"></span><br><span class="line">SECTION .data</span><br><span class="line">msg1:    db  &#x27;Please input two numbers&#x27;, 0Ah, 0h ;inform the user to input two numbers</span><br><span class="line">msg2:    db  &#x27;The quotient is:&#x27;, 0Ah, 0h ;tell the user next output is quotient</span><br><span class="line">msg3:    db  &#x27;The remainder is:&#x27;, 0Ah, 0h </span><br><span class="line">ZERO:    db  &#x27;0&#x27;, 0Ah, 0h</span><br><span class="line">error_msg:   db  &#x27;Error!&#x27;, 0Ah, 0h</span><br><span class="line">dividend:   times   102     dd  0</span><br><span class="line">divisor:    times   102     dd  0</span><br><span class="line">quotient:   times   102     dd  0</span><br><span class="line"></span><br><span class="line">SECTION .bss</span><br><span class="line">input       resb    210</span><br><span class="line">input1      resb    102 ;dividend</span><br><span class="line">input2      resb    102 ;divisor</span><br><span class="line">len1    resd    1</span><br><span class="line">len2    resd    1</span><br><span class="line">judge   resd    1</span><br><span class="line">index   resd    1</span><br><span class="line">printout    resb    1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SECTION .text</span><br><span class="line">global  _start</span><br><span class="line"></span><br><span class="line">; main() </span><br><span class="line">_start:</span><br><span class="line">; print msg1</span><br><span class="line">    mov     eax, msg1</span><br><span class="line">    call    sprint</span><br><span class="line">; input the two numbers</span><br><span class="line">    ; mov     eax, 3</span><br><span class="line">    ; mov     ebx, 0</span><br><span class="line">    ; mov     ecx, input1</span><br><span class="line">    ; mov     edx, 102</span><br><span class="line">    ; int     80h</span><br><span class="line">    ; mov     eax, 3</span><br><span class="line">    ; mov     ebx, 0</span><br><span class="line">    ; mov     ecx, input2</span><br><span class="line">    ; mov     edx, 102</span><br><span class="line">    ; int     80h</span><br><span class="line">    mov     eax, 3</span><br><span class="line">    mov     ebx, 0</span><br><span class="line">    mov     ecx, input</span><br><span class="line">    mov     edx, 210</span><br><span class="line">    int     80h</span><br><span class="line">    mov     ecx, 0  ; to count</span><br><span class="line">    xor     eax, eax</span><br><span class="line">.loop0:</span><br><span class="line">    mov     al, byte[input+ecx]</span><br><span class="line">    cmp     al, 32</span><br><span class="line">    je      getlen1</span><br><span class="line">    mov     byte[input1+ecx], al</span><br><span class="line">    inc     ecx</span><br><span class="line">    jmp     .loop0</span><br><span class="line"></span><br><span class="line">; get the length of the first num</span><br><span class="line">getlen1:</span><br><span class="line">    mov     dword[len1], ecx</span><br><span class="line">    mov     byte[input1+ecx], 0Ah</span><br><span class="line">    inc     ecx</span><br><span class="line">    mov     byte[input1+ecx], 0</span><br><span class="line">    mov     esi, 0</span><br><span class="line"></span><br><span class="line">.loop01:</span><br><span class="line">    mov     al, byte[input+ecx]</span><br><span class="line">    cmp     al, 0</span><br><span class="line">    je      getlen2</span><br><span class="line">    mov     byte[input2+esi], al</span><br><span class="line">    inc     esi</span><br><span class="line">    inc     ecx</span><br><span class="line">    jmp     .loop01</span><br><span class="line"></span><br><span class="line">; get the length of the second num</span><br><span class="line">getlen2:</span><br><span class="line">    sub     esi, 1</span><br><span class="line">    mov     dword[len2], esi</span><br><span class="line">    add     esi, 1</span><br><span class="line">    mov     byte[input2+esi], 0</span><br><span class="line"></span><br><span class="line">; use list to store the two numbers,inverted order</span><br><span class="line">    call    store</span><br><span class="line">; two simple case</span><br><span class="line">; first:divisor == 0</span><br><span class="line">    xor     eax, eax</span><br><span class="line">    mov     al, byte[input2]</span><br><span class="line">    cmp     al, &#x27;0&#x27;</span><br><span class="line">    je      error</span><br><span class="line">; second:len1 &lt; len2</span><br><span class="line">    xor     eax, eax</span><br><span class="line">    mov     eax, dword[len1]</span><br><span class="line">    mov     ebx, dword[len2]</span><br><span class="line">    cmp     eax, ebx</span><br><span class="line">    jb      case1</span><br><span class="line">; the most complex part</span><br><span class="line">; do BigIntDiv</span><br><span class="line">    jmp     case2</span><br><span class="line">; make sure exit</span><br><span class="line">    call    quit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; ------------------------------</span><br><span class="line">; functions and loop</span><br><span class="line">; ------------------------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; dividend[i] = input1[len1-1-i] - &#x27;0&#x27;;</span><br><span class="line">; divisor[i] = input2[len2-1-i] - &#x27;0&#x27;;</span><br><span class="line">store:</span><br><span class="line">    mov     ecx, 0  ; use ecx to count</span><br><span class="line">    </span><br><span class="line">.loop1:</span><br><span class="line">    cmp     ecx, dword[len1]</span><br><span class="line">    je      .L1</span><br><span class="line">    mov     ebx, dword[len1]</span><br><span class="line">    sub     ebx, ecx</span><br><span class="line">    sub     ebx, 1      </span><br><span class="line">    movzx   eax, byte[input1+ebx]</span><br><span class="line">    sub     eax, &#x27;0&#x27;</span><br><span class="line">    xor     ebx, ebx</span><br><span class="line">    mov     dword[dividend+ecx*4], eax</span><br><span class="line">    inc     ecx</span><br><span class="line">    jmp     .loop1</span><br><span class="line"></span><br><span class="line">.L1:</span><br><span class="line">    mov     ecx, 0</span><br><span class="line"></span><br><span class="line">.loop2:</span><br><span class="line">    cmp     ecx, dword[len2]</span><br><span class="line">    je      .L2</span><br><span class="line">    mov     ebx, dword[len2]</span><br><span class="line">    sub     ebx, ecx</span><br><span class="line">    sub     ebx, 1</span><br><span class="line">    movzx   eax, byte[input2+ebx]</span><br><span class="line">    sub     eax, &#x27;0&#x27;</span><br><span class="line">    xor     ebx, ebx</span><br><span class="line">    mov     dword[divisor+ecx*4], eax</span><br><span class="line">    inc     ecx</span><br><span class="line">    jmp     .loop2</span><br><span class="line"></span><br><span class="line">.L2:</span><br><span class="line">    ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; -------------------------------</span><br><span class="line">; error</span><br><span class="line">error:</span><br><span class="line">    mov     eax, error_msg</span><br><span class="line">    call    sprint</span><br><span class="line">    call    quit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; --------------------------------</span><br><span class="line">; a simple case</span><br><span class="line">case1:</span><br><span class="line">    mov     eax, msg2</span><br><span class="line">    call    sprint</span><br><span class="line">    mov     eax, ZERO</span><br><span class="line">    call    sprint</span><br><span class="line">    mov     eax, msg3</span><br><span class="line">    call    sprint</span><br><span class="line">    mov     eax, input1</span><br><span class="line">    call    sprint</span><br><span class="line">    call    quit</span><br><span class="line"></span><br><span class="line">; --------------------------------</span><br><span class="line">; BigIntDiv</span><br><span class="line">case2:</span><br><span class="line">    mov     eax, dword[len1]</span><br><span class="line">    sub     eax, dword[len2]</span><br><span class="line">    mov     ecx, eax    ;use ecx to represent i</span><br><span class="line"></span><br><span class="line">.loop3:</span><br><span class="line">    cmp     ecx, 0</span><br><span class="line">    jl      output</span><br><span class="line">    push    esi     ;use esi as j</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; while(1)</span><br><span class="line">.loop4:</span><br><span class="line">    mov     dword[judge], 1</span><br><span class="line">    mov     esi, dword[len2]</span><br><span class="line">    sub     esi, 1</span><br><span class="line"></span><br><span class="line">; judge wheather enough</span><br><span class="line">.loop5:</span><br><span class="line">    cmp     esi, 0</span><br><span class="line">    jl      .L4</span><br><span class="line">    mov     eax, dword[len2]</span><br><span class="line">    add     eax, ecx</span><br><span class="line">    cmp     dword[dividend+4*eax], 0</span><br><span class="line">    jg      .L4</span><br><span class="line">    xor     eax, eax</span><br><span class="line">    mov     eax, ecx</span><br><span class="line">    add     eax, esi</span><br><span class="line">    mov     ebx, dword[divisor+4*esi]</span><br><span class="line">    cmp     dword[dividend+4*eax], ebx    </span><br><span class="line">    jg      .L4</span><br><span class="line">    jl      .L3</span><br><span class="line">    dec     esi</span><br><span class="line">    jmp     .loop5</span><br><span class="line"></span><br><span class="line">.L3:</span><br><span class="line">    mov     dword[judge], 0</span><br><span class="line"></span><br><span class="line">.L4:</span><br><span class="line">    cmp     dword[judge], 0</span><br><span class="line">    je      .L6</span><br><span class="line">    mov     esi, 0</span><br><span class="line"></span><br><span class="line">; do sub</span><br><span class="line">.loop6:</span><br><span class="line">    cmp     esi, dword[len2]</span><br><span class="line">    je      .L5</span><br><span class="line">    mov     eax, ecx</span><br><span class="line">    add     eax, esi</span><br><span class="line">    mov     ebx, dword[divisor+4*esi]</span><br><span class="line">    sub     dword[dividend+4*eax], ebx</span><br><span class="line">    cmp     dword[dividend+4*eax], 0</span><br><span class="line">    jl     .L7</span><br><span class="line">    inc     esi</span><br><span class="line">    jmp     .loop6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.L5:</span><br><span class="line">    add     dword[quotient+4*ecx], 1</span><br><span class="line">    jmp     .loop4</span><br><span class="line"></span><br><span class="line">.L6:</span><br><span class="line">    dec     ecx</span><br><span class="line">    jmp     .loop3</span><br><span class="line"></span><br><span class="line">.L7:</span><br><span class="line">    add     dword[dividend+4*eax], 10</span><br><span class="line">    add     eax, 1</span><br><span class="line">    sub     dword[dividend+4*eax], 1</span><br><span class="line">    inc     esi</span><br><span class="line">    jmp     .loop6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">; output the two result</span><br><span class="line">output:</span><br><span class="line">    pop     esi</span><br><span class="line">    mov     dword[index], 0</span><br><span class="line">    mov     ecx, dword[len1]</span><br><span class="line">    sub     ecx, dword[len2]</span><br><span class="line"></span><br><span class="line">; the first number != 0 and get its index</span><br><span class="line">.loop7:</span><br><span class="line">    cmp     ecx, 0</span><br><span class="line">    jl      .L8</span><br><span class="line">    cmp     dword[quotient+4*ecx], 0</span><br><span class="line">    jne     .L8</span><br><span class="line">    dec     ecx</span><br><span class="line">    jmp     .loop7</span><br><span class="line"></span><br><span class="line">.L8:</span><br><span class="line">    mov     dword[index], ecx</span><br><span class="line">    mov     ecx, dword[index]</span><br><span class="line">    mov     eax, msg2</span><br><span class="line">    call    sprint</span><br><span class="line"></span><br><span class="line">.loop8:</span><br><span class="line">    cmp     ecx, 0</span><br><span class="line">    jl      .L9</span><br><span class="line">    mov     eax, dword[quotient+4*ecx]</span><br><span class="line">    and     eax, 0fh</span><br><span class="line">    add     eax, &#x27;0&#x27;</span><br><span class="line">    mov     byte[printout], al</span><br><span class="line">    push    ecx</span><br><span class="line">    mov     edx, 1</span><br><span class="line">    mov     ecx, printout</span><br><span class="line">    mov     ebx, 1</span><br><span class="line">    mov     eax, 4</span><br><span class="line">    int     80h</span><br><span class="line">    pop     ecx</span><br><span class="line">    dec     ecx</span><br><span class="line">    jmp     .loop8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.L9:</span><br><span class="line">    cmp     dword[index], -1</span><br><span class="line">    je      .small_solve0</span><br><span class="line">    call    sprintLn</span><br><span class="line">.L11:</span><br><span class="line">    mov     dword[index], 0</span><br><span class="line">    mov     ecx, dword[len2]</span><br><span class="line">    sub     ecx, 1</span><br><span class="line"></span><br><span class="line">.loop9:</span><br><span class="line">    cmp     ecx, 0</span><br><span class="line">    jl      .L10</span><br><span class="line">    cmp     dword[dividend+4*ecx], 0</span><br><span class="line">    jne     .L10</span><br><span class="line">    dec     ecx</span><br><span class="line">    jmp     .loop9</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.L10:</span><br><span class="line">    mov     dword[index], ecx</span><br><span class="line">    mov     ecx, dword[index]</span><br><span class="line">    mov     eax, msg3</span><br><span class="line">    call    sprint</span><br><span class="line"></span><br><span class="line">.loop10:</span><br><span class="line">    cmp     ecx, 0</span><br><span class="line">    jl      .end</span><br><span class="line">    mov     eax, dword[dividend+4*ecx]</span><br><span class="line">    and     eax, 0fh</span><br><span class="line">    add     eax, &#x27;0&#x27;</span><br><span class="line">    mov     byte[printout], al</span><br><span class="line">    push    ecx</span><br><span class="line">    mov     edx, 1</span><br><span class="line">    mov     ecx, printout</span><br><span class="line">    mov     ebx, 1</span><br><span class="line">    mov     eax, 4</span><br><span class="line">    int     80h</span><br><span class="line">    pop     ecx</span><br><span class="line">    dec     ecx</span><br><span class="line">    jmp     .loop10</span><br><span class="line"></span><br><span class="line">.end:</span><br><span class="line">    cmp     dword[index], -1</span><br><span class="line">    je      .small_solve</span><br><span class="line">    call    sprintLn</span><br><span class="line">    call    quit</span><br><span class="line"></span><br><span class="line">; quotient = 0</span><br><span class="line">.small_solve0:</span><br><span class="line">    mov     eax, ZERO</span><br><span class="line">    call    sprint</span><br><span class="line">    jmp     .L11</span><br><span class="line"></span><br><span class="line">; remainder = 0</span><br><span class="line">.small_solve:</span><br><span class="line">    mov     eax, ZERO</span><br><span class="line">    call    sprint</span><br><span class="line">    call    quit</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">; file name：function.asm</span><br><span class="line">; define some useful functions</span><br><span class="line">; 1. strlen(String msg):caluate the length of string</span><br><span class="line">; 2. sprint(String msg): print the string</span><br><span class="line">; 3. sprintLn():print \n</span><br><span class="line">; 4. quit(): exit the process</span><br><span class="line"></span><br><span class="line">;------------------------------------------</span><br><span class="line">; int strlen(String message)</span><br><span class="line">strlen:   ; 返回值保存在EAX中</span><br><span class="line">    push    ebx     ; 将EBX中的值保存于栈上，因为strlen会使用该寄存器</span><br><span class="line">    mov     ebx, eax     ; 将EAX中msg的地址移EBX（现在二者指向内存中同一处）</span><br><span class="line"> </span><br><span class="line">nextchar:</span><br><span class="line">    cmp     byte [eax], 0  ; 比较当前EAX地址处的内容是否为字符串结尾&#x27;\0&#x27;</span><br><span class="line">    jz      finished       ; ZF为1，跳出循环到finished</span><br><span class="line">    inc     eax            ; ZF不为1，EAX中的地址递增</span><br><span class="line">    jmp     nextchar       ; 继续循环</span><br><span class="line"> </span><br><span class="line">finished:</span><br><span class="line">    sub     eax, ebx       ; EBX - EAX，长度保存在EAX中</span><br><span class="line">    pop     ebx            ; 将栈上之前保存的值pop回EBX</span><br><span class="line">    ret                    ; 返回函数调用处</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">;------------------------------------------</span><br><span class="line">; void sprint(String message)</span><br><span class="line">; 打印字符串</span><br><span class="line">sprint:</span><br><span class="line">    push    edx; 将EDX中的值保存于栈上</span><br><span class="line">    push    ecx; 将ECX中的值保存于栈上</span><br><span class="line">    push    ebx; 将EBX中的值保存于栈上</span><br><span class="line">    push    eax; 将EAX中的值保存于栈上，即参数string</span><br><span class="line">    call    strlen; 计算EAX中字符串长度，保存在EAX中</span><br><span class="line"> </span><br><span class="line">    mov     edx, eax; 将长度移入到EDX</span><br><span class="line">    pop     eax; 恢复EAX值，即参数string</span><br><span class="line"> </span><br><span class="line">    mov     ecx, eax; 将待打印string移入ECX</span><br><span class="line">    mov     ebx, 1; 表示写入到标准输出STDOUT</span><br><span class="line">    mov     eax, 4; 调用SYS_WRITE（操作码是4）</span><br><span class="line">    int     80h</span><br><span class="line"> </span><br><span class="line">    pop     ebx; 恢复原来EBX中的值</span><br><span class="line">    pop     ecx; 恢复原来ECX中的值</span><br><span class="line">    pop     edx; 恢复原来EDX中的值</span><br><span class="line">    ret</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">;------------------------------------------</span><br><span class="line">; void sprintLn</span><br><span class="line">; 打印换行符</span><br><span class="line">sprintLn:</span><br><span class="line">    push    eax         ; 将EAX中的值保存于栈上</span><br><span class="line">    mov     eax, 0Ah    ; 将换行符0Ah移入EAX</span><br><span class="line">    push    eax         ; 将换行符0Ah入栈，这样可以获取其地址</span><br><span class="line">    mov     eax, esp    ; 将当前栈指针ESP中的地址（指向0Ah）移入EAX</span><br><span class="line">    call    sprint      ; 调用sprint打印换行符</span><br><span class="line">    pop     eax         ; 换行符退栈</span><br><span class="line">    pop     eax         ; 恢复调用该函数前EAX中的值</span><br><span class="line">    ret                 ; 返回调用处</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;------------------------------------------</span><br><span class="line">; void quit()</span><br><span class="line">; 退出程序</span><br><span class="line">quit:</span><br><span class="line">    mov     ebx, 0; exit时返回状态0 - &#x27;No Errors&#x27;</span><br><span class="line">    mov     eax, 1; 调用SYS_EXIT（OPCODE是1）</span><br><span class="line">    int     80h</span><br><span class="line">    ret</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑草记忆</title>
      <link href="/2023/04/15/%E9%BB%91%E8%8D%89%E8%AE%B0%E5%BF%86/"/>
      <url>/2023/04/15/%E9%BB%91%E8%8D%89%E8%AE%B0%E5%BF%86/</url>
      
        <content type="html"><![CDATA[<div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>黑草记忆</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-04-15</p></div></div><div class='timeline-item-content'><p>真是不像话啊，居然从上周躺到现在，除了上课甚至没怎么出过宿舍。整整一周的时间，看完了黑草的170话内容。这一星期的相遇，却是让我感触颇深的一周。我开始对眼前的生活感到困惑，我不明白是否将来真的会是我想要的未来，一个应该充满希望和欢乐的未来。或许是我真的孤独了，远离家人朋友，身边只是能说上几句话的人。没有人有义务一直倾听你的倾诉，你想分享的很多很多话，就算是家人朋友也不能。我开始迷茫，手足无措，该去学习了？没事的，反正期末前抓抓紧就行，毕竟从小到大我都是那种放纵自己的人，学习这玩意该学学该玩玩……话说这些真的是我想要的吗？未来好似充满着不确定，有些人忙着去干一件件事，到处折腾，这就是所谓的内卷吗？我对此，好像没有兴趣啊。</p><p>周五的那个傍晚，躺在床上的我点开了虽然一直想看却又没有付诸行动的动漫。一个没有魔法却想成为魔法帝的少年吗？老套的开局，不过我喜欢。渐渐地，我发现我喜欢上了里面的每一个角色，他们每个人都有些有肉，有自己的故事。黑色爆牛的伙伴，更准确来说是家人，真是令人羡慕呢。“永不放弃就是我的魔法”，我看着他们一次次被强大的对手打倒，却一次次不断超越自己的极限，有自身的成长，有伙伴的扶持，有梦想的支撑……这种一往无前的笨蛋果然才最为吸引我呢。一群看来不被社会所接受的“异类”，最垃圾的魔法骑士团，却在这里找到了归属。除了那极致的黑，极致的恶不容宽恕，我也能共情其中的大多数角色，果然我还是希望每个人能有一个好的结局。就算是日常生活的描写也能令人忍俊不禁，幽默诙谐，真美好呢。“就算穷酸也好，弃儿也罢，都是能成为魔法帝的”，阿斯塔特别就特别在他总能坚持自身的梦想，没有天赋，那就加倍努力，没有希望，就向那该死的命运说不。头脑里长满肌肉的热血笨蛋可不会管那么多。</p><p>说起来，我也该回到原本的生活中去了，即使现在还有困惑，还在路口徘徊，不过向前走总是好的，也许有一天我也会找到属于自己的黑色爆牛，有那样的团长和前辈，那样一群相互扶持向前的“对手”。</p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫 </tag>
            
            <tag> 少年记忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bochs安装</title>
      <link href="/2023/03/24/Bochs%E5%AE%89%E8%A3%85/"/>
      <url>/2023/03/24/Bochs%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Bochs安装"><a href="#Bochs安装" class="headerlink" title="Bochs安装"></a>Bochs安装</h1><p><strong>谨以此篇博客记录长达一个星期之久的bochs安装之旅</strong></p><p>实测Ubuntu18.04及Ubuntu20.04均可通过自带软件仓库顺利安装并使用，安装指令，远离折腾烦恼</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install bochs bochs-x</span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>选用系统：debian11<br>debian11自带软件仓库按理来说也是可以通过以上命令进行安装的，要是如此简单恐怕一分钟就可以完结收工了，可偏偏事与愿违。<br>助教进行实验讲解时就说了，Ubuntu22.04会出现问题，如<a href="https://stackoverflow.com/questions/73067357/bochs-can-not-load-bootloader-using-a-floppy-image">这个链接</a>所示，表明了其Ubuntu22.04安装软件仓库中自带的Bochs2.7所遭遇的问题，无法正常启动。</p><p>先前也没当回事，毕竟debian以稳定著称，想必包管理器中所提供的应该是较为稳定可以运行的版本。可等我敲完命令，竟也遭遇了相同的问题。Bochs无论输入多少次c,始终没有输出期许的结果，可以看到以下报错<br><img src="https://s2.loli.net/2023/03/23/SRc8Lj6CIPHXQN9.png" alt="problem1.png"><br><img src="https://s2.loli.net/2023/03/23/wt4l5oJkajfTOnc.png" alt="problem2.png"><br>真奇怪，明明Bochs的版本是2.6.11，看来不只是2.7版本存在问题，2.6.11同样存在问题</p><p><img src="https://s2.loli.net/2023/03/24/ad2EmbsJjGBYtR3.png" alt="problem4.png"></p><p>试了很多次，看来依靠本来的包管理器是不行了，只能尝试自己下载编译一份了。</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="官网下载2-7版本"><a href="#官网下载2-7版本" class="headerlink" title="官网下载2.7版本"></a>官网下载2.7版本</h3><p><a href="https://sourceforge.net/projects/bochs/files/bochs/2.7/bochs-2.7.tar.gz/download">https://sourceforge.net/projects/bochs/files/bochs/2.7/bochs-2.7.tar.gz/download</a></p><p>进入下载的目标目录，比如我这里就是“下载”目录，打开终端执行解压缩</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf bochs-2.7.tar.gz</span><br></pre></td></tr></table></figure><p>获得解压后的文件夹bochs-2.7</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xxx@debian:~/下载$ <span class="built_in">ls</span></span><br><span class="line">1-lexer-antlr.pdf        bochs-2.7</span><br><span class="line">2-lexer-re.pdf           bochs-2.7.tar.gz</span><br><span class="line">3-lexer-handwritten.pdf  code_1.76.2-1678817801_amd64.deb</span><br><span class="line">4-lexer-automata.pdf     google-chrome-stable_current_amd64.deb</span><br></pre></td></tr></table></figure><p>进入解压后文件夹</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> bochs-2.7</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/home/xxx/bochs --enable-debugger --enable-iodebug --enable-iodebug --enable-x86-debugger --with-x --with-x11</span><br><span class="line"><span class="comment"># xxx替换为自己的用户名即可</span></span><br></pre></td></tr></table></figure><p>原本看的教程是</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/home/xxx/bochs --enable-debugger --enable-disasm --enable-iodebug --enable-iodebug --enable-x86-debugger --with-x --with-x11</span><br></pre></td></tr></table></figure><p>但会报一个小的Warning</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING: unrecognized options: --enable-disasm</span><br></pre></td></tr></table></figure><p>使用以下命令查看可选项</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure -<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>会发现2.7版本为</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--enable-show-ips       show IPS in Bochs status bar / log file (yes)</span><br><span class="line">--enable-cpp            use .cpp as C++ suffix (no)</span><br><span class="line">--enable-debugger       compile in support for Bochs internal debugger (no)</span><br><span class="line">--enable-debugger-gui   compile in support for Bochs internal debugger GUI</span><br><span class="line">                        (yes, if debugger is on)</span><br></pre></td></tr></table></figure><p>2.6.11对应位置为</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--enable-show-ips       show IPS in Bochs status bar / log file (yes)</span><br><span class="line">--enable-cpp            use .cpp as C++ suffix (no)</span><br><span class="line">--enable-debugger       compile in support for Bochs internal debugger (no)</span><br><span class="line">--enable-disasm         compile in support for disassembler (no)</span><br><span class="line">--enable-debugger-gui   compile in support for Bochs internal debugger GUI</span><br><span class="line">                        (yes, if debugger is on)</span><br></pre></td></tr></table></figure><p>正好缺少–enable-disasm选项，也不知道什么情况，可能已经不是可选项了？还是写文档疏忽大意了？</p><p>确保你的操作系统已经安装有gcc,g++，查看方式</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gcc -v</span><br></pre></td></tr></table></figure><p>没有则使用如下命令进行安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install build-essential</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p>没有报错继续执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><p>当然你可能碰到许多奇奇怪怪的报错，我也一样，这里是我所参考的教程<br><a href="https://zhuanlan.zhihu.com/p/35437842">https://zhuanlan.zhihu.com/p/35437842</a> 很多可能的报错也都指出了。</p><p>要说这篇文章没被解决的问题，倒是有一个<br><img src="https://s2.loli.net/2023/03/24/S9cFeRqgGnvAxko.png" alt="problem5.png"></p><p>如上图所示，不过也找到了解决方法</p><p>额，想复现错误好像不行了，原本的解决方法是要更改某.cc文件的头文件的，好奇怪。而且重新看了参考的教程，其实该问题很有可能是上面某问题的一种表现形式。</p><p>至此安装就算完成了，可以查看一下文件存放的位置，如果都是按照我的步骤来的话，应该会看到用户目录下多出一个bochs目录</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xxx@debian:~/桌面$ <span class="built_in">cd</span></span><br><span class="line">xxx@debian:~$ <span class="built_in">ls</span></span><br><span class="line">公共  模板  视频  图片  文档  下载  音乐  桌面  bochs</span><br><span class="line">xxx@debian:~$ <span class="built_in">cd</span> bochs</span><br><span class="line">xxx@debian:~/bochs$ <span class="built_in">ls</span></span><br><span class="line">bin  share</span><br></pre></td></tr></table></figure><p>验证安装成功</p><p>随便打开一个终端，敲入</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/home/xxx/bochs/bin/bochs</span><br><span class="line"><span class="comment"># xxx处填用户名</span></span><br></pre></td></tr></table></figure><p>出现</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">========================================================================</span><br><span class="line">                        Bochs x86 Emulator 2.7</span><br><span class="line">              Built from SVN snapshot on August  1, 2021</span><br><span class="line">                Timestamp: Sun Aug  1 10:07:00 CEST 2021</span><br><span class="line">========================================================================</span><br></pre></td></tr></table></figure><p>至此安装成功</p><h2 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h2><p>每次都得敲一长串命令，显然费时费力，将其设置别名也可直接添加到环境变量中</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure><p>添加</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alias bochs=&#x27;/home/xxx/bochs/bin/bochs&#x27;</span><br><span class="line">alias bximage=&#x27;/home/xxx/bochs/bin/bximage&#x27;</span><br></pre></td></tr></table></figure><p>立即生效</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>测试</p><p>随便在某一位置打开终端，输入</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bochs</span><br></pre></td></tr></table></figure><p>出现</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">========================================================================</span><br><span class="line">                        Bochs x86 Emulator 2.7</span><br><span class="line">              Built from SVN snapshot on August  1, 2021</span><br><span class="line">                Timestamp: Sun Aug  1 10:07:00 CEST 2021</span><br><span class="line">========================================================================</span><br></pre></td></tr></table></figure><p>配置完成</p><h2 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h2><p>创建软盘</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xxx@debian:~/桌面/OS/lab1/t2$ bximage</span><br><span class="line">========================================================================</span><br><span class="line">                                bximage</span><br><span class="line">  Disk Image Creation / Conversion / Resize and Commit Tool <span class="keyword">for</span> Bochs</span><br><span class="line">         <span class="variable">$Id</span>: bximage.cc 14091 2021-01-30 17:37:42Z sshwarts $</span><br><span class="line">========================================================================</span><br><span class="line"></span><br><span class="line">1. Create new floppy or hard disk image</span><br><span class="line">2. Convert hard disk image to other format (mode)</span><br><span class="line">3. Resize hard disk image</span><br><span class="line">4. Commit <span class="string">&#x27;undoable&#x27;</span> redolog to base image</span><br><span class="line">5. Disk image info</span><br><span class="line"></span><br><span class="line">0. Quit</span><br><span class="line"></span><br><span class="line">Please choose one [0] 1</span><br><span class="line"></span><br><span class="line">Create image</span><br><span class="line"></span><br><span class="line">Do you want to create a floppy disk image or a hard disk image?</span><br><span class="line">Please <span class="built_in">type</span> hd or fd. [hd] fd</span><br><span class="line"></span><br><span class="line">Choose the size of floppy disk image to create.</span><br><span class="line">Please <span class="built_in">type</span> 160k, 180k, 320k, 360k, 720k, 1.2M, 1.44M, 1.68M, 1.72M, or 2.88M.</span><br><span class="line"> [1.44M] </span><br><span class="line"></span><br><span class="line">What should be the name of the image?</span><br><span class="line">[a.img] </span><br><span class="line"></span><br><span class="line">Creating floppy image <span class="string">&#x27;a.img&#x27;</span> with 2880 sectors</span><br><span class="line"></span><br><span class="line">The following line should appear <span class="keyword">in</span> your bochsrc:</span><br><span class="line">  floppya: image=<span class="string">&quot;a.img&quot;</span>, status=inserted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建boot.asm</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> boot.asm</span><br></pre></td></tr></table></figure><p>该文件中写入以下内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">org 07c00h</span><br><span class="line">mov ax, cs</span><br><span class="line">mov ds, ax</span><br><span class="line">mov es, ax</span><br><span class="line">call DispStr</span><br><span class="line">jmp $</span><br><span class="line">DispStr:</span><br><span class="line">mov ax, BootMessage</span><br><span class="line">mov bp, ax</span><br><span class="line">mov cx, 16</span><br><span class="line">mov ax, 01301h</span><br><span class="line">mov bx, 000ch</span><br><span class="line">mov dl, 0</span><br><span class="line">int 10h</span><br><span class="line">ret</span><br><span class="line">BootMessage:db &quot;Hello, OS World&quot;</span><br><span class="line">times510-($-$$) db 0</span><br><span class="line">dw 0xaa55</span><br></pre></td></tr></table></figure><p>终端执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nasm boot.asm -o boot.bin</span><br></pre></td></tr></table></figure><p>写入软盘</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xxx@debian:~/桌面/OS/lab1/t2$ <span class="built_in">dd</span> <span class="keyword">if</span>=boot.bin of=a.img bs=512 count=1 conv=notrunc</span><br><span class="line">记录了1+0 的读入</span><br><span class="line">记录了1+0 的写出</span><br><span class="line">512字节已复制，0.000373033 s，1.4 MB/s</span><br></pre></td></tr></table></figure><p>创建bochsrc</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> bochsrc</span><br></pre></td></tr></table></figure><p>该文件写入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">megs: 32</span><br><span class="line">display_library: x</span><br><span class="line">floppya: 1_44=a.img, status=inserted</span><br><span class="line">boot: floppy</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xxx@debian:~/桌面/OS/lab1/t2$ bochs -f bochsrc </span><br></pre></td></tr></table></figure><p>Please choose one: [6]<br>回车</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;bochs:1&gt; c</span><br><span class="line"><span class="comment"># 输入c回车</span></span><br></pre></td></tr></table></figure><p>成功<br><img src="https://s2.loli.net/2023/03/24/tarZcKEMXbT64iL.png" alt="success.png"></p><p>至此全部结束，我们已经成功在debian11上安装启动了Bochs</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库(上)</title>
      <link href="/2023/03/21/%E6%95%B0%E6%8D%AE%E5%BA%931/"/>
      <url>/2023/03/21/%E6%95%B0%E6%8D%AE%E5%BA%931/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL基本语法"><a href="#MySQL基本语法" class="headerlink" title="MySQL基本语法"></a>MySQL基本语法</h1><div class="note info simple"><p>操作系统：Debian11<br>数据库工具：MariaDB<br>Ver 9.1 Distrib 10.5.18-MariaDB, for debian-linux-gnu on x86_64<br>参考教程：菜鸟教程+数据管理课程教学内容</p></div><hr><p><strong>每条指令均以  ，  作为结束标志</strong></p><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xxx@debian:~/桌面$ sudo mysql -u root -p</span><br><span class="line">[sudo] xxx 的密码：</span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure><p>成功登陆出现以下提示:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 31</span><br><span class="line">Server version: 10.5.18-MariaDB-0+deb11u1 Debian 11</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br></pre></td></tr></table></figure><p><strong>若是出现以下报错</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ERROR 2002 (HY000): Can&#x27;t connect to local MySQL server through socket &#x27;/run/mysqld/mysqld.sock&#x27; (2)</span><br></pre></td></tr></table></figure><p>考虑是不是数据库未开启，查看状态</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl status mariadb</span></span><br></pre></td></tr></table></figure><p>若是发现</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Status: &quot;MariaDB server is down&quot;</span><br></pre></td></tr></table></figure><p>表明数据库服务端已关闭，使用以下指令开启</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start mariadb</span><br></pre></td></tr></table></figure><h2 id="数据库创建"><a href="#数据库创建" class="headerlink" title="数据库创建"></a>数据库创建</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE xxx;</span><br></pre></td></tr></table></figure><p>实例：创建employees数据库</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE employees;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.000</span> sec)</span><br></pre></td></tr></table></figure><p>看看现在数据库有无变化</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> DATABASES;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> employees          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p>成功创建employees数据库</p><h3 id="反复添加会如何"><a href="#反复添加会如何" class="headerlink" title="反复添加会如何"></a>反复添加会如何</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE employees;</span><br><span class="line">ERROR <span class="number">1007</span> (HY000): Can<span class="string">&#x27;t create database &#x27;</span>employees<span class="string">&#x27;; database exists</span></span><br></pre></td></tr></table></figure><p>ERROR,该数据库已存在</p><h2 id="数据库删除"><a href="#数据库删除" class="headerlink" title="数据库删除"></a>数据库删除</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE xxx;</span><br></pre></td></tr></table></figure><p>实例：删除employees数据库</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">DROP</span> DATABASE employees;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> DATABASES;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数据库选择"><a href="#数据库选择" class="headerlink" title="数据库选择"></a>数据库选择</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use xxx;</span><br></pre></td></tr></table></figure><p>实例：选择employees数据库</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE employees;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> use employees;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">MariaDB [employees]<span class="operator">&gt;</span> </span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>不得不讲这就比MySQL优雅挺多的，直接显示出所操作的数据库</span><br></pre></td></tr></table></figure><h2 id="数据表创建"><a href="#数据表创建" class="headerlink" title="数据表创建"></a>数据表创建</h2><p>创建的数据表有三要素：表名，表字段名，定义每个表的字段</p><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name (column_name column_type);</span><br></pre></td></tr></table></figure><p>实例：在RUNOOB数据库中创建runoob_tbl数据表</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE RUNOOB;</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.022</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> use RUNOOB;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `runoob_tbl`(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>    `runoob_id` <span class="type">INT</span> UNSIGNED AUTO_INCREMENT,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>    `runoob_title` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>    `runoob_author` <span class="type">VARCHAR</span>(<span class="number">40</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>    `submission_date` <span class="type">DATE</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span>    <span class="keyword">PRIMARY</span> KEY ( `runoob_id` )</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> )ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.019</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_RUNOOB <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_tbl       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><h2 id="数据表删除"><a href="#数据表删除" class="headerlink" title="数据表删除"></a>数据表删除</h2><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> table_name ;</span><br></pre></td></tr></table></figure><p>实例：在RUNOOB数据库中删除runoob_tbl数据表</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">table</span> runoob_tbl;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.011</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">show</span> tables;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name ( field1, field2,...fieldN )</span><br><span class="line">                       <span class="keyword">VALUES</span></span><br><span class="line">                       ( value1, value2,...valueN );</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> runoob_tbl</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (runoob_title, runoob_author, submission_date)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (&quot;JAVA&quot;, &quot;RUNOOB&quot;, <span class="string">&#x27;2023-03-26&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="读取数据表"><a href="#读取数据表" class="headerlink" title="读取数据表"></a>读取数据表</h2><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name,column_name</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line">[<span class="keyword">WHERE</span> Clause]</span><br><span class="line">[LIMIT N][ <span class="keyword">OFFSET</span> M]</span><br></pre></td></tr></table></figure><p>特别的：可以使用星号（*）来代替其他字段，SELECT语句会返回表的所有字段数据</p><p>实例：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> 学习 PHP     <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-25</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> JAVA         <span class="operator">|</span> RUNOOB        <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-26</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">select</span> runoob_id, runoob_title <span class="keyword">from</span> runoob_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> 学习 PHP     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> JAVA         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+</span></span><br></pre></td></tr></table></figure><h2 id="WHERE子句"><a href="#WHERE子句" class="headerlink" title="WHERE子句"></a>WHERE子句</h2><p>如需有条件地从表中选取数据，可将 WHERE 子句添加到 SELECT 语句中。</p><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> field1, field2,...fieldN <span class="keyword">FROM</span> table_name1, table_name2...</span><br><span class="line">[<span class="keyword">WHERE</span> condition1 [<span class="keyword">AND</span> [<span class="keyword">OR</span>]] condition2.....</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> submission_date <span class="keyword">from</span> runoob_tbl <span class="keyword">WHERE</span> runoob_id <span class="operator">&lt;=</span> <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-25</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">WHERE</span> runoob_id <span class="operator">&lt;=</span> <span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> 学习 PHP     <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-25</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br></pre></td></tr></table></figure><h3 id="区分大小写"><a href="#区分大小写" class="headerlink" title="区分大小写"></a>区分大小写</h3><p>插入一行小写的数据与原先数据进行对比</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> runoob_tbl</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (runoob_title, runoob_author, submission_date)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (&quot;java&quot;, &quot;runoob&quot;, <span class="string">&#x27;2023-04-19&#x27;</span>);</span><br></pre></td></tr></table></figure><p>查看一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]&gt; SELECT * from runoob_tbl;</span><br><span class="line">+-----------+--------------+---------------+-----------------+</span><br><span class="line">| runoob_id | runoob_title | runoob_author | submission_date |</span><br><span class="line">+-----------+--------------+---------------+-----------------+</span><br><span class="line">|         1 | 学习 PHP     | 菜鸟教程      | 2023-03-25      |</span><br><span class="line">|         2 | JAVA         | RUNOOB        | 2023-03-26      |</span><br><span class="line">|         3 | java         | runoob        | 2023-04-19      |</span><br><span class="line">+-----------+--------------+---------------+-----------------+</span><br></pre></td></tr></table></figure><p>使用where语句选出其中title为java的</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">WHERE</span> runoob_title<span class="operator">=</span>&quot;java&quot;;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> JAVA         <span class="operator">|</span> RUNOOB        <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-26</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">3</span> <span class="operator">|</span> java         <span class="operator">|</span> runoob        <span class="operator">|</span> <span class="number">2023</span><span class="number">-04</span><span class="number">-19</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br></pre></td></tr></table></figure><p>发现大小写均被选出</p><p><strong>MySQL 的 WHERE 子句的字符串比较是不区分大小写的,可以使用 BINARY 关键字来设定 WHERE 子句的字符串比较是区分大小写的。</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">WHERE</span> <span class="type">BINARY</span> runoob_title<span class="operator">=</span>&quot;java&quot;;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">3</span> <span class="operator">|</span> java         <span class="operator">|</span> runoob        <span class="operator">|</span> <span class="number">2023</span><span class="number">-04</span><span class="number">-19</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br></pre></td></tr></table></figure><h2 id="UPDATE更新"><a href="#UPDATE更新" class="headerlink" title="UPDATE更新"></a>UPDATE更新</h2><p>如果我们需要修改或更新 MySQL 中的数据，我们可以使用 SQL UPDATE 命令来操作。</p><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> table_name <span class="keyword">SET</span> field1<span class="operator">=</span><span class="keyword">new</span><span class="operator">-</span>value1, field2<span class="operator">=</span><span class="keyword">new</span><span class="operator">-</span>value2</span><br><span class="line">[<span class="keyword">WHERE</span> Clause]</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">UPDATE</span> runoob_tbl <span class="keyword">SET</span> runoob_title<span class="operator">=</span><span class="string">&#x27;python&#x27;</span> <span class="keyword">WHERE</span> runoob_id<span class="operator">=</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>update后结果</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> 学习 PHP     <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-25</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> JAVA         <span class="operator">|</span> RUNOOB        <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-26</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">3</span> <span class="operator">|</span> python       <span class="operator">|</span> runoob        <span class="operator">|</span> <span class="number">2023</span><span class="number">-04</span><span class="number">-19</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br></pre></td></tr></table></figure><p>实例2：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">UPDATE</span> runoob_tbl <span class="keyword">SET</span> runoob_title<span class="operator">=</span><span class="string">&#x27;python&#x27;</span> <span class="keyword">WHERE</span> runoob_id<span class="operator">&gt;=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>update后</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> python       <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-25</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> python       <span class="operator">|</span> RUNOOB        <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-26</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">3</span> <span class="operator">|</span> python       <span class="operator">|</span> runoob        <span class="operator">|</span> <span class="number">2023</span><span class="number">-04</span><span class="number">-19</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br></pre></td></tr></table></figure><h2 id="DELETE语句"><a href="#DELETE语句" class="headerlink" title="DELETE语句"></a>DELETE语句</h2><p>你可以使用 SQL 的 DELETE FROM 命令来删除 MySQL 数据表中的记录。</p><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> table_name [<span class="keyword">WHERE</span> Clause]</span><br></pre></td></tr></table></figure><p><strong>如果没有指定 WHERE 子句，MySQL 表中的所有记录将被删除</strong></p><p>实例：</p><p>删除runoob_tbl第三条记录</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">DELETE</span> <span class="keyword">FROM</span> runoob_tbl <span class="keyword">WHERE</span> runoob_id<span class="operator">=</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>查看删除后结果</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> python       <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-25</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> python       <span class="operator">|</span> RUNOOB        <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-26</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br></pre></td></tr></table></figure><h2 id="LIKE子句"><a href="#LIKE子句" class="headerlink" title="LIKE子句"></a>LIKE子句</h2><p>类似于正则表达式对数据进行筛选</p><p>SQL LIKE 子句中使用百分号 %字符来表示任意字符，类似于UNIX或正则表达式中的星号 *。</p><p>如果没有使用百分号 %, LIKE 子句与等号 &#x3D; 的效果是一样的。</p><p>通用语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> field1, field2,...fieldN </span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> field1 <span class="keyword">LIKE</span> condition1 [<span class="keyword">AND</span> [<span class="keyword">OR</span>]] filed2 <span class="operator">=</span> <span class="string">&#x27;somevalue&#x27;</span></span><br></pre></td></tr></table></figure><p>实例：</p><p>筛选出上传时间为三月的数据</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">WHERE</span> submission_date <span class="keyword">LIKE</span> <span class="string">&#x27;%03%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span> runoob_id <span class="operator">|</span> runoob_title <span class="operator">|</span> runoob_author <span class="operator">|</span> submission_date <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span> python       <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-25</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>         <span class="number">2</span> <span class="operator">|</span> python       <span class="operator">|</span> RUNOOB        <span class="operator">|</span> <span class="number">2023</span><span class="number">-03</span><span class="number">-26</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+--------------+---------------+-----------------+</span></span><br></pre></td></tr></table></figure><p>注意要筛选部分的组成结构，如：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">WHERE</span> submission_date <span class="keyword">LIKE</span> <span class="string">&#x27;%03&#x27;</span>;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><h2 id="UNION"><a href="#UNION" class="headerlink" title="UNION"></a>UNION</h2><p>MySQL UNION 操作符用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中。多个 SELECT 语句会删除重复的数据。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> expression1, expression2, ... expression_n</span><br><span class="line"><span class="keyword">FROM</span> tables</span><br><span class="line">[<span class="keyword">WHERE</span> conditions]</span><br><span class="line"><span class="keyword">UNION</span> [<span class="keyword">ALL</span> <span class="operator">|</span> <span class="keyword">DISTINCT</span>]</span><br><span class="line"><span class="keyword">SELECT</span> expression1, expression2, ... expression_n</span><br><span class="line"><span class="keyword">FROM</span> tables</span><br><span class="line">[<span class="keyword">WHERE</span> conditions];</span><br></pre></td></tr></table></figure><p>DISTINCT: 可选，删除结果集中重复的数据。默认情况下 UNION 操作符已经删除了重复数据，所以 DISTINCT 修饰符对结果没啥影响。</p><p>ALL: 可选，返回所有结果集，包含重复数据。</p><p>实例：</p><p>先创建两张tables</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `Websites`(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `id` <span class="type">INT</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `name` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `url` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `alexa` <span class="type">INT</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `country` <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> )ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.011</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `apps`(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `id` <span class="type">INT</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `app_name` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `url` <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> `country` <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> )ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.010</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SHOW</span> TABLES;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_RUNOOB <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Websites         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> apps             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> runoob_tbl       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p>为表格填充数据</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> Websites</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (id, name, url, alexa, country)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">1</span>, <span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;www.google.com&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;USA&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> Websites</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (id, name, url, alexa, country)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">2</span>, <span class="string">&#x27;淘宝&#x27;</span>, <span class="string">&#x27;www.taobao.com&#x27;</span>, <span class="number">13</span>, <span class="string">&#x27;CN&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> Websites</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (id, name, url, alexa, country)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">3</span>, <span class="string">&#x27;菜鸟教程&#x27;</span>, <span class="string">&#x27;www.runoob.com&#x27;</span>, <span class="number">4689</span>, <span class="string">&#x27;CN&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.004</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> Websites</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (id, name, url, alexa, country)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">4</span>, <span class="string">&#x27;微博&#x27;</span>, <span class="string">&#x27;weibo.com&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;CN&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.004</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> Websites</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (id, name, url, alexa, country)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">5</span>, <span class="string">&#x27;Facebook&#x27;</span>, <span class="string">&#x27;www.facebook.com&#x27;</span>, <span class="number">3</span>, <span class="string">&#x27;USA&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> Websites</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (id, name, url, alexa, country)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">7</span>, <span class="string">&#x27;stackoverflow&#x27;</span>, <span class="string">&#x27;stackoverflow.com&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;IND&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Websites;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------------+-------------------+-------+---------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> name          <span class="operator">|</span> url               <span class="operator">|</span> alexa <span class="operator">|</span> country <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------------+-------------------+-------+---------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Google        <span class="operator">|</span> www.google.com    <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span> USA     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> 淘宝          <span class="operator">|</span> www.taobao.com    <span class="operator">|</span>    <span class="number">13</span> <span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> 菜鸟教程      <span class="operator">|</span> www.runoob.com    <span class="operator">|</span>  <span class="number">4689</span> <span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> 微博          <span class="operator">|</span> weibo.com         <span class="operator">|</span>    <span class="number">20</span> <span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> Facebook      <span class="operator">|</span> www.facebook.com  <span class="operator">|</span>     <span class="number">3</span> <span class="operator">|</span> USA     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> stackoverflow <span class="operator">|</span> stackoverflow.com <span class="operator">|</span>     <span class="number">0</span> <span class="operator">|</span> IND     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+---------------+-------------------+-------+---------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> apps</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (id, app_name, url, country)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">1</span>, <span class="string">&#x27;QQ APP&#x27;</span>, <span class="string">&#x27;im.qq.com&#x27;</span>, <span class="string">&#x27;CN&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> apps</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (id, app_name, url, country)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">2</span>, <span class="string">&#x27;微博 APP&#x27;</span>, <span class="string">&#x27;weibo.com&#x27;</span>, <span class="string">&#x27;CN&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> apps</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (id, app_name, url, country)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">3</span>, <span class="string">&#x27;淘宝 APP&#x27;</span>, <span class="string">&#x27;www.taobao.com&#x27;</span>, <span class="string">&#x27;CN&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> apps;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+----------------+---------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> app_name   <span class="operator">|</span> url            <span class="operator">|</span> country <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+----------------+---------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> QQ APP     <span class="operator">|</span> im.qq.com      <span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> 微博 APP   <span class="operator">|</span> weibo.com      <span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> 淘宝 APP   <span class="operator">|</span> www.taobao.com <span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+----------------+---------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p><strong>问：INSERT语句一次只能插入一条吗？我记得应该有插入大量数据的方法吧</strong></p><p>哦，是我犯蠢了，每条语句后添加逗号即可，尝试一下</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">DELETE</span> <span class="keyword">FROM</span> apps;</span><br><span class="line">Query OK, <span class="number">3</span> <span class="keyword">rows</span> affected (<span class="number">0.004</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> apps;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">INSERT</span> <span class="keyword">INTO</span> apps</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (id, app_name, url, country)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">VALUES</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">1</span>, <span class="string">&#x27;QQ APP&#x27;</span>, <span class="string">&#x27;im.qq.com&#x27;</span>, <span class="string">&#x27;CN&#x27;</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">2</span>, <span class="string">&#x27;微博 APP&#x27;</span>, <span class="string">&#x27;weibo.com&#x27;</span>, <span class="string">&#x27;CN&#x27;</span>),</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> (<span class="number">3</span>, <span class="string">&#x27;淘宝 APP&#x27;</span>, <span class="string">&#x27;www.taobao.com&#x27;</span>, <span class="string">&#x27;CN&#x27;</span>);</span><br><span class="line">Query OK, <span class="number">3</span> <span class="keyword">rows</span> affected (<span class="number">0.003</span> sec)</span><br><span class="line">Records: <span class="number">3</span>  Duplicates: <span class="number">0</span>  Warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> apps;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+----------------+---------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> app_name   <span class="operator">|</span> url            <span class="operator">|</span> country <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+----------------+---------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> QQ APP     <span class="operator">|</span> im.qq.com      <span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> 微博 APP   <span class="operator">|</span> weibo.com      <span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> 淘宝 APP   <span class="operator">|</span> www.taobao.com <span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+----------------+---------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p>试一试union吧</p><p>从 “Websites” 和 “apps” 表中选取所有不同的country（只有不同的值）：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> country <span class="keyword">FROM</span> Websites</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">UNION</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> country <span class="keyword">FROM</span> apps</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> country;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="operator">|</span> country <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> IND     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> USA     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p>使用 UNION ALL 从 “Websites” 和 “apps” 表中选取所有的country（有重复的值）：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MariaDB [RUNOOB]<span class="operator">&gt;</span> <span class="keyword">SELECT</span> country <span class="keyword">FROM</span> Websites</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">SELECT</span> country <span class="keyword">FROM</span> apps</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> country;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="operator">|</span> country <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> CN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> IND     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> USA     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> USA     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p><strong>ORDER BY干嘛用的？去掉好像也没影响？</strong></p><p>貌似是排序语句，接下来再说吧。</p><p>markdown太长了也比较卡了，分上中下记录吧，此处暂时作为上篇的完结。</p>]]></content>
      
      
      <categories>
          
          <category> 数据管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
            <tag> MariaDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/2023/03/16/Git/"/>
      <url>/2023/03/16/Git/</url>
      
        <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><div class="note info simple"><p>本部分参考CodeSheep：<a href="https://mp.weixin.qq.com/s/bUYz9JwqAYH_Fn6nHPSmTg">为什么 Git把 SVN拍在了沙滩上！</a></p></div><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 在当前目录新建一个Git代码库</span><br><span class="line">$ git init</span><br><span class="line"></span><br><span class="line"># 下载一个项目和它的整个代码历史 [Git only]</span><br><span class="line">$ git clone </span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 列举出所有配置</span><br><span class="line">$ git config -l</span><br><span class="line"></span><br><span class="line"># 为命令配置别名</span><br><span class="line">$ git config --global alias.co checkout</span><br><span class="line">$ git config --global alias.ci commit</span><br><span class="line">$ git config --global alias.st status</span><br><span class="line">$ git config --global alias.br branch</span><br><span class="line"></span><br><span class="line"># 设置提交代码时的用户信息</span><br><span class="line">$ git config [--global] user.name &quot;[name]&quot;</span><br><span class="line">$ git config [--global] user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure><h3 id="增删"><a href="#增删" class="headerlink" title="增删"></a>增删</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 添加当前目录的所有文件到暂存区</span><br><span class="line">$ git add .</span><br><span class="line"></span><br><span class="line"># 添加指定文件到暂存区</span><br><span class="line">$ git add &lt;file1&gt; &lt;file2&gt; ...</span><br><span class="line"></span><br><span class="line"># 添加指定目录到暂存区，包括其子目录</span><br><span class="line">$ git add &lt;dir&gt;</span><br><span class="line"></span><br><span class="line"># 删除工作区文件，并且将这次删除放入暂存区</span><br><span class="line">$ git rm [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"># 停止追踪指定文件，但该文件会保留在工作区</span><br><span class="line">$ git rm --cached [file]</span><br><span class="line"></span><br><span class="line"># 改名文件，并且将这个改名放入暂存区</span><br><span class="line">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure><p>注：把文件名 file1 添加到 .gitignore 文件里，Git 会停止跟踪 file1 的状态。<br><img src="https://s2.loli.net/2023/03/16/ehixqcgYkLrZV9w.png" alt="git1.png"></p><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 列出所有本地分支</span><br><span class="line">$ git branch</span><br><span class="line"></span><br><span class="line"># 列出所有本地分支和远程分支</span><br><span class="line">$ git branch -a</span><br><span class="line"></span><br><span class="line"># 新建一个分支，但依然停留在当前分支</span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"></span><br><span class="line"># 新建一个分支，并切换到该分支</span><br><span class="line">$ git checkout -b [new_branch] [remote-branch]</span><br><span class="line"></span><br><span class="line"># 切换到指定分支，并更新工作区</span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line"></span><br><span class="line"># 合并指定分支到当前分支</span><br><span class="line">$ git merge [branch]</span><br><span class="line"></span><br><span class="line"># 选择一个 commit，合并进当前分支</span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"></span><br><span class="line"># 删除本地分支，-D 参数强制删除分支</span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"></span><br><span class="line"># 删除远程分支</span><br><span class="line">$ git push [remote] :[remote-branch]</span><br></pre></td></tr></table></figure><h3 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 提交暂存区到仓库区</span><br><span class="line">$ git commit -m [message]</span><br><span class="line"></span><br><span class="line"># 提交工作区与暂存区的变化直接到仓库区</span><br><span class="line">$ git commit -a</span><br><span class="line"></span><br><span class="line"># 提交时显示所有 diff 信息</span><br><span class="line">$ git commit -v</span><br><span class="line"></span><br><span class="line"># 提交暂存区修改到仓库区，合并到上次修改，并修改上次的提交信息</span><br><span class="line">$ git commit --amend -m [message]</span><br><span class="line"></span><br><span class="line"># 上传本地指定分支到远程仓库</span><br><span class="line">$ git push [remote] [remote-branch]</span><br></pre></td></tr></table></figure><h3 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 下载远程仓库的所有变动 (Git only)</span><br><span class="line">$ git fetch [remote]</span><br><span class="line"></span><br><span class="line"># 显示所有远程仓库 (Git only)</span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line"># 显示某个远程仓库的信息 (Git only)</span><br><span class="line">$ git remote show [remote]</span><br><span class="line"></span><br><span class="line"># 增加一个新的远程仓库，并命名 (Git only)</span><br><span class="line">$ git remote add [remote-name] [url]</span><br><span class="line"></span><br><span class="line"># 取回远程仓库的变化，并与本地分支合并，(Git only)</span><br><span class="line">$ git pull [remote] [branch]</span><br><span class="line"></span><br><span class="line"># 取回远程仓库的变化，并与本地分支变基合并，(Git only)</span><br><span class="line">$ git pull --rebase [remote] [branch]</span><br></pre></td></tr></table></figure><h3 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 恢复暂存区的指定文件到工作区</span><br><span class="line">$ git checkout [file]</span><br><span class="line"></span><br><span class="line"># 恢复暂存区当前目录的所有文件到工作区</span><br><span class="line">$ git checkout .</span><br><span class="line"></span><br><span class="line"># 恢复工作区到指定 commit</span><br><span class="line">$ git checkout [commit]</span><br><span class="line"></span><br><span class="line"># 重置暂存区的指定文件，与上一次 commit 保持一致，但工作区不变</span><br><span class="line">$ git reset [file]</span><br><span class="line"></span><br><span class="line"># 重置暂存区与工作区，与上一次 commit 保持一致</span><br><span class="line">$ git reset --hard</span><br><span class="line"></span><br><span class="line"># 重置当前分支的指针为指定 commit，同时重置暂存区，但工作区不变</span><br><span class="line">$ git reset [commit]</span><br><span class="line"></span><br><span class="line"># 重置当前分支的HEAD为指定 commit，同时重置暂存区和工作区，与指定 commit 一致</span><br><span class="line">$ git reset --hard [commit]</span><br><span class="line"></span><br><span class="line"># 新建一个 commit，用于撤销指定 commit</span><br><span class="line">$ git revert [commit]</span><br><span class="line"></span><br><span class="line"># 将未提交的变化放在储藏区</span><br><span class="line">$ git stash</span><br><span class="line"></span><br><span class="line"># 将储藏区的内容恢复到当前工作区</span><br><span class="line">$ git stash pop</span><br></pre></td></tr></table></figure><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看工作区文件修改状态</span><br><span class="line">$ git status</span><br><span class="line"></span><br><span class="line"># 查看工作区文件修改具体内容</span><br><span class="line">$ git diff [file]</span><br><span class="line"></span><br><span class="line"># 查看暂存区文件修改内容</span><br><span class="line">$ git diff --cached [file]</span><br><span class="line"> </span><br><span class="line"># 查看版本库修改记录</span><br><span class="line">$ git log</span><br><span class="line"></span><br><span class="line"># 查看某人提交记录</span><br><span class="line">$ git log --author=someone</span><br><span class="line"></span><br><span class="line"># 查看某个文件的历史具体修改内容</span><br><span class="line">$ git log -p [file]</span><br><span class="line">        </span><br><span class="line"># 查看某次提交具体修改内容</span><br><span class="line">$ git show [commit]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/2023/03/12/Linux/"/>
      <url>/2023/03/12/Linux/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux入门"><a href="#Linux入门" class="headerlink" title="Linux入门"></a>Linux入门</h1><h2 id="Linux目录结构"><a href="#Linux目录结构" class="headerlink" title="Linux目录结构"></a>Linux目录结构</h2><p><strong>在Linux的世界中，一切皆文件</strong></p><p>所有目录均在根目录下，每个目录中存放对应文件</p><p>硬件也会映射为文件形式</p><h4 id="x2F-bin"><a href="#x2F-bin" class="headerlink" title="&#x2F;bin"></a>&#x2F;bin</h4><p>存放最经常使用命令</p><h4 id="x2F-home"><a href="#x2F-home" class="headerlink" title="&#x2F;home"></a>&#x2F;home</h4><p>存放普通用户主目录，每个Linux用户有一个自己的目录</p><h4 id="x2F-root"><a href="#x2F-root" class="headerlink" title="&#x2F;root"></a>&#x2F;root</h4><p>该目录为系统管理员，超级权限者</p><h4 id="x2F-lib"><a href="#x2F-lib" class="headerlink" title="&#x2F;lib"></a>&#x2F;lib</h4><p>动态链接共享库，几乎所有程序都需使用</p><h4 id="x2F-etc"><a href="#x2F-etc" class="headerlink" title="&#x2F;etc"></a>&#x2F;etc</h4><p>所有系统管理所需要的配置文件和子目录</p><h4 id="x2F-usr"><a href="#x2F-usr" class="headerlink" title="&#x2F;usr"></a>&#x2F;usr</h4><p>许多程序和文件都放在该目录下，类似于Windows的Program files目录</p><h4 id="x2F-boot"><a href="#x2F-boot" class="headerlink" title="&#x2F;boot"></a>&#x2F;boot</h4><p>启动Linux时所需核心文件</p><h4 id="x2F-proc"><a href="#x2F-proc" class="headerlink" title="&#x2F;proc"></a>&#x2F;proc</h4><p>系统内存映射</p><h4 id="x2F-srv"><a href="#x2F-srv" class="headerlink" title="&#x2F;srv"></a>&#x2F;srv</h4><h4 id="x2F-sys"><a href="#x2F-sys" class="headerlink" title="&#x2F;sys"></a>&#x2F;sys</h4><h4 id="x2F-tmo"><a href="#x2F-tmo" class="headerlink" title="&#x2F;tmo"></a>&#x2F;tmo</h4><p>临时文件</p><h4 id="x2F-dev"><a href="#x2F-dev" class="headerlink" title="&#x2F;dev"></a>&#x2F;dev</h4><p>类似于Windows设备管理器，将所有硬件映射为文件</p><h4 id="x2F-media"><a href="#x2F-media" class="headerlink" title="&#x2F;media"></a>&#x2F;media</h4><p>自动识别一些设备，如U盘、光驱等，识别后，Linux会将这些设备挂载到该目录（其实挺奇怪的，硬盘和U盘不都属于外设吗，怎么还区别对待？感觉有些问题）</p><h4 id="x2F-mnt"><a href="#x2F-mnt" class="headerlink" title="&#x2F;mnt"></a>&#x2F;mnt</h4><p>用以临时挂载别的文件系统</p><h4 id="x2F-opt"><a href="#x2F-opt" class="headerlink" title="&#x2F;opt"></a>&#x2F;opt</h4><p>安装软件所存放的目录（与usr区别？）安装包</p><h4 id="x2F-usr-x2F-local"><a href="#x2F-usr-x2F-local" class="headerlink" title="&#x2F;usr&#x2F;local"></a>&#x2F;usr&#x2F;local</h4><p>软件存放目录</p><h4 id="x2F-var"><a href="#x2F-var" class="headerlink" title="&#x2F;var"></a>&#x2F;var</h4><p>经常修改内容，包括各种日志文件</p><h4 id="x2F-selinux"><a href="#x2F-selinux" class="headerlink" title="&#x2F;selinux"></a>&#x2F;selinux</h4><p>安全子系统</p><h2 id="远程控制"><a href="#远程控制" class="headerlink" title="远程控制"></a>远程控制</h2><p>Linux公网</p><p>远程登陆、文件传输</p><p>学习阶段使用Xshell 7以及Xftp 7</p><p>官网为<a href="https://www.xshell.com/zh/free-for-home-school/">https://www.xshell.com/zh/free-for-home-school/</a>，不要找错了哦（差点踩坑被骗）</p><p>成功使用Xshell连接到Pine A64卡片电脑，实现远端控制</p><p><img src="https://s2.loli.net/2023/03/12/RX6YfLy9MC15wIv.png" alt="linux01.png"></p><p>实现过程：来电自启Pine A64，连接网线，进入路由器管理界面，找到已连接设备IP地址，查询Pine A64地</p><p>址，启动Xshell，输入对应IP地址，依次输入用户名及密码，远端登录成功！</p><h2 id="Vi及Vim的使用"><a href="#Vi及Vim的使用" class="headerlink" title="Vi及Vim的使用"></a>Vi及Vim的使用</h2><p>vim具有程序编辑能力</p><h3 id="三种模式"><a href="#三种模式" class="headerlink" title="三种模式"></a>三种模式</h3><h4 id="正常模式"><a href="#正常模式" class="headerlink" title="正常模式"></a>正常模式</h4><p>默认模式，可移动光标，使用删除、复制、粘贴</p><h4 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h4><p>按下i、I、o、O等字母进入编辑模式</p><h4 id="命令行模式"><a href="#命令行模式" class="headerlink" title="命令行模式"></a>命令行模式</h4><p>可以使用相关指令，完成读取、存盘、替换、离开等操作</p><h5 id="例：使用vim编写hello-c"><a href="#例：使用vim编写hello-c" class="headerlink" title="例：使用vim编写hello.c"></a>例：使用vim编写hello.c</h5><p>查看编辑器</p><p><img src="https://s2.loli.net/2023/03/12/ZADdpt6sJxEVb7o.png" alt="linux03.png"><br>armbian自带gcc和g++，<del>没有python和Java，</del>是有python3的，省事直接用gcc，编写hello.c</p><p>执行</p><p><img src="https://s2.loli.net/2023/03/12/iuFNjO5qgQob6IH.png" alt="linux02.png"><br>输出hello world，文件已生成</p><h4 id="模式切换"><a href="#模式切换" class="headerlink" title="模式切换"></a>模式切换</h4><p><img src="https://s2.loli.net/2023/03/12/2oqrJjKHZfYkW9i.png" alt="linux04.png"><br>命令模式下：</p><p>:wq——保存并退出<br>:q!——强制退出不保存<br>:set nu——设置行号<br>:set nonu——取消行号设置</p><p>一般模式下：</p><p>yy:拷贝当前行<br>4yy:拷贝当前行向下4行<br>p:粘贴<br>dd:删除当前行<br>4dd:删除当前行向下4行<br>G：定位文档末行<br>gg:定位文档首行<br>u:撤销，类似于Windows下的CTRL+Z</p><p><code>还有许多其他快捷方式</code></p><h2 id="常见Linux指令"><a href="#常见Linux指令" class="headerlink" title="常见Linux指令"></a>常见Linux指令</h2><h3 id="关机-amp-重启-amp-登录-amp-注销"><a href="#关机-amp-重启-amp-登录-amp-注销" class="headerlink" title="关机&amp;重启&amp;登录&amp;注销"></a>关机&amp;重启&amp;登录&amp;注销</h3><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td>shutdown -h now</td><td>立刻关机</td></tr><tr><td>shutdown -h 1</td><td>一分钟后关机</td></tr><tr><td>shutdown -r now</td><td>立刻重启</td></tr><tr><td>halt</td><td>关机</td></tr><tr><td>reboot</td><td>重启</td></tr><tr><td>sync</td><td>把内存数据同步到磁盘</td></tr><tr><td>su - 用户名</td><td>切换管理员身份</td></tr><tr><td>logout</td><td>注销用户</td></tr></tbody></table><p>注意细节：<br>1.不管重启或是关机，首先运行sync，虽然会自动调用，小心驶得万年船<br>2.logout指令在图形运行级别无效</p><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><p>Linux是一个多用户多任务的操作系统</p><p>只有一个root用户，可以创建许多普通用户</p><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td>useradd 用户名</td><td>添加用户</td></tr><tr><td>passwd 用户名</td><td>指定、修改密码</td></tr><tr><td>userdel 用户名</td><td>删除用户，保留家目录</td></tr><tr><td>userdel -r 用户名</td><td>删除用户以及对应主目录</td></tr><tr><td>id 用户名</td><td>查询用户信息</td></tr><tr><td>su - 用户名</td><td>切换用户</td></tr><tr><td>whoami&#x2F;who am i</td><td>查看当前用户&#x2F;登录用户</td></tr></tbody></table><p><img src="https://s2.loli.net/2023/03/12/nIWbwQapUcLty9f.png" alt="whoami.png"></p><p>注意细节:<br>1.创建用户成功后，自动创建与用户名同名家目录，使用该用户登录，自动切换至该用户目录下<br>2.useradd -d 指定目录 用户名，为新创建的用户指定家目录<br>3.从权限高用户切换至权限低用户，无需密码，反之需要<br>4.切换回原来用户时，使用exit&#x2F;logout指令</p><h4 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h4><p>类似于角色，系统可以对有共性&#x2F;权限的多个用户进行统一的管理</p><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td>groupadd 组名</td><td>新增组</td></tr><tr><td>groupdel 组名</td><td>删除组</td></tr><tr><td>useradd -g 用户组 用户名</td><td>增加用户时直接加上指定组</td></tr><tr><td>usermod -g 用户组 用户名</td><td>修改用户的组</td></tr></tbody></table><p>通过分组方式，给组赋予权限，组内用户都拥有该权限<br>不指定组，创建同名组，并加入改组<br>一个用户只能属于一个组？</p><h5 id="用户和组相关文件"><a href="#用户和组相关文件" class="headerlink" title="用户和组相关文件"></a>用户和组相关文件</h5><p>&#x2F;etc&#x2F;passwd文件<br>user配置文件，记录用户各种信息<br>用户名：口令：用户标记号：组标记号：注释性描述：主目录：登录shell</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">oseasy:x:1000:1000:oseasy,,,:/home/oseasy:/bin/bash</span><br></pre></td></tr></table></figure><p>&#x2F;etc&#x2F;shadow<br>口令配置文件<br>登录名：加密口令：……</p><p>&#x2F;etc&#x2F;group<br>组的配置文件，包含Linux组的信息</p><h3 id="运行级别"><a href="#运行级别" class="headerlink" title="运行级别"></a>运行级别</h3><p>0：关机<br>1：单用户<br>2：多用户无网络<br>3：多用户有网络服务<br>4：保留<br>5：图形界面<br>6：重启</p><p>常用为3和5</p><p>Ubuntu 18.04 LTS图形界面使用init 3后进入多用户有网络服务，但明显出现乱码问题，init 5试图回到图形界面，报错</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Failed to open /dev/initctl:****</span><br><span class="line">Failed to talk to init daemon.</span><br></pre></td></tr></table></figure><p>似乎就无法调用相关操作和文件了</p><p>好在init 6仍然适用，重启进入默认运行级别回到图形界面</p><h3 id="找回root密码"><a href="#找回root密码" class="headerlink" title="找回root密码"></a>找回root密码</h3><p>对着指令敲，实机操作</p><h3 id="帮助指令"><a href="#帮助指令" class="headerlink" title="帮助指令"></a>帮助指令</h3><p>man 获得帮助信息</p><p>help 获得shell内置命令的帮助信息</p><h5 id="man和help的区别？"><a href="#man和help的区别？" class="headerlink" title="man和help的区别？"></a>man和help的区别？</h5><p>可通过以下指令自行体会两者区别</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">man man</span><br><span class="line">help help</span><br></pre></td></tr></table></figure><p>拓展：<br>在Linux下，隐藏文件以.开头<br>查看目录下的文件使用ls<br>ls -a列出所有，包括隐藏文件<br>ls -l单行显示<br>选项可组合使用，如ls -al，ls -la</p><h3 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h3><table><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td>pwd</td><td>显示当前工作目录绝对路径</td></tr><tr><td>ls <code>[选项]</code></td><td>显示目录或文件</td></tr><tr><td>cd <code>[目录]</code></td><td>切换到指定目录</td></tr><tr><td>mkdir <code>[目录]</code></td><td>创建目录</td></tr><tr><td>mkdir -p <code>[目录]</code></td><td>创建多级目录</td></tr><tr><td>rmdir <code>[目录]</code></td><td>删除空目录</td></tr><tr><td>rm -rf <code>[目录]</code></td><td>删除非空目录不提示（删除需谨慎）</td></tr><tr><td>rm -r <code>[文件或目录]</code></td><td>递归删除整个文件夹</td></tr><tr><td>rm -f <code>[文件或目录]</code></td><td>强制删除不提示</td></tr><tr><td>touch <code>[文件]</code></td><td>创建空文件</td></tr><tr><td>cp <code>[选项]</code> source dest</td><td>拷贝文件到指定目录</td></tr><tr><td>mv</td><td>移动文件与目录或重命名</td></tr></tbody></table><h5 id="目录的创建与删除"><a href="#目录的创建与删除" class="headerlink" title="目录的创建与删除"></a>目录的创建与删除</h5><p><img src="https://s2.loli.net/2023/03/12/QoGgFY8df4RwbzX.png" alt="linux-dir.png"></p><p>拓：<br>绝对路径以根目录为起始目录<br>相对路径以当前目录为起始目录</p><p>cd ~或者cd :回到家目录<br>cd ..返回上一级目录</p><p>cp -r source dest递归拷贝目录<br>\cp 同名直接覆盖，不需要问讯</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>折腾日志</title>
      <link href="/2023/03/09/%E6%8A%98%E8%85%BE%E6%97%A5%E5%BF%97/"/>
      <url>/2023/03/09/%E6%8A%98%E8%85%BE%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>折腾日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-03-11</p></div></div><div class='timeline-item-content'><p>新的电源到了，终于可以好好看看这台主机了。由于之前购买硬盘预装了Windows7，先来跑个鲁大师。帧数高达0.9帧，跑分“高达”9万分，击败全国百分之四用户！</p><p>看一下B站视频试试，也算是挺流畅，将清晰度调至1080p，也没有什么压力。就是看视频CPU占用就没低于90过，基本就是100，由于是2G内存条，针对浏览器这种，自然还是占用几乎跑满。</p><p>不过浏览文字，CPU就好像下班了，占用不超过3%，我估计还是因为显卡性能太拉的原因，导致播放视频只能CPU多出点力。</p><p>筹谋许久，就是能在物理机上体验一把Linux的发行版。继上次为pine a64装上armbian系统后，这是我第二次尝试装系统，所选择的系统为Debian。</p><p>仔细看了IT侠的安装系统教程以及在B站看了大量学习教程后，说实话，我还是没底……</p><p>光是系统在那下载我都十分费解（呜呜，确实不知道）在官网这里跳到那里。最后找到一份较为靠谱的教程，也总算是看见了曙光。Debian官网、清华源我都尝试了一下，下载速度都挺慢的。怎么能忘了<a href="https://mirrors.nju.edu.cn/debian-cd/11.6.0/amd64/iso-cd/">NJU镜像源</a>？<br><img src="https://s2.loli.net/2023/03/11/2VayevtRNcFHzgD.png" alt="23.3.11-3.png"><br>我甚至怀疑有没有一秒，几乎是瞬间下载完毕，太香啦。</p><p>其实我是买了专门装系统的U盘的，最近其实入手了几块U盘了，海康的x302s，金士顿的dtkn，铠侠的u301，我也不知道怎么回事，买了一块还想买。u301买来就是打算当装机盘的，不过到手后，官网说只支持win10以上版本还有macOS高版本？我也没理解他说的啥意思。其实想来，我身边还有一块随我几年的老兵。从高中时就服役了，里面也几乎没有资料。但容量只有可怜的4GB，不过看我找到的那篇教程，4G也够用了。所以权衡之下，这次实验还是得牺牲他了。</p><p>镜像写入工具采用的是IT侠推荐的软碟通。在耗费了两个多小时后，终于装上了系统。（也算是借此机会学习了一下装机吧）期间还出了点状况，缺少rtl_nic&#x2F;rtl8168e-3.fw固件，好像是因为这是non-free的？好在在Debian官网找到相关<a href="https://packages.debian.org/bullseye/firmware-realtek">网卡固件</a>，插入另一U盘补齐固件问题得以解决。</p><p>不得不讲，系统安装是真慢，即使换了南大镜像，也花费了两个多小时。桌面环境采用Xfce，听说它极度轻便。至此，可以开始体验Debian系统了。</p><p>不得不说，界面可以用简陋来形容（当然换了壁纸感觉舒畅不少）<br><img src="https://s2.loli.net/2023/03/11/Av9grYhWwzDuHEL.png" alt="first.png"><br>打开火狐，观看B站，1080p下比我想象的糟糕，卡顿较为严重。调整桌面图标时，搞不懂每次点开怎么都要抖一下。自带的vi编辑器也是用的让我怀疑人生，测试了一下网速，只有100出头，要知道win7下可以跑700-800，十分奇怪，而且延迟抖动也有些严重。是我什么地方没配好？我不理解。</p><p>初步体验下来，我觉得它甚至没有Windows7轻便，不适应的地方也有很多，不过或许也只是我还没真正了解这款伟大的操作系统，还没有能够将它调试的很好，还没有足够的Linux知识储备……</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-03-09</p></div></div><div class='timeline-item-content'><p>dc电源可能确实老化了也不知咋地，接头处都冒烟了，也不敢用喽。宿舍其余人已将我列为危险分子了。又要开销一笔，难受。计划是给它装一个实机的Debian，虽然感觉它现在运行Windows7也挺流畅的，不过买来就是体验Linux的妙用的。希望能倒腾出些乐趣吧。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-02-19</p></div></div><div class='timeline-item-content'><p>小黄鱼购得的1037u小主机到了，同时到的还有淘宝购入的一块机械硬盘，我傻逼了，之前没问清楚，他预留的硬盘位是2.5寸的硬盘和一个msata。甚至卖家SATA供电线都没给我，恼！更想不到的是通电之后没反应，不过好在后来解决了，也成功进入了bios。不过适配器接头处碰了一下之后就有明显电流滋滋声。又买了块msata，等两天吧。往垃圾上加垃圾真是件令人心痛的事。</p><p>接口方面，两个usb3.0，两个usb2.0，两个sata接口，一个msata接口，一个千兆网口，一个vga接口，一个HDMI接口，也算是接口齐全吧。</p><p>第一次当垃圾佬，啧啧啧。当时以为捡了个漏，现在看来，市面上还有一个全部配件齐全包括电源、无线网卡，32g固态，250g机械的也才160包邮，或许之前应该去买那个的。</p></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 垃圾回收站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据链路层</title>
      <link href="/2022/11/24/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
      <url>/2022/11/24/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h1><p><img src="https://s2.loli.net/2023/03/10/AG82roydpSb1UPZ.png" alt="计算机网络3.png"></p><!-- ![数据链路层](https://git.nju.edu.cn/211250026/picture/-/raw/main/blog_picture/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C3.png) --><p>详细思维导图见<a href="https://kdocs.cn/l/cfBHZy8bqWls">https://kdocs.cn/l/cfBHZy8bqWls</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp面向对象</title>
      <link href="/2022/11/24/Cpp%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
      <url>/2022/11/24/Cpp%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cpp </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网物理层</title>
      <link href="/2022/11/19/%E8%AE%A1%E7%BD%91%E7%89%A9%E7%90%86%E5%B1%82/"/>
      <url>/2022/11/19/%E8%AE%A1%E7%BD%91%E7%89%A9%E7%90%86%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络物理层"><a href="#计算机网络物理层" class="headerlink" title="计算机网络物理层"></a>计算机网络物理层</h1><p><img src="https://s2.loli.net/2023/03/10/aTWJscEbKfv5jry.png" alt="计网物理层"></p><!-- ![计网物理层](https://git.nju.edu.cn/211250026/picture/-/raw/main/blog_picture/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C2.png) --><p>详细思维导图见<a href="https://kdocs.cn/l/cdEZrFdWdHtj">https://kdocs.cn/l/cdEZrFdWdHtj</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp-STL</title>
      <link href="/2022/11/13/Cpp-STL/"/>
      <url>/2022/11/13/Cpp-STL/</url>
      
        <content type="html"><![CDATA[<h1 id="STL"><a href="#STL" class="headerlink" title="STL"></a>STL</h1><h2 id="什么是STL？"><a href="#什么是STL？" class="headerlink" title="什么是STL？"></a>什么是STL？</h2><p>C++ STL（标准模板库）是一套功能强大的 C++ 模板类，提供了通用的模板类和函数，这些模板类和函数可以实现多种流行和常用的算法和数据结构，如向量、链表、队列、栈。</p><h2 id="vector"><a href="#vector" class="headerlink" title="vector"></a>vector</h2><p>向量：与数组十分相似，唯一不同的是，向量在需要扩展大小的时候，会自动处理它自己的存储需求，相当于一个自动的动态数组</p><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;vector&gt;</span><br></pre></td></tr></table></figure><h3 id="基本方法"><a href="#基本方法" class="headerlink" title="基本方法"></a>基本方法</h3><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>vector.push_back(T)</td><td></td></tr></tbody></table><h2 id="queue"><a href="#queue" class="headerlink" title="queue"></a>queue</h2><p>队列：先进先出的一种结构，就类似于生活中排队打饭，排在排头的人先打到饭菜离开</p><h3 id="头文件-1"><a href="#头文件-1" class="headerlink" title="头文件"></a>头文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;queue&gt;</span><br></pre></td></tr></table></figure><h3 id="基本方法-1"><a href="#基本方法-1" class="headerlink" title="基本方法"></a>基本方法</h3><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>queue.pop()</td><td>弹出队首的元素</td></tr><tr><td>queue.push(T)</td><td>队尾加入一个元素</td></tr><tr><td>queue.front()</td><td>队首元素</td></tr><tr><td>queue.empty()</td><td>队列是否为空</td></tr><tr><td>queue.size()</td><td>队列的大小</td></tr><tr><td>queue.back()</td><td>队尾元素</td></tr></tbody></table><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>一行内输入一串整数，以0结束，以空格间隔。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>按照输入顺序输出这一串数字，以空格间隔</p><h4 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h4><h5 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12 26 3 10 20 0</span><br></pre></td></tr></table></figure><h5 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12 26 3 10 20</span><br></pre></td></tr></table></figure><h5 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//先进先出，使用队列</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span><span class="comment">//头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> cnt[<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">queue&lt;<span class="type">int</span>&gt; q;<span class="comment">//初始化队列 </span></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; cnt[i])&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt[i] == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">q.<span class="built_in">push</span>(cnt[i]);<span class="comment">//队尾加入元素 </span></span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;<span class="comment">//判断队列是否为空</span></span><br><span class="line">cout &lt;&lt; q.<span class="built_in">front</span>() &lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">//输出队首元素</span></span><br><span class="line">q.<span class="built_in">pop</span>();<span class="comment">//弹出队首元素 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12 26 3 10 20 0</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12 26 3 10 20</span><br></pre></td></tr></table></figure><h2 id="deque"><a href="#deque" class="headerlink" title="deque"></a>deque</h2><p>双队列：不同于queue，双队列的队首以及队尾均可对元素进行增删改查</p><h3 id="头文件-2"><a href="#头文件-2" class="headerlink" title="头文件"></a>头文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;deque&gt;</span><br></pre></td></tr></table></figure><h3 id="基本方法-2"><a href="#基本方法-2" class="headerlink" title="基本方法"></a>基本方法</h3><table><thead><tr><th>基本操作</th><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>插入操作</td><td>deque.push_front(T)</td><td>队首插入元素</td></tr><tr><td></td><td>deque.push_back(T)</td><td>队尾插入元素</td></tr><tr><td></td><td>deque.insert(pos, val)</td><td>指定位置pos，插入元素val</td></tr><tr><td></td><td>deque.insert(pos, n, val)</td><td>在指定位置pos插入n个元素val</td></tr><tr><td></td><td>deque.insert(pos, deque2.begin(), deque2.end())</td><td>在pos位置插入另一个队列（左闭右开）</td></tr><tr><td>删除操作</td><td>deque.pop_front()</td><td>弹出队首元素</td></tr><tr><td></td><td>deque.pop_back()</td><td>弹出队尾元素</td></tr><tr><td></td><td>deque.clear()</td><td>清空队列所有元素</td></tr><tr><td></td><td>deque.erase(pos)</td><td>删除pos对应位置数据</td></tr><tr><td></td><td>deque.erase(begin, end)</td><td>删除该区间上的元素（左闭右开）</td></tr><tr><td>存取操作</td><td>deque.back()</td><td>访问队尾元素</td></tr><tr><td></td><td>deque.front()</td><td>访问队首元素</td></tr><tr><td></td><td><code>deque.at</code>(index)</td><td>访问指定下标的元素</td></tr><tr><td></td><td>deque[<code>i</code>]</td><td>访问指定下标元素</td></tr><tr><td>容量操作</td><td>deque.empty()</td><td>判断是否为空</td></tr><tr><td></td><td>deque.size()</td><td>双队列中元素的个数</td></tr><tr><td></td><td>deque.resize(num)</td><td>重新指定双队列的大小，不足以默认值填充，超过删除超过部分</td></tr><tr><td></td><td>deque.resize(num, val)</td><td>重新指定双队列的大小，不足以val填充，超过删除超过部分</td></tr><tr><td>排序操作</td><td>sort(itr.begin(), itr.end())</td><td>对其中元素进行排序</td></tr></tbody></table><h3 id="双向队列"><a href="#双向队列" class="headerlink" title="双向队列"></a>双向队列</h3><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>一行输入一个数字N用于表示数组大小，输入N个数字</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>以双向列表的形式通过三种不同方式输出数组中所有元素</p><h4 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h4><h5 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">10 6 260 1000 36 0</span><br></pre></td></tr></table></figure><h5 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 6 260 1000 36 0</span><br><span class="line">10 6 260 1000 36 0</span><br><span class="line">10 6 260 1000 36 0</span><br></pre></td></tr></table></figure><h5 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;deque&gt;</span><span class="comment">//头文件 </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">deque&lt;<span class="type">int</span>&gt; d;<span class="comment">//初始化双向队列 </span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line">cin &gt;&gt; num;</span><br><span class="line"><span class="type">int</span> *n = <span class="keyword">new</span> <span class="type">int</span>[num];<span class="comment">//new 一块内存空间申请动态数组 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n[i];</span><br><span class="line">d.<span class="built_in">push_back</span>(n[i]);<span class="comment">//双队列结尾插入元素 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; d.<span class="built_in">size</span>(); i++)<span class="comment">//获取双向队列中元素个数 </span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; d[i] &lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">//以下标方式访问元素 </span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; d.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; d.<span class="built_in">at</span>(i) &lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">//以at方式访问元素 </span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(deque&lt;<span class="type">int</span>&gt;::iterator it = d.<span class="built_in">begin</span>(); it != d.<span class="built_in">end</span>(); it++)<span class="comment">//迭代器 </span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">//以迭代器方式访问元素 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br><span class="line">10 6 260 1000 36 0</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10 6 260 1000 36 0</span><br><span class="line">10 6 260 1000 36 0</span><br><span class="line">10 6 260 1000 36 0</span><br></pre></td></tr></table></figure><h2 id="stack"><a href="#stack" class="headerlink" title="stack"></a>stack</h2><p>栈：先进后出的一种结构，现实生活中类似于从下至上叠加椅子，将椅子从上至下取下的过程</p><h3 id="头文件-3"><a href="#头文件-3" class="headerlink" title="头文件"></a>头文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;stack&gt;</span><br></pre></td></tr></table></figure><h3 id="基本方法-3"><a href="#基本方法-3" class="headerlink" title="基本方法"></a>基本方法</h3><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>stack.pop()</td><td>弹栈</td></tr><tr><td>stack.push(T)</td><td>压栈</td></tr><tr><td>stack.top()</td><td>栈顶元素</td></tr><tr><td>stack.empty()</td><td>栈是否为空</td></tr><tr><td>stack.size()</td><td>栈的大小</td></tr></tbody></table><h3 id="数字游戏"><a href="#数字游戏" class="headerlink" title="数字游戏"></a>数字游戏</h3><h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>一行内输入一串整数，以 0 结束，以空格间隔。</p><h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>一行内倒着输出这一串整数，以空格间隔。</p><h4 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h4><h5 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 65 23 5 34 1 30 0</span><br></pre></td></tr></table></figure><h5 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">30 1 34 5 23 65 3</span><br></pre></td></tr></table></figure><h5 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//先进后出，经典栈结构</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> cnt[<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">stack&lt;<span class="type">int</span>&gt; s;<span class="comment">//定义栈</span></span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; cnt[i])&#123;</span><br><span class="line"><span class="keyword">if</span>(cnt[i] == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">s.<span class="built_in">push</span>(cnt[i]);<span class="comment">//压栈</span></span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!s.<span class="built_in">empty</span>())&#123;<span class="comment">//判断栈是否为空</span></span><br><span class="line">cout &lt;&lt; s.<span class="built_in">top</span>() &lt;&lt; <span class="string">&quot; &quot;</span>;<span class="comment">//输出栈顶元素</span></span><br><span class="line">s.<span class="built_in">pop</span>();<span class="comment">//弹栈</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3 65 23 5 34 1 30 0</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">30 1 34 5 23 65 3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cpp </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cpp基础</title>
      <link href="/2022/11/10/Cpp%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/11/10/Cpp%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h1><h2 id="I-x2F-O头文件"><a href="#I-x2F-O头文件" class="headerlink" title="I&#x2F;O头文件"></a>I&#x2F;O头文件</h2><table><thead><tr><th align="center">头文件</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>&lt;iostream&gt;</code></td><td align="center">包含标准输入流cin、标准输出流cout、非缓冲标准错误流cerr和缓冲标准错误流clog。</td></tr><tr><td align="center"><code>&lt;iomanip&gt;</code></td><td align="center">通过所谓的参数化的流操纵器（比如 setw 和 setprecision），来声明对执行标准化 I&#x2F;O 有用的服务</td></tr><tr><td align="center"><code>&lt;fstream&gt;</code></td><td align="center">为用户控制的文件处理声明服务</td></tr></tbody></table><p>注：该表格取自菜鸟教程</p><p>下面来看一个标准输入输出的例子（平时也会大量使用）</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; num;<span class="comment">//标准输入num</span></span><br><span class="line">    cout &lt;&lt; num &lt;&lt; endl;<span class="comment">//标准输出num</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cpp </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网概述</title>
      <link href="/2022/11/05/%E8%AE%A1%E7%BD%91%E6%A6%82%E8%BF%B0/"/>
      <url>/2022/11/05/%E8%AE%A1%E7%BD%91%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络概述"><a href="#计算机网络概述" class="headerlink" title="计算机网络概述"></a>计算机网络概述</h1><p>ps:计网的知识点实在是太多太细了，写成markdown语法估计得写破防，本思维导图参考自6f老师讲课以及学长笔记。<br><img src="https://s2.loli.net/2023/03/10/jpcYFGzQeVqnmBU.png" alt="计算机网络概述.png"><br>详细思维导图见<a href="https://kdocs.cn/l/ccCKYkCIm50j">https://kdocs.cn/l/ccCKYkCIm50j</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序</title>
      <link href="/2022/11/03/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
      <url>/2022/11/03/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端笔记</title>
      <link href="/2022/10/22/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/10/22/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="什么是HTML语言"><a href="#什么是HTML语言" class="headerlink" title="什么是HTML语言"></a>什么是HTML语言</h3><p> 超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言<br> HTML语言不是一种编程语言，而是一种标签语言（类似于markdown语法）<br> 标记语言是一套标记标签</p><h3 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h3><p> 通常成对出现，分为开始标签和结束标签，当然也有单独出现的标签比如<code>&lt;br /&gt;</code></p><h3 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h3><p> HTML 标题（Heading）是通过<code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code> 标签来定义的<br> 一共有六级标题，文字加粗，依次大小减小</p><h3 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h3><p> HTML 段落是通过标签 <code>&lt;p&gt;</code> 来定义的<br> 段与段之间有较大的间距</p><h3 id="换行标签"><a href="#换行标签" class="headerlink" title="换行标签"></a>换行标签</h3><p>HTML 换行 (Break) 是通过标签<code>&lt;br /&gt;</code> 来定义的<br>单标签，即使 <code>&lt;br&gt;</code> 在所有浏览器中都是有效的，但使用 <code>&lt;br /&gt;</code> 其实是更长远的保障</p><h3 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h3><p>突出重要性，粗体、斜体、下划线等效果</p><table><thead><tr><th align="center">语义</th><th align="center">标签</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">加粗</td><td align="center"><code>&lt;strong&gt;&lt;/strong&gt;</code> 或者 <code>&lt;b&gt;&lt;/b&gt;</code></td><td align="center">推荐使用<code>&lt;strong&gt;</code></td></tr><tr><td align="center">倾斜</td><td align="center"><code>&lt;em&gt;&lt;/em&gt;</code> 或者 <code>&lt;i&gt;&lt;/i&gt;</code></td><td align="center">推荐使用<code>&lt;em&gt;</code></td></tr><tr><td align="center">删除线</td><td align="center"><code>&lt;del&gt;&lt;/del&gt;</code> 或者 <code>&lt;s&gt;&lt;/s&gt;</code></td><td align="center">推荐使用<code>&lt;del&gt;</code></td></tr><tr><td align="center">下划线</td><td align="center"><code>&lt;ins&gt;&lt;/ins&gt;</code> 或者 <code>&lt;u&gt;&lt;/u&gt;</code></td><td align="center">推荐使用<code>&lt;ins&gt;</code></td></tr></tbody></table><h3 id="lt-div-gt-和-lt-span-gt-标签"><a href="#lt-div-gt-和-lt-span-gt-标签" class="headerlink" title="&lt;div&gt; 和 &lt;span&gt; 标签"></a><code>&lt;div&gt;</code> 和 <code>&lt;span&gt;</code> 标签</h3><p><code>&lt;div&gt;</code> 和 <code>&lt;span&gt;</code> 都没有语义，用来装内容的盒子,可以用于网页的布局<br><code>&lt;div&gt;</code>布局，一行只能放一个，大盒子<br><code>&lt;span&gt;</code>布局，一行可以放多个，小盒子</p><h3 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h3><p>HTML 图像 (image) 是通过标签<code>&lt;img&gt;</code> 来定义的</p><table><thead><tr><th align="center">属性</th><th align="center">属性值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">src</td><td align="center">图片路径</td><td align="center">必须属性</td></tr><tr><td align="center">alt</td><td align="center">文本</td><td align="center">图像不能正常显示时，替换的文本</td></tr><tr><td align="center">title</td><td align="center">文本</td><td align="center">鼠标置于图像上显示出的文字，提示的文本</td></tr><tr><td align="center">width</td><td align="center">像素</td><td align="center">宽度</td></tr><tr><td align="center">height</td><td align="center">像素</td><td align="center">高度</td></tr><tr><td align="center">border</td><td align="center">像素</td><td align="center">边框粗细</td></tr><tr><td align="center">宽度和高度可以只设定一个，等比例缩放</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">属性之间没有先后顺序，但要以空格间隔开来，采取键值对的形式，属性&#x3D;”属性值”</td><td align="center"></td><td align="center"></td></tr></tbody></table><h3 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h3><p><code>&lt;a&gt;</code>标签</p><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">href</td><td align="center">用于指定链接目标的url（必须属性）</td></tr><tr><td align="center">target</td><td align="center">用于指定链接页面的打开方式，其中_self为默认值，在原窗口打开链接，_blank为在新窗口中打开方式</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
